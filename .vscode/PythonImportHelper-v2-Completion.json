[
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "DynamoDBBase",
        "importPath": "app_common.dynamodb_utils",
        "description": "app_common.dynamodb_utils",
        "isExtraImport": true,
        "detail": "app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "DynamoDBBase",
        "importPath": "app_common.dynamodb_utils",
        "description": "app_common.dynamodb_utils",
        "isExtraImport": true,
        "detail": "app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "DynamoDBBase",
        "importPath": "app_common.dynamodb_utils",
        "description": "app_common.dynamodb_utils",
        "isExtraImport": true,
        "detail": "app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "DynamoDBBase",
        "importPath": "app_common.dynamodb_utils",
        "description": "app_common.dynamodb_utils",
        "isExtraImport": true,
        "detail": "app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "DynamoDBBase",
        "importPath": "app_common.dynamodb_utils",
        "description": "app_common.dynamodb_utils",
        "isExtraImport": true,
        "detail": "app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "DynamoDBBase",
        "importPath": "app_common.dynamodb_utils",
        "description": "app_common.dynamodb_utils",
        "isExtraImport": true,
        "detail": "app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "DynamoDBBase",
        "importPath": "app_common.dynamodb_utils",
        "description": "app_common.dynamodb_utils",
        "isExtraImport": true,
        "detail": "app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "DynamoDBBase",
        "importPath": "app_common.dynamodb_utils",
        "description": "app_common.dynamodb_utils",
        "isExtraImport": true,
        "detail": "app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "DynamoDBBase",
        "importPath": "app_common.dynamodb_utils",
        "description": "app_common.dynamodb_utils",
        "isExtraImport": true,
        "detail": "app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "DynamoDBBase",
        "importPath": "app_common.dynamodb_utils",
        "description": "app_common.dynamodb_utils",
        "isExtraImport": true,
        "detail": "app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "DynamoDBBase",
        "importPath": "app_common.dynamodb_utils",
        "description": "app_common.dynamodb_utils",
        "isExtraImport": true,
        "detail": "app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "DynamoDBBase",
        "importPath": "app_common.dynamodb_utils",
        "description": "app_common.dynamodb_utils",
        "isExtraImport": true,
        "detail": "app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "DynamoDBBase",
        "importPath": "app_common.dynamodb_utils",
        "description": "app_common.dynamodb_utils",
        "isExtraImport": true,
        "detail": "app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "DynamoDBBase",
        "importPath": "app_common.dynamodb_utils",
        "description": "app_common.dynamodb_utils",
        "isExtraImport": true,
        "detail": "app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "http_request",
        "importPath": "app_common.app_utils",
        "description": "app_common.app_utils",
        "isExtraImport": true,
        "detail": "app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "_do_log",
        "importPath": "app_common.app_utils",
        "description": "app_common.app_utils",
        "isExtraImport": true,
        "detail": "app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "http_request",
        "importPath": "app_common.app_utils",
        "description": "app_common.app_utils",
        "isExtraImport": true,
        "detail": "app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "http_request",
        "importPath": "app_common.app_utils",
        "description": "app_common.app_utils",
        "isExtraImport": true,
        "detail": "app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "_do_log",
        "importPath": "app_common.app_utils",
        "description": "app_common.app_utils",
        "isExtraImport": true,
        "detail": "app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "http_request",
        "importPath": "app_common.app_utils",
        "description": "app_common.app_utils",
        "isExtraImport": true,
        "detail": "app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "http_request",
        "importPath": "app_common.app_utils",
        "description": "app_common.app_utils",
        "isExtraImport": true,
        "detail": "app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "_do_log",
        "importPath": "app_common.app_utils",
        "description": "app_common.app_utils",
        "isExtraImport": true,
        "detail": "app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "http_request",
        "importPath": "app_common.app_utils",
        "description": "app_common.app_utils",
        "isExtraImport": true,
        "detail": "app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "_do_log",
        "importPath": "app_common.app_utils",
        "description": "app_common.app_utils",
        "isExtraImport": true,
        "detail": "app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "http_request",
        "importPath": "app_common.app_utils",
        "description": "app_common.app_utils",
        "isExtraImport": true,
        "detail": "app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "_do_log",
        "importPath": "app_common.app_utils",
        "description": "app_common.app_utils",
        "isExtraImport": true,
        "detail": "app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "http_request",
        "importPath": "app_common.app_utils",
        "description": "app_common.app_utils",
        "isExtraImport": true,
        "detail": "app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "http_request",
        "importPath": "app_common.app_utils",
        "description": "app_common.app_utils",
        "isExtraImport": true,
        "detail": "app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "_do_log",
        "importPath": "app_common.app_utils",
        "description": "app_common.app_utils",
        "isExtraImport": true,
        "detail": "app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "http_request",
        "importPath": "app_common.app_utils",
        "description": "app_common.app_utils",
        "isExtraImport": true,
        "detail": "app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "http_request",
        "importPath": "app_common.app_utils",
        "description": "app_common.app_utils",
        "isExtraImport": true,
        "detail": "app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "http_request",
        "importPath": "app_common.app_utils",
        "description": "app_common.app_utils",
        "isExtraImport": true,
        "detail": "app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "_do_log",
        "importPath": "app_common.app_utils",
        "description": "app_common.app_utils",
        "isExtraImport": true,
        "detail": "app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "http_request",
        "importPath": "app_common.app_utils",
        "description": "app_common.app_utils",
        "isExtraImport": true,
        "detail": "app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "http_request",
        "importPath": "app_common.app_utils",
        "description": "app_common.app_utils",
        "isExtraImport": true,
        "detail": "app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "_do_log",
        "importPath": "app_common.app_utils",
        "description": "app_common.app_utils",
        "isExtraImport": true,
        "detail": "app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "AppRoleBO",
        "importPath": "lambdas.app_role_bo",
        "description": "lambdas.app_role_bo",
        "isExtraImport": true,
        "detail": "lambdas.app_role_bo",
        "documentation": {}
    },
    {
        "label": "AppRoleBO",
        "importPath": "lambdas.app_role_bo",
        "description": "lambdas.app_role_bo",
        "isExtraImport": true,
        "detail": "lambdas.app_role_bo",
        "documentation": {}
    },
    {
        "label": "AppRoleBO",
        "importPath": "lambdas.app_role_bo",
        "description": "lambdas.app_role_bo",
        "isExtraImport": true,
        "detail": "lambdas.app_role_bo",
        "documentation": {}
    },
    {
        "label": "BaseLambdaHandler",
        "importPath": "app_common.base_lambda_handler",
        "description": "app_common.base_lambda_handler",
        "isExtraImport": true,
        "detail": "app_common.base_lambda_handler",
        "documentation": {}
    },
    {
        "label": "BaseLambdaHandler",
        "importPath": "app_common.base_lambda_handler",
        "description": "app_common.base_lambda_handler",
        "isExtraImport": true,
        "detail": "app_common.base_lambda_handler",
        "documentation": {}
    },
    {
        "label": "BaseLambdaHandler",
        "importPath": "app_common.base_lambda_handler",
        "description": "app_common.base_lambda_handler",
        "isExtraImport": true,
        "detail": "app_common.base_lambda_handler",
        "documentation": {}
    },
    {
        "label": "BaseLambdaHandler",
        "importPath": "app_common.base_lambda_handler",
        "description": "app_common.base_lambda_handler",
        "isExtraImport": true,
        "detail": "app_common.base_lambda_handler",
        "documentation": {}
    },
    {
        "label": "BaseLambdaHandler",
        "importPath": "app_common.base_lambda_handler",
        "description": "app_common.base_lambda_handler",
        "isExtraImport": true,
        "detail": "app_common.base_lambda_handler",
        "documentation": {}
    },
    {
        "label": "BaseLambdaHandler",
        "importPath": "app_common.base_lambda_handler",
        "description": "app_common.base_lambda_handler",
        "isExtraImport": true,
        "detail": "app_common.base_lambda_handler",
        "documentation": {}
    },
    {
        "label": "BaseLambdaHandler",
        "importPath": "app_common.base_lambda_handler",
        "description": "app_common.base_lambda_handler",
        "isExtraImport": true,
        "detail": "app_common.base_lambda_handler",
        "documentation": {}
    },
    {
        "label": "BaseLambdaHandler",
        "importPath": "app_common.base_lambda_handler",
        "description": "app_common.base_lambda_handler",
        "isExtraImport": true,
        "detail": "app_common.base_lambda_handler",
        "documentation": {}
    },
    {
        "label": "BaseLambdaHandler",
        "importPath": "app_common.base_lambda_handler",
        "description": "app_common.base_lambda_handler",
        "isExtraImport": true,
        "detail": "app_common.base_lambda_handler",
        "documentation": {}
    },
    {
        "label": "BaseLambdaHandler",
        "importPath": "app_common.base_lambda_handler",
        "description": "app_common.base_lambda_handler",
        "isExtraImport": true,
        "detail": "app_common.base_lambda_handler",
        "documentation": {}
    },
    {
        "label": "BaseLambdaHandler",
        "importPath": "app_common.base_lambda_handler",
        "description": "app_common.base_lambda_handler",
        "isExtraImport": true,
        "detail": "app_common.base_lambda_handler",
        "documentation": {}
    },
    {
        "label": "BaseLambdaHandler",
        "importPath": "app_common.base_lambda_handler",
        "description": "app_common.base_lambda_handler",
        "isExtraImport": true,
        "detail": "app_common.base_lambda_handler",
        "documentation": {}
    },
    {
        "label": "BaseLambdaHandler",
        "importPath": "app_common.base_lambda_handler",
        "description": "app_common.base_lambda_handler",
        "isExtraImport": true,
        "detail": "app_common.base_lambda_handler",
        "documentation": {}
    },
    {
        "label": "BaseLambdaHandler",
        "importPath": "app_common.base_lambda_handler",
        "description": "app_common.base_lambda_handler",
        "isExtraImport": true,
        "detail": "app_common.base_lambda_handler",
        "documentation": {}
    },
    {
        "label": "jsii",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "jsii",
        "description": "jsii",
        "detail": "jsii",
        "documentation": {}
    },
    {
        "label": "aws_cdk",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Aspects",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Duration",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "IAspect",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "RemovalPolicy",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Stack",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_dynamodb",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_events",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_iam",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_lambda",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_sns",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_ssm",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Aspects",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Duration",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "IAspect",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "RemovalPolicy",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Stack",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_dynamodb",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_events",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_iam",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_lambda",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_logs",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_sns",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_ssm",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Aspects",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Duration",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "IAspect",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "RemovalPolicy",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Stack",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_dynamodb",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_events",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_iam",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_lambda",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_logs",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_sns",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_ssm",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Aspects",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Duration",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "IAspect",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "RemovalPolicy",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Stack",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_dynamodb",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_events",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_iam",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_lambda",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_sns",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_ssm",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Aspects",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Duration",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "IAspect",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "RemovalPolicy",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Stack",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_dynamodb",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_events",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_iam",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_lambda",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_logs",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_sns",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_ssm",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Aspects",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Duration",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "IAspect",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "RemovalPolicy",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Stack",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_dynamodb",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_events",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_iam",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_lambda",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_sns",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_ssm",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_dynamodb",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_sns_subscriptions",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Aspects",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Duration",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "IAspect",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "RemovalPolicy",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Stack",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_dynamodb",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_events",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_iam",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_lambda",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_logs",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_sns",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_ssm",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Aspects",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Duration",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "IAspect",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "RemovalPolicy",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Stack",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_dynamodb",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_events",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_iam",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_lambda",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_logs",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_sns",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "aws_ssm",
        "importPath": "aws_cdk",
        "description": "aws_cdk",
        "isExtraImport": true,
        "detail": "aws_cdk",
        "documentation": {}
    },
    {
        "label": "Construct",
        "importPath": "constructs",
        "description": "constructs",
        "isExtraImport": true,
        "detail": "constructs",
        "documentation": {}
    },
    {
        "label": "IConstruct",
        "importPath": "constructs",
        "description": "constructs",
        "isExtraImport": true,
        "detail": "constructs",
        "documentation": {}
    },
    {
        "label": "Construct",
        "importPath": "constructs",
        "description": "constructs",
        "isExtraImport": true,
        "detail": "constructs",
        "documentation": {}
    },
    {
        "label": "IConstruct",
        "importPath": "constructs",
        "description": "constructs",
        "isExtraImport": true,
        "detail": "constructs",
        "documentation": {}
    },
    {
        "label": "Construct",
        "importPath": "constructs",
        "description": "constructs",
        "isExtraImport": true,
        "detail": "constructs",
        "documentation": {}
    },
    {
        "label": "IConstruct",
        "importPath": "constructs",
        "description": "constructs",
        "isExtraImport": true,
        "detail": "constructs",
        "documentation": {}
    },
    {
        "label": "Construct",
        "importPath": "constructs",
        "description": "constructs",
        "isExtraImport": true,
        "detail": "constructs",
        "documentation": {}
    },
    {
        "label": "IConstruct",
        "importPath": "constructs",
        "description": "constructs",
        "isExtraImport": true,
        "detail": "constructs",
        "documentation": {}
    },
    {
        "label": "Construct",
        "importPath": "constructs",
        "description": "constructs",
        "isExtraImport": true,
        "detail": "constructs",
        "documentation": {}
    },
    {
        "label": "IConstruct",
        "importPath": "constructs",
        "description": "constructs",
        "isExtraImport": true,
        "detail": "constructs",
        "documentation": {}
    },
    {
        "label": "Construct",
        "importPath": "constructs",
        "description": "constructs",
        "isExtraImport": true,
        "detail": "constructs",
        "documentation": {}
    },
    {
        "label": "IConstruct",
        "importPath": "constructs",
        "description": "constructs",
        "isExtraImport": true,
        "detail": "constructs",
        "documentation": {}
    },
    {
        "label": "Construct",
        "importPath": "constructs",
        "description": "constructs",
        "isExtraImport": true,
        "detail": "constructs",
        "documentation": {}
    },
    {
        "label": "Construct",
        "importPath": "constructs",
        "description": "constructs",
        "isExtraImport": true,
        "detail": "constructs",
        "documentation": {}
    },
    {
        "label": "IConstruct",
        "importPath": "constructs",
        "description": "constructs",
        "isExtraImport": true,
        "detail": "constructs",
        "documentation": {}
    },
    {
        "label": "Construct",
        "importPath": "constructs",
        "description": "constructs",
        "isExtraImport": true,
        "detail": "constructs",
        "documentation": {}
    },
    {
        "label": "IConstruct",
        "importPath": "constructs",
        "description": "constructs",
        "isExtraImport": true,
        "detail": "constructs",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "decimal",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "decimal",
        "description": "decimal",
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "subprocess",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "subprocess",
        "description": "subprocess",
        "detail": "subprocess",
        "documentation": {}
    },
    {
        "label": "deque",
        "importPath": "collections",
        "description": "collections",
        "isExtraImport": true,
        "detail": "collections",
        "documentation": {}
    },
    {
        "label": "deque",
        "importPath": "collections",
        "description": "collections",
        "isExtraImport": true,
        "detail": "collections",
        "documentation": {}
    },
    {
        "label": "deque",
        "importPath": "collections",
        "description": "collections",
        "isExtraImport": true,
        "detail": "collections",
        "documentation": {}
    },
    {
        "label": "base64",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "base64",
        "description": "base64",
        "detail": "base64",
        "documentation": {}
    },
    {
        "label": "traceback",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "traceback",
        "description": "traceback",
        "detail": "traceback",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "app_utils",
        "importPath": "app_common",
        "description": "app_common",
        "isExtraImport": true,
        "detail": "app_common",
        "documentation": {}
    },
    {
        "label": "app_utils",
        "importPath": "app_common",
        "description": "app_common",
        "isExtraImport": true,
        "detail": "app_common",
        "documentation": {}
    },
    {
        "label": "app_utils",
        "importPath": "app_common",
        "description": "app_common",
        "isExtraImport": true,
        "detail": "app_common",
        "documentation": {}
    },
    {
        "label": "app_utils",
        "importPath": "app_common",
        "description": "app_common",
        "isExtraImport": true,
        "detail": "app_common",
        "documentation": {}
    },
    {
        "label": "app_utils",
        "importPath": "app_common",
        "description": "app_common",
        "isExtraImport": true,
        "detail": "app_common",
        "documentation": {}
    },
    {
        "label": "app_utils",
        "importPath": "app_common",
        "description": "app_common",
        "isExtraImport": true,
        "detail": "app_common",
        "documentation": {}
    },
    {
        "label": "app_utils",
        "importPath": "app_common",
        "description": "app_common",
        "isExtraImport": true,
        "detail": "app_common",
        "documentation": {}
    },
    {
        "label": "app_utils",
        "importPath": "app_common",
        "description": "app_common",
        "isExtraImport": true,
        "detail": "app_common",
        "documentation": {}
    },
    {
        "label": "boto3",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "boto3",
        "description": "boto3",
        "detail": "boto3",
        "documentation": {}
    },
    {
        "label": "Key",
        "importPath": "boto3.dynamodb.conditions",
        "description": "boto3.dynamodb.conditions",
        "isExtraImport": true,
        "detail": "boto3.dynamodb.conditions",
        "documentation": {}
    },
    {
        "label": "Key",
        "importPath": "boto3.dynamodb.conditions",
        "description": "boto3.dynamodb.conditions",
        "isExtraImport": true,
        "detail": "boto3.dynamodb.conditions",
        "documentation": {}
    },
    {
        "label": "Key",
        "importPath": "boto3.dynamodb.conditions",
        "description": "boto3.dynamodb.conditions",
        "isExtraImport": true,
        "detail": "boto3.dynamodb.conditions",
        "documentation": {}
    },
    {
        "label": "Key",
        "importPath": "boto3.dynamodb.conditions",
        "description": "boto3.dynamodb.conditions",
        "isExtraImport": true,
        "detail": "boto3.dynamodb.conditions",
        "documentation": {}
    },
    {
        "label": "Key",
        "importPath": "boto3.dynamodb.conditions",
        "description": "boto3.dynamodb.conditions",
        "isExtraImport": true,
        "detail": "boto3.dynamodb.conditions",
        "documentation": {}
    },
    {
        "label": "Key",
        "importPath": "boto3.dynamodb.conditions",
        "description": "boto3.dynamodb.conditions",
        "isExtraImport": true,
        "detail": "boto3.dynamodb.conditions",
        "documentation": {}
    },
    {
        "label": "Key",
        "importPath": "boto3.dynamodb.conditions",
        "description": "boto3.dynamodb.conditions",
        "isExtraImport": true,
        "detail": "boto3.dynamodb.conditions",
        "documentation": {}
    },
    {
        "label": "Key",
        "importPath": "boto3.dynamodb.conditions",
        "description": "boto3.dynamodb.conditions",
        "isExtraImport": true,
        "detail": "boto3.dynamodb.conditions",
        "documentation": {}
    },
    {
        "label": "shutil",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "shutil",
        "description": "shutil",
        "detail": "shutil",
        "documentation": {}
    },
    {
        "label": "importlib.util",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "importlib.util",
        "description": "importlib.util",
        "detail": "importlib.util",
        "documentation": {}
    },
    {
        "label": "do_deploy",
        "importPath": "app_deploy",
        "description": "app_deploy",
        "isExtraImport": true,
        "detail": "app_deploy",
        "documentation": {}
    },
    {
        "label": "do_deploy",
        "importPath": "app_deploy",
        "description": "app_deploy",
        "isExtraImport": true,
        "detail": "app_deploy",
        "documentation": {}
    },
    {
        "label": "do_deploy",
        "importPath": "app_deploy",
        "description": "app_deploy",
        "isExtraImport": true,
        "detail": "app_deploy",
        "documentation": {}
    },
    {
        "label": "do_deploy",
        "importPath": "app_deploy",
        "description": "app_deploy",
        "isExtraImport": true,
        "detail": "app_deploy",
        "documentation": {}
    },
    {
        "label": "do_deploy",
        "importPath": "app_deploy",
        "description": "app_deploy",
        "isExtraImport": true,
        "detail": "app_deploy",
        "documentation": {}
    },
    {
        "label": "do_deploy",
        "importPath": "app_deploy",
        "description": "app_deploy",
        "isExtraImport": true,
        "detail": "app_deploy",
        "documentation": {}
    },
    {
        "label": "do_deploy",
        "importPath": "app_deploy",
        "description": "app_deploy",
        "isExtraImport": true,
        "detail": "app_deploy",
        "documentation": {}
    },
    {
        "label": "do_deploy",
        "importPath": "app_deploy",
        "description": "app_deploy",
        "isExtraImport": true,
        "detail": "app_deploy",
        "documentation": {}
    },
    {
        "label": "do_install_req",
        "importPath": "app_install_reqs",
        "description": "app_install_reqs",
        "isExtraImport": true,
        "detail": "app_install_reqs",
        "documentation": {}
    },
    {
        "label": "do_install_req",
        "importPath": "app_install_reqs",
        "description": "app_install_reqs",
        "isExtraImport": true,
        "detail": "app_install_reqs",
        "documentation": {}
    },
    {
        "label": "do_install_req",
        "importPath": "app_install_reqs",
        "description": "app_install_reqs",
        "isExtraImport": true,
        "detail": "app_install_reqs",
        "documentation": {}
    },
    {
        "label": "do_install_req",
        "importPath": "app_install_reqs",
        "description": "app_install_reqs",
        "isExtraImport": true,
        "detail": "app_install_reqs",
        "documentation": {}
    },
    {
        "label": "do_install_req",
        "importPath": "app_install_reqs",
        "description": "app_install_reqs",
        "isExtraImport": true,
        "detail": "app_install_reqs",
        "documentation": {}
    },
    {
        "label": "do_install_req",
        "importPath": "app_install_reqs",
        "description": "app_install_reqs",
        "isExtraImport": true,
        "detail": "app_install_reqs",
        "documentation": {}
    },
    {
        "label": "do_install_req",
        "importPath": "app_install_reqs",
        "description": "app_install_reqs",
        "isExtraImport": true,
        "detail": "app_install_reqs",
        "documentation": {}
    },
    {
        "label": "do_install_req",
        "importPath": "app_install_reqs",
        "description": "app_install_reqs",
        "isExtraImport": true,
        "detail": "app_install_reqs",
        "documentation": {}
    },
    {
        "label": "do_reset_venv",
        "importPath": "app_reset_venv",
        "description": "app_reset_venv",
        "isExtraImport": true,
        "detail": "app_reset_venv",
        "documentation": {}
    },
    {
        "label": "do_reset_venv",
        "importPath": "app_reset_venv",
        "description": "app_reset_venv",
        "isExtraImport": true,
        "detail": "app_reset_venv",
        "documentation": {}
    },
    {
        "label": "do_reset_venv",
        "importPath": "app_reset_venv",
        "description": "app_reset_venv",
        "isExtraImport": true,
        "detail": "app_reset_venv",
        "documentation": {}
    },
    {
        "label": "do_reset_venv",
        "importPath": "app_reset_venv",
        "description": "app_reset_venv",
        "isExtraImport": true,
        "detail": "app_reset_venv",
        "documentation": {}
    },
    {
        "label": "do_reset_venv",
        "importPath": "app_reset_venv",
        "description": "app_reset_venv",
        "isExtraImport": true,
        "detail": "app_reset_venv",
        "documentation": {}
    },
    {
        "label": "do_reset_venv",
        "importPath": "app_reset_venv",
        "description": "app_reset_venv",
        "isExtraImport": true,
        "detail": "app_reset_venv",
        "documentation": {}
    },
    {
        "label": "do_reset_venv",
        "importPath": "app_reset_venv",
        "description": "app_reset_venv",
        "isExtraImport": true,
        "detail": "app_reset_venv",
        "documentation": {}
    },
    {
        "label": "do_reset_venv",
        "importPath": "app_reset_venv",
        "description": "app_reset_venv",
        "isExtraImport": true,
        "detail": "app_reset_venv",
        "documentation": {}
    },
    {
        "label": "do_run_tests",
        "importPath": "app_test",
        "description": "app_test",
        "isExtraImport": true,
        "detail": "app_test",
        "documentation": {}
    },
    {
        "label": "do_run_tests",
        "importPath": "app_test",
        "description": "app_test",
        "isExtraImport": true,
        "detail": "app_test",
        "documentation": {}
    },
    {
        "label": "do_run_tests",
        "importPath": "app_test",
        "description": "app_test",
        "isExtraImport": true,
        "detail": "app_test",
        "documentation": {}
    },
    {
        "label": "do_run_tests",
        "importPath": "app_test",
        "description": "app_test",
        "isExtraImport": true,
        "detail": "app_test",
        "documentation": {}
    },
    {
        "label": "do_run_tests",
        "importPath": "app_test",
        "description": "app_test",
        "isExtraImport": true,
        "detail": "app_test",
        "documentation": {}
    },
    {
        "label": "do_run_tests",
        "importPath": "app_test",
        "description": "app_test",
        "isExtraImport": true,
        "detail": "app_test",
        "documentation": {}
    },
    {
        "label": "do_run_tests",
        "importPath": "app_test",
        "description": "app_test",
        "isExtraImport": true,
        "detail": "app_test",
        "documentation": {}
    },
    {
        "label": "do_run_tests",
        "importPath": "app_test",
        "description": "app_test",
        "isExtraImport": true,
        "detail": "app_test",
        "documentation": {}
    },
    {
        "label": "AppRoleBO",
        "importPath": "app_role_bo",
        "description": "app_role_bo",
        "isExtraImport": true,
        "detail": "app_role_bo",
        "documentation": {}
    },
    {
        "label": "AppRoleBO",
        "importPath": "app_role_bo",
        "description": "app_role_bo",
        "isExtraImport": true,
        "detail": "app_role_bo",
        "documentation": {}
    },
    {
        "label": "AppRoleBO",
        "importPath": "app_role_bo",
        "description": "app_role_bo",
        "isExtraImport": true,
        "detail": "app_role_bo",
        "documentation": {}
    },
    {
        "label": "AppRoleBO",
        "importPath": "app_role_bo",
        "description": "app_role_bo",
        "isExtraImport": true,
        "detail": "app_role_bo",
        "documentation": {}
    },
    {
        "label": "AppRoleBO",
        "importPath": "app_role_bo",
        "description": "app_role_bo",
        "isExtraImport": true,
        "detail": "app_role_bo",
        "documentation": {}
    },
    {
        "label": "AppRoleBO",
        "importPath": "app_role_bo",
        "description": "app_role_bo",
        "isExtraImport": true,
        "detail": "app_role_bo",
        "documentation": {}
    },
    {
        "label": "AppRoleBO",
        "importPath": "app_role_bo",
        "description": "app_role_bo",
        "isExtraImport": true,
        "detail": "app_role_bo",
        "documentation": {}
    },
    {
        "label": "AppRoleBO",
        "importPath": "app_role_bo",
        "description": "app_role_bo",
        "isExtraImport": true,
        "detail": "app_role_bo",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "UserLongTermMemoryBO",
        "importPath": "long_memory_bo",
        "description": "long_memory_bo",
        "isExtraImport": true,
        "detail": "long_memory_bo",
        "documentation": {}
    },
    {
        "label": "UserLongTermMemoryBO",
        "importPath": "long_memory_bo",
        "description": "long_memory_bo",
        "isExtraImport": true,
        "detail": "long_memory_bo",
        "documentation": {}
    },
    {
        "label": "UserLongTermMemoryBO",
        "importPath": "long_memory_bo",
        "description": "long_memory_bo",
        "isExtraImport": true,
        "detail": "long_memory_bo",
        "documentation": {}
    },
    {
        "label": "UserLongTermMemoryBO",
        "importPath": "long_memory_bo",
        "description": "long_memory_bo",
        "isExtraImport": true,
        "detail": "long_memory_bo",
        "documentation": {}
    },
    {
        "label": "UserLongTermMemoryBO",
        "importPath": "long_memory_bo",
        "description": "long_memory_bo",
        "isExtraImport": true,
        "detail": "long_memory_bo",
        "documentation": {}
    },
    {
        "label": "UserLongTermMemoryBO",
        "importPath": "long_memory_bo",
        "description": "long_memory_bo",
        "isExtraImport": true,
        "detail": "long_memory_bo",
        "documentation": {}
    },
    {
        "label": "AppCommonStack",
        "importPath": "app_common.app_common_stack",
        "description": "app_common.app_common_stack",
        "isExtraImport": true,
        "detail": "app_common.app_common_stack",
        "documentation": {}
    },
    {
        "label": "aws_cdk.assertions",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "aws_cdk.assertions",
        "description": "aws_cdk.assertions",
        "detail": "aws_cdk.assertions",
        "documentation": {}
    },
    {
        "label": "KnowledgeManagerStack",
        "importPath": "knowledge_manager.knowledge_manager_stack",
        "description": "knowledge_manager.knowledge_manager_stack",
        "isExtraImport": true,
        "detail": "knowledge_manager.knowledge_manager_stack",
        "documentation": {}
    },
    {
        "label": "KnowledgeManagerStack",
        "importPath": "knowledge_manager.knowledge_manager_stack",
        "description": "knowledge_manager.knowledge_manager_stack",
        "isExtraImport": true,
        "detail": "knowledge_manager.knowledge_manager_stack",
        "documentation": {}
    },
    {
        "label": "argparse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "argparse",
        "description": "argparse",
        "detail": "argparse",
        "documentation": {}
    },
    {
        "label": "pformat",
        "importPath": "pprint",
        "description": "pprint",
        "isExtraImport": true,
        "detail": "pprint",
        "documentation": {}
    },
    {
        "label": "jmespath",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "jmespath",
        "description": "jmespath",
        "detail": "jmespath",
        "documentation": {}
    },
    {
        "label": "exceptions",
        "importPath": "jmespath",
        "description": "jmespath",
        "isExtraImport": true,
        "detail": "jmespath",
        "documentation": {}
    },
    {
        "label": "AppRole",
        "kind": 6,
        "importPath": "cdk.out.asset.00920b1f25cd646e584bc366718eb0676799983cf07ab46e8834de60c8d90f37.app_role_bo",
        "description": "cdk.out.asset.00920b1f25cd646e584bc366718eb0676799983cf07ab46e8834de60c8d90f37.app_role_bo",
        "peekOfCode": "class AppRole:\n    \"\"\"\n    Represents a AppRole entity.\n    \"\"\"\n    def __init__(\n        self,\n        app_id: str,\n        role_source: str,\n    ) -> None:\n        self.app_id = app_id",
        "detail": "cdk.out.asset.00920b1f25cd646e584bc366718eb0676799983cf07ab46e8834de60c8d90f37.app_role_bo",
        "documentation": {}
    },
    {
        "label": "AppRoleBO",
        "kind": 6,
        "importPath": "cdk.out.asset.00920b1f25cd646e584bc366718eb0676799983cf07ab46e8834de60c8d90f37.app_role_bo",
        "description": "cdk.out.asset.00920b1f25cd646e584bc366718eb0676799983cf07ab46e8834de60c8d90f37.app_role_bo",
        "peekOfCode": "class AppRoleBO(DynamoDBBase):\n    \"\"\"Business object for the AppRole entity.\"\"\"\n    def get_role_content(self, app_id: str) -> str:\n        \"\"\"\n        Retrieves the role content for the specified application.\n        \"\"\"\n        role_source = self.get_role_source(app_id)\n        if not role_source:\n            return None\n        role_content = self._load_url_content_as_text(role_source)",
        "detail": "cdk.out.asset.00920b1f25cd646e584bc366718eb0676799983cf07ab46e8834de60c8d90f37.app_role_bo",
        "documentation": {}
    },
    {
        "label": "KnowledgeRetriever",
        "kind": 6,
        "importPath": "cdk.out.asset.00920b1f25cd646e584bc366718eb0676799983cf07ab46e8834de60c8d90f37.knowledge_retriever",
        "description": "cdk.out.asset.00920b1f25cd646e584bc366718eb0676799983cf07ab46e8834de60c8d90f37.knowledge_retriever",
        "peekOfCode": "class KnowledgeRetriever(BaseLambdaHandler):\n    \"\"\"\n    This class is responsible for\n    \"\"\"\n    def _handle(self) -> dict:\n        \"\"\" \"\"\"\n        app_id = self.body.get(\"app_id\", None)\n        if not app_id:\n            raise ValueError(\"app_id is required\")\n        # else: app_id is present",
        "detail": "cdk.out.asset.00920b1f25cd646e584bc366718eb0676799983cf07ab46e8834de60c8d90f37.knowledge_retriever",
        "documentation": {}
    },
    {
        "label": "handler",
        "kind": 2,
        "importPath": "cdk.out.asset.00920b1f25cd646e584bc366718eb0676799983cf07ab46e8834de60c8d90f37.knowledge_retriever",
        "description": "cdk.out.asset.00920b1f25cd646e584bc366718eb0676799983cf07ab46e8834de60c8d90f37.knowledge_retriever",
        "peekOfCode": "def handler(event, context):\n    \"\"\"\n    Lambda function to \n    \"\"\"\n    _handler = KnowledgeRetriever()\n    # Implicitly invokes __call__() ...\n    #   ... which invokes _do_the_job() ...\n    #     ... which invokes before_handle(), handle() and after_handle()\n    return _handler(event, context)",
        "detail": "cdk.out.asset.00920b1f25cd646e584bc366718eb0676799983cf07ab46e8834de60c8d90f37.knowledge_retriever",
        "documentation": {}
    },
    {
        "label": "GrantPublishToCustomEventBusAspect",
        "kind": 6,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_common_stack",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_common_stack",
        "peekOfCode": "class GrantPublishToCustomEventBusAspect:\n    \"\"\"\n    Aspect that automatically grants permissions for all Lambda functions\n    in the stack to publish to a specific EventBridge event bus.\n    \"\"\"\n    def __init__(self, custom_event_bus_name: str) -> None:\n        self.custom_event_bus_name = custom_event_bus_name\n    def visit(self, node: IConstruct) -> None:\n        \"\"\"\n        Visit each node in the construct tree and attach",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_common_stack",
        "documentation": {}
    },
    {
        "label": "AppCommonStack",
        "kind": 6,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_common_stack",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_common_stack",
        "peekOfCode": "class AppCommonStack(Stack):\n    \"\"\"\n    A common stack that ensures all Lambda functions in the stack automatically\n    have permission to publish to the ErrorHandlingTopic.\n    \"\"\"\n    def __init__(self, scope: Construct, construct_id: str, **kwargs) -> None:\n        super().__init__(scope, construct_id, **kwargs)\n        if self._get_custom_event_bus_name():\n            Aspects.of(self).add(\n                GrantPublishToCustomEventBusAspect(self._get_custom_event_bus_name())",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_common_stack",
        "documentation": {}
    },
    {
        "label": "is_valid_email",
        "kind": 2,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_config",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_config",
        "peekOfCode": "def is_valid_email(email: str) -> bool:\n    \"\"\"Check if the provided email is valid using a regex pattern.\"\"\"\n    email_regex = r\"(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)\"\n    return re.match(email_regex, email) is not None\ntry:\n    email_recipients_parameter = os.environ[\"AppDefaultEmailRecipients\"]\n    if (\n        email_recipients_parameter.strip()\n    ):  # Check if the string is non-empty after stripping spaces\n        AppDefaultEmailRecipients = [",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_config",
        "documentation": {}
    },
    {
        "label": "DecimalEncoder",
        "kind": 6,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_utils",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_utils",
        "peekOfCode": "class DecimalEncoder(json.JSONEncoder):\n    \"\"\"\n    Utility class to encode `decimal.Decimal` objects as strings.\n    \"\"\"\n    def default(self, o):\n        if isinstance(o, decimal.Decimal):\n            return str(o)\n        return super().default(o)\ndef get_first_non_none(*args, **kwargs):\n    \"\"\"",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "get_first_non_none",
        "kind": 2,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_utils",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_utils",
        "peekOfCode": "def get_first_non_none(*args, **kwargs):\n    \"\"\"\n    Returns the first argument that is not None, in case such an argument\n    exists.\n    \"\"\"\n    return next(\n        (arg for arg in list(args) + list(kwargs.values()) if arg is not None), None\n    )\ndef get_first_element(lst: list):\n    \"\"\"",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "get_first_element",
        "kind": 2,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_utils",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_utils",
        "peekOfCode": "def get_first_element(lst: list):\n    \"\"\"\n    Returns the first element of a list, in case such an element exists.\n    \"\"\"\n    if not isinstance(lst, list):\n        raise TypeError(f\"Expected list, got {type(lst).__name__}\")\n    return lst[0] if lst else None\ndef str_is_none_or_empty(s) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is `None` or evaluates to an",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "str_is_none_or_empty",
        "kind": 2,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_utils",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_utils",
        "peekOfCode": "def str_is_none_or_empty(s) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is `None` or evaluates to an\n    empty string, or `False` otherwise.\n    \"\"\"\n    if s is None:\n        return True\n    if isinstance(s, str):\n        return s.strip() == \"\"\n    if str(s).strip() == \"\":",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "is_numeric",
        "kind": 2,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_utils",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_utils",
        "peekOfCode": "def is_numeric(x) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is numeric. An argument is\n    considered numeric if it is either an `int`, a `float`, or a string\n    representing a number.\n    \"\"\"\n    if x is None:\n        return False\n    try:\n        float(x)",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "http_request",
        "kind": 2,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_utils",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_utils",
        "peekOfCode": "def http_request(\n    method, url, headers=None, json_data=None, params=None, timeout=30, **kwargs\n):\n    \"\"\"\n    Make an HTTP request using urllib3.\n    :param method: HTTP method (e.g., \"GET\", \"POST\").\n    :param url: URL to make the request to.\n    :param headers: Dictionary of headers to include in the request.\n    :param json_data: JSON payload for the request body.\n        If provided, Content-Type will be set to application/json.",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "run_command",
        "kind": 2,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_utils",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_utils",
        "peekOfCode": "def run_command(command, cwd=None, shell=False):\n    \"\"\"\n    Run a shell command in the specified directory.\n    :param command: The command to run.\n    :param cwd: The directory to run the command in.\n    :param shell: Whether to use a shell to run the command.\n    \"\"\"\n    # TODO: #17 Fix it getting the correct path from the user's Windows environment\n    # Replace 'python3.11' with the current Python executable\n    if isinstance(command, list):",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "BaseLambdaHandler",
        "kind": 6,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.base_lambda_handler",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.base_lambda_handler",
        "peekOfCode": "class BaseLambdaHandler(ABC):\n    \"\"\"\n    BaseLambdaHandler is a class that can be used as a base for Lambda\n    handlers. It provides a few useful features such as exception handling and\n    execution hooks. At the very least, subclasses must override the\n    ``handle()`` method in order to service lambda function invocations.\n    This class relies on some core attributes:\n    - ``context``: this is the ``context`` parameter received from AWS when a\n        lambda function is invoked, and has to do AWS infrastructure;\n    - ``event``: this is the ``event`` parameter received from AWS when a",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.base_lambda_handler",
        "documentation": {}
    },
    {
        "label": "DynamoDBBase",
        "kind": 6,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.dynamodb_utils",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.dynamodb_utils",
        "peekOfCode": "class DynamoDBBase:\n    \"\"\"Handles common operations for DynamoDB tables.\"\"\"\n    def __init__(self, table_name):\n        self._table = dynamodb.Table(table_name)\n    def __convert_to_decimal(self, item):\n        \"\"\"\n        Convert all float values in the given dictionary or list to Decimals\n        compatible with DynamoDB.\n        DynamoDB requires numerical values to be expressed as Decimals instead\n        of floats, as it does not support the float data type directly. This",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "dynamodb",
        "kind": 5,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.dynamodb_utils",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.dynamodb_utils",
        "peekOfCode": "dynamodb = boto3.resource(\"dynamodb\")\nclass DynamoDBBase:\n    \"\"\"Handles common operations for DynamoDB tables.\"\"\"\n    def __init__(self, table_name):\n        self._table = dynamodb.Table(table_name)\n    def __convert_to_decimal(self, item):\n        \"\"\"\n        Convert all float values in the given dictionary or list to Decimals\n        compatible with DynamoDB.\n        DynamoDB requires numerical values to be expressed as Decimals instead",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "do_deploy",
        "kind": 2,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_deploy",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_deploy",
        "peekOfCode": "def do_deploy(do_log_func, run_cmd_func):\n    \"\"\"\n    Deploy the application.\n    \"\"\"\n    do_log_func(\"deploying...\")\n    # ensure the CDK is installed and deploy the stack\n    run_cmd_func(\"npm install -g aws-cdk\", shell=True)\n    run_cmd_func(\"cdk bootstrap\", shell=True)\n    run_cmd_func(\"cdk deploy --require-approval never\", shell=True)\n    do_log_func(\"deployed!\")",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_deploy",
        "documentation": {}
    },
    {
        "label": "do_install_req",
        "kind": 2,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_install_reqs",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_install_reqs",
        "peekOfCode": "def do_install_req(do_log_func, run_cmd_func):\n    \"\"\"\n    Main function to install all project requirements.\n    \"\"\"\n    _purge_pip_cache(do_log_func, run_cmd_func)\n    _remove_pip_selfcheck(do_log_func)\n    _upgrade_pip(do_log_func, run_cmd_func)\n    _install_dev_requirements(do_log_func, run_cmd_func)\n    _install_from_aws_common(do_log_func, run_cmd_func)\n    _install_requirements_recursively(do_log_func, run_cmd_func)",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_install_reqs",
        "documentation": {}
    },
    {
        "label": "do_reset_venv",
        "kind": 2,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_reset_venv",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_reset_venv",
        "peekOfCode": "def do_reset_venv(do_log_func, run_cmd_func):\n    \"\"\"\n    Recreate the Python virtual environment.\n    \"\"\"\n    do_log_func(f\"*** Deleting all content under {PYTHON_VENV_DIR}...\")\n    shutil.rmtree(PYTHON_VENV_DIR, ignore_errors=True)\n    do_log_func(\"*** Recreating Python virtual environment...\")\n    run_cmd_func([\"python3.11\", \"-m\", \"venv\", PYTHON_VENV_DIR])\n    activate_script = os.path.join(PYTHON_VENV_DIR, \"bin\", \"activate\")\n    # warn the user to activate the virtual environment",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_reset_venv",
        "documentation": {}
    },
    {
        "label": "PYTHON_VENV_DIR",
        "kind": 5,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_reset_venv",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_reset_venv",
        "peekOfCode": "PYTHON_VENV_DIR = \"venv\"\ndef do_reset_venv(do_log_func, run_cmd_func):\n    \"\"\"\n    Recreate the Python virtual environment.\n    \"\"\"\n    do_log_func(f\"*** Deleting all content under {PYTHON_VENV_DIR}...\")\n    shutil.rmtree(PYTHON_VENV_DIR, ignore_errors=True)\n    do_log_func(\"*** Recreating Python virtual environment...\")\n    run_cmd_func([\"python3.11\", \"-m\", \"venv\", PYTHON_VENV_DIR])\n    activate_script = os.path.join(PYTHON_VENV_DIR, \"bin\", \"activate\")",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_reset_venv",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup",
        "peekOfCode": "def main():\n    \"\"\"\n    Main function to parse command-line arguments and call the appropriate function.\n    \"\"\"\n    # Get the current script directory\n    current_dir = os.path.dirname(os.path.abspath(__file__))\n    # Construct path to sibling directory\n    common_project_dir = os.path.join(current_dir, \"..\", \"aws-common\")\n    # check if script directory exists\n    if not os.path.exists(common_project_dir):",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "peekOfCode": "def main():\n    \"\"\"\n    Main function to parse command-line arguments and call the appropriate function.\n    \"\"\"\n    error_msg_args = (\n        \"Usage: app_setup.py --<setup_venv|install_requirements|deploy|run_tests>\"\n    )\n    if len(sys.argv) != 4:\n        _do_log(error_msg_args)\n        sys.exit(1)",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_VENV_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_VENV_OPTIONS = {\n    \"--setup_venv\",\n    \"--setup\",\n    \"--reset_venv\",\n    \"setup_venv\",\n    \"setup\",\n    \"reset_venv\",\n}\nMENU_INSTALL_OPTIONS = {\n    \"--install_requirements\",",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_INSTALL_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_INSTALL_OPTIONS = {\n    \"--install_requirements\",\n    \"--install\",\n    \"--install_reqs\",\n    \"install_requirements\",\n    \"install\",\n    \"install_reqs\",\n}\nMENU_DEPLOY_OPTIONS = {\n    \"--deploy\",",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_DEPLOY_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_DEPLOY_OPTIONS = {\n    \"--deploy\",\n    \"--deploy_stack\",\n    \"--deploy_cdk\",\n    \"--deploy_app\",\n    \"deploy\",\n    \"deploy_stack\",\n    \"deploy_cdk\",\n    \"deploy_app\",\n}",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_FAST_DEPLOY_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_FAST_DEPLOY_OPTIONS = {\"fast_deploy\", \"--fast_deploy\"}\nMENU_HELP_OPTIONS = {\"--help\", \"-h\", \"help\"}\nMENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_HELP_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_HELP_OPTIONS = {\"--help\", \"-h\", \"help\"}\nMENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_TEST_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)\n# getting the project root directory",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)\n# getting the project root directory\ncurrent_dir = os.path.dirname(os.path.abspath(__file__))",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "current_dir",
        "kind": 5,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "peekOfCode": "current_dir = os.path.dirname(os.path.abspath(__file__))\nroot_dir = os.path.join(current_dir, \"..\")\n# finding the common directory\ncommon_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "root_dir",
        "kind": 5,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "peekOfCode": "root_dir = os.path.join(current_dir, \"..\")\n# finding the common directory\ncommon_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "common_dir",
        "kind": 5,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "peekOfCode": "common_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "utils_script_path",
        "kind": 5,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "peekOfCode": "utils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, log_limit: int = 150):\n    \"\"\"",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "spec",
        "kind": 5,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "peekOfCode": "spec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, log_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, log_limit=log_limit)\ndef _run_command(command, cwd=None, shell=False):",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "_UTILS_MODULE",
        "kind": 5,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "peekOfCode": "_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, log_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, log_limit=log_limit)\ndef _run_command(command, cwd=None, shell=False):\n    \"\"\"",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "sys.modules[\"app_utils_module\"]",
        "kind": 5,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "peekOfCode": "sys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, log_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, log_limit=log_limit)\ndef _run_command(command, cwd=None, shell=False):\n    \"\"\"\n    Wrapper function to call the run_command function from the app_utils module.",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "do_run_tests",
        "kind": 2,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_test",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_test",
        "peekOfCode": "def do_run_tests(do_log_func, run_cmd_func) -> bool:\n    \"\"\"\n    Run all the tests for the project.\n    \"\"\"\n    do_log_func(\"*** Running all tests for the project...\")\n    # python -m pytest tests/unit/\n    run_cmd_func([\"python\", \"-m\", \"pytest\", \"tests/unit/\"])\n    do_log_func(\"*** All tests passed.\")\n    # While we don't implement this behavior, we'll return True\n    return True",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.packages.app_scripts.app_test",
        "documentation": {}
    },
    {
        "label": "AppRole",
        "kind": 6,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.app_role_bo",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.app_role_bo",
        "peekOfCode": "class AppRole:\n    \"\"\"\n    Represents an AppRole entity.\n    \"\"\"\n    def __init__(self, app_id: str, role_source: str) -> None:\n        \"\"\"\n        Initializes an instance of the AppRole class.\n        :param app_id: Identifier for the application.\n        :param role_source: Source of the role definition.\n        \"\"\"",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.app_role_bo",
        "documentation": {}
    },
    {
        "label": "AppRoleBO",
        "kind": 6,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.app_role_bo",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.app_role_bo",
        "peekOfCode": "class AppRoleBO(DynamoDBBase):\n    \"\"\"\n    Business object for managing AppRole entities.\n    \"\"\"\n    def get_role_content(self, app_id: str) -> str:\n        \"\"\"\n        Retrieves the role content for the specified application.\n        :param app_id: Identifier for the application.\n        :return: Content of the role source as a string, or None if not found.\n        \"\"\"",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.app_role_bo",
        "documentation": {}
    },
    {
        "label": "ContextRetriever",
        "kind": 6,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.context_retriever",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.context_retriever",
        "peekOfCode": "class ContextRetriever(BaseLambdaHandler):\n    \"\"\"\n    A Lambda handler for retrieving context based on the provided app_id.\n    This class processes incoming events, validates inputs, retrieves app role content\n    from the database, and publishes the results to a custom event bus.\n    \"\"\"\n    def _handle(self) -> dict:\n        \"\"\"\n        Handle the incoming request, retrieve the app role, and publish the response.\n        :return: A dictionary containing the app role and the original payload.",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.context_retriever",
        "documentation": {}
    },
    {
        "label": "handler",
        "kind": 2,
        "importPath": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.context_retriever",
        "description": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.context_retriever",
        "peekOfCode": "def handler(event, context):\n    \"\"\"\n    Lambda entry point for handling context retrieval requests.\n    :param event: The event data passed to the Lambda function.\n    :param context: The runtime information for the Lambda function.\n    :return: The result from processing the event.\n    \"\"\"\n    _handler = ContextRetriever()\n    # Implicitly invokes __call__(), which:\n    #   - Executes _do_the_job(), which:",
        "detail": "cdk.out.asset.0ed1f8ee3b2734c415255235b9dc74d8dde8de312bec10495953515dacb7ce44.context_retriever",
        "documentation": {}
    },
    {
        "label": "AppRole",
        "kind": 6,
        "importPath": "cdk.out.asset.2f697669f384d6de39dbcf7240db88c1b4f71eab8567c0bb65cffbdf2db7d935.app_role_bo",
        "description": "cdk.out.asset.2f697669f384d6de39dbcf7240db88c1b4f71eab8567c0bb65cffbdf2db7d935.app_role_bo",
        "peekOfCode": "class AppRole:\n    \"\"\"\n    Represents a AppRole entity.\n    \"\"\"\n    def __init__(\n        self,\n        app_id: str,\n        role_source: str,\n    ) -> None:\n        self.app_id = app_id",
        "detail": "cdk.out.asset.2f697669f384d6de39dbcf7240db88c1b4f71eab8567c0bb65cffbdf2db7d935.app_role_bo",
        "documentation": {}
    },
    {
        "label": "AppRoleBO",
        "kind": 6,
        "importPath": "cdk.out.asset.2f697669f384d6de39dbcf7240db88c1b4f71eab8567c0bb65cffbdf2db7d935.app_role_bo",
        "description": "cdk.out.asset.2f697669f384d6de39dbcf7240db88c1b4f71eab8567c0bb65cffbdf2db7d935.app_role_bo",
        "peekOfCode": "class AppRoleBO(DynamoDBBase):\n    \"\"\"Business object for the AppRole entity.\"\"\"\n    def get_role_content(self, app_id: str) -> str:\n        \"\"\"\n        Retrieves the role content for the specified application.\n        \"\"\"\n        role_source = self.get_role_source(app_id)\n        if not role_source:\n            return None\n        role_content = self._load_url_content_as_text(role_source)",
        "detail": "cdk.out.asset.2f697669f384d6de39dbcf7240db88c1b4f71eab8567c0bb65cffbdf2db7d935.app_role_bo",
        "documentation": {}
    },
    {
        "label": "ContextRetriever",
        "kind": 6,
        "importPath": "cdk.out.asset.2f697669f384d6de39dbcf7240db88c1b4f71eab8567c0bb65cffbdf2db7d935.context_retriever",
        "description": "cdk.out.asset.2f697669f384d6de39dbcf7240db88c1b4f71eab8567c0bb65cffbdf2db7d935.context_retriever",
        "peekOfCode": "class ContextRetriever(BaseLambdaHandler):\n    \"\"\"\n    This class is responsible for\n    \"\"\"\n    def _handle(self) -> dict:\n        \"\"\" \"\"\"\n        app_id = self.body.get(\"app_id\", None)\n        if not app_id:\n            raise ValueError(\"app_id is required\")\n        # else: app_id is present",
        "detail": "cdk.out.asset.2f697669f384d6de39dbcf7240db88c1b4f71eab8567c0bb65cffbdf2db7d935.context_retriever",
        "documentation": {}
    },
    {
        "label": "handler",
        "kind": 2,
        "importPath": "cdk.out.asset.2f697669f384d6de39dbcf7240db88c1b4f71eab8567c0bb65cffbdf2db7d935.context_retriever",
        "description": "cdk.out.asset.2f697669f384d6de39dbcf7240db88c1b4f71eab8567c0bb65cffbdf2db7d935.context_retriever",
        "peekOfCode": "def handler(event, context):\n    \"\"\"\n    Lambda function to \n    \"\"\"\n    _handler = ContextRetriever()\n    # Implicitly invokes __call__() ...\n    #   ... which invokes _do_the_job() ...\n    #     ... which invokes before_handle(), handle() and after_handle()\n    return _handler(event, context)",
        "detail": "cdk.out.asset.2f697669f384d6de39dbcf7240db88c1b4f71eab8567c0bb65cffbdf2db7d935.context_retriever",
        "documentation": {}
    },
    {
        "label": "GrantPublishToCustomEventBusAspect",
        "kind": 6,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_common_stack",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_common_stack",
        "peekOfCode": "class GrantPublishToCustomEventBusAspect:\n    \"\"\"\n    Aspect that automatically grants permissions for all Lambda functions\n    in the stack to publish to a specific EventBridge event bus.\n    \"\"\"\n    def __init__(self, custom_event_bus_name: str) -> None:\n        self.custom_event_bus_name = custom_event_bus_name\n    def visit(self, node: IConstruct) -> None:\n        \"\"\"\n        Visit each node in the construct tree and attach",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_common_stack",
        "documentation": {}
    },
    {
        "label": "AppCommonStack",
        "kind": 6,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_common_stack",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_common_stack",
        "peekOfCode": "class AppCommonStack(Stack):\n    \"\"\"\n    A common stack that ensures all Lambda functions in the stack automatically\n    have permission to publish to the ErrorHandlingTopic.\n    \"\"\"\n    def __init__(self, scope: Construct, construct_id: str, **kwargs) -> None:\n        super().__init__(scope, construct_id, **kwargs)\n        if self._get_custom_event_bus_name():\n            Aspects.of(self).add(\n                GrantPublishToCustomEventBusAspect(self._get_custom_event_bus_name())",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_common_stack",
        "documentation": {}
    },
    {
        "label": "is_valid_email",
        "kind": 2,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_config",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_config",
        "peekOfCode": "def is_valid_email(email: str) -> bool:\n    \"\"\"Check if the provided email is valid using a regex pattern.\"\"\"\n    email_regex = r\"(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)\"\n    return re.match(email_regex, email) is not None\ntry:\n    email_recipients_parameter = os.environ[\"AppDefaultEmailRecipients\"]\n    if (\n        email_recipients_parameter.strip()\n    ):  # Check if the string is non-empty after stripping spaces\n        AppDefaultEmailRecipients = [",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_config",
        "documentation": {}
    },
    {
        "label": "DecimalEncoder",
        "kind": 6,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "peekOfCode": "class DecimalEncoder(json.JSONEncoder):\n    \"\"\"\n    Utility class to encode `decimal.Decimal` objects as strings.\n    \"\"\"\n    def default(self, o):\n        if isinstance(o, decimal.Decimal):\n            return str(o)\n        return super().default(o)\ndef get_first_non_none(*args, **kwargs):\n    \"\"\"",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "get_first_non_none",
        "kind": 2,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "peekOfCode": "def get_first_non_none(*args, **kwargs):\n    \"\"\"\n    Returns the first argument that is not None, in case such an argument\n    exists.\n    \"\"\"\n    return next(\n        (arg for arg in list(args) + list(kwargs.values()) if arg is not None), None\n    )\ndef get_first_element(lst: list):\n    \"\"\"",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "get_first_element",
        "kind": 2,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "peekOfCode": "def get_first_element(lst: list):\n    \"\"\"\n    Returns the first element of a list, in case such an element exists.\n    \"\"\"\n    if not isinstance(lst, list):\n        raise TypeError(f\"Expected list, got {type(lst).__name__}\")\n    return lst[0] if lst else None\ndef str_is_none_or_empty(s) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is `None` or evaluates to an",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "str_is_none_or_empty",
        "kind": 2,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "peekOfCode": "def str_is_none_or_empty(s) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is `None` or evaluates to an\n    empty string, or `False` otherwise.\n    \"\"\"\n    if s is None:\n        return True\n    if isinstance(s, str):\n        return s.strip() == \"\"\n    if str(s).strip() == \"\":",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "is_numeric",
        "kind": 2,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "peekOfCode": "def is_numeric(x) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is numeric. An argument is\n    considered numeric if it is either an `int`, a `float`, or a string\n    representing a number.\n    \"\"\"\n    if x is None:\n        return False\n    try:\n        float(x)",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "json_dumps",
        "kind": 2,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "peekOfCode": "def json_dumps(data, indent=4, cls=DecimalEncoder) -> str:\n    \"\"\"\n    Utility method to serialize data to JSON, including Decimal values.\n    \"\"\"\n    return json.dumps(data, indent=indent, cls=cls)\ndef _do_log(\n    obj,\n    title=None,\n    line_len_limit: int = 100,\n    line_break_chars: str = \" \",",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "http_request",
        "kind": 2,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "peekOfCode": "def http_request(\n    method, url, headers=None, json_data=None, params=None, timeout=30, **kwargs\n):\n    \"\"\"\n    Make an HTTP request using urllib3.\n    :param method: HTTP method (e.g., \"GET\", \"POST\").\n    :param url: URL to make the request to.\n    :param headers: Dictionary of headers to include in the request.\n    :param json_data: JSON payload for the request body.\n        If provided, Content-Type will be set to application/json.",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "run_command",
        "kind": 2,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "peekOfCode": "def run_command(command, cwd=None, shell=False):\n    \"\"\"\n    Run a shell command in the specified directory.\n    :param command: The command to run.\n    :param cwd: The directory to run the command in.\n    :param shell: Whether to use a shell to run the command.\n    \"\"\"\n    # TODO: #17 Fix it getting the correct path from the user's Windows environment\n    # Replace 'python3.11' with the current Python executable\n    if isinstance(command, list):",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "unix_epoch_now",
        "kind": 2,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "peekOfCode": "def unix_epoch_now() -> int:\n    \"\"\"\n    Utility method to return the current timestamp,\n    considering the Unix Epoch reference.\n    \"\"\"\n    return int(time.time())",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "BaseLambdaHandler",
        "kind": 6,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.base_lambda_handler",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.base_lambda_handler",
        "peekOfCode": "class BaseLambdaHandler(ABC):\n    \"\"\"\n    BaseLambdaHandler is a class that can be used as a base for Lambda\n    handlers. It provides a few useful features such as exception handling and\n    execution hooks. At the very least, subclasses must override the\n    ``handle()`` method in order to service lambda function invocations.\n    This class relies on some core attributes:\n    - ``context``: this is the ``context`` parameter received from AWS when a\n        lambda function is invoked, and has to do AWS infrastructure;\n    - ``event``: this is the ``event`` parameter received from AWS when a",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.base_lambda_handler",
        "documentation": {}
    },
    {
        "label": "DynamoDBBase",
        "kind": 6,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.dynamodb_utils",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.dynamodb_utils",
        "peekOfCode": "class DynamoDBBase:\n    \"\"\"Handles common operations for DynamoDB tables.\"\"\"\n    def __init__(self, table_name):\n        self._table_name = table_name\n        self._table = dynamodb.Table(table_name)\n    def recreate_table_resource(self):\n        \"\"\"\n        Recreates the ``Table`` resource of this instance through the global\n        ``dynamodb`` resource. This is meant to be used mainly for testing purposes,\n        e.g., after replacing the global ``dynamodb`` resource to point to a DynamoDB",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "replace_dynamodb_resource",
        "kind": 2,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.dynamodb_utils",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.dynamodb_utils",
        "peekOfCode": "def replace_dynamodb_resource(new_dynamodb_resource):\n    \"\"\"\n    Replaces the global ``dynamodb`` resource with the given resource.\n    This is meant to be used mainly for testing purposes, e.g., to use a DynamoDB\n    Local instance instead of the default one provided by the AWS environment:\n    ```\n    new_dynamodb = boto3.resource(\"dynamodb\", endpoint_url=\"http://localhost:8000\")\n    replace_dynamodb_resource(new_dynamodb)\n    ```\n    \"\"\"",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "create_table_resource",
        "kind": 2,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.dynamodb_utils",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.dynamodb_utils",
        "peekOfCode": "def create_table_resource(\n    table_name: str,\n    partition_key_name: str,\n    partition_key_attribute_type: str,\n    sort_key_name: str,\n    sort_key_attribute_type: str,\n    global_secondary_index_name: str,\n    global_secondary_index_partition_key_name: str,\n    global_secondary_index_projection_type: str = \"ALL\",\n    table_read_capacity_units: int = 1,",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "dynamodb",
        "kind": 5,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.dynamodb_utils",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.dynamodb_utils",
        "peekOfCode": "dynamodb = boto3.resource(\"dynamodb\")\ndef replace_dynamodb_resource(new_dynamodb_resource):\n    \"\"\"\n    Replaces the global ``dynamodb`` resource with the given resource.\n    This is meant to be used mainly for testing purposes, e.g., to use a DynamoDB\n    Local instance instead of the default one provided by the AWS environment:\n    ```\n    new_dynamodb = boto3.resource(\"dynamodb\", endpoint_url=\"http://localhost:8000\")\n    replace_dynamodb_resource(new_dynamodb)\n    ```",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "set_aws_environment_variables",
        "kind": 2,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.utils4tests",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.utils4tests",
        "peekOfCode": "def set_aws_environment_variables(\n    aws_access_key_id: str,\n    aws_secret_access_key: str,\n    aws_security_token: str,\n    aws_session_token: str,\n    aws_default_region: str = \"us-east-1\",\n):\n    \"\"\"\n    Sets some environment variables used by AWS.\n    \"\"\"",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.utils4tests",
        "documentation": {}
    },
    {
        "label": "set_fake_aws_environment_variables",
        "kind": 2,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.utils4tests",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.utils4tests",
        "peekOfCode": "def set_fake_aws_environment_variables(aws_default_region: str = \"us-east-1\"):\n    \"\"\"\n    Sets some environment variables used by AWS with fake values.\n    This is meant to be used mainly for testing purposes, as some resources provided\n    by the ``boto3`` library refuse to initialize when certain environment variables\n    are empty.\n    \"\"\"\n    set_aws_environment_variables(\n        \"testing\", \"testing\", \"testing\", \"testing\", aws_default_region\n    )",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_common.utils4tests",
        "documentation": {}
    },
    {
        "label": "do_deploy",
        "kind": 2,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_deploy",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_deploy",
        "peekOfCode": "def do_deploy(do_log_func, run_cmd_func):\n    \"\"\"\n    Deploy the application.\n    \"\"\"\n    do_log_func(\"deploying...\")\n    # ensure the CDK is installed and deploy the stack\n    run_cmd_func(\"npm install -g aws-cdk\", shell=True)\n    run_cmd_func(\"cdk bootstrap\", shell=True)\n    run_cmd_func(\"cdk deploy --require-approval never\", shell=True)\n    do_log_func(\"deployed!\")",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_deploy",
        "documentation": {}
    },
    {
        "label": "do_install_req",
        "kind": 2,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_install_reqs",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_install_reqs",
        "peekOfCode": "def do_install_req(do_log_func, run_cmd_func):\n    \"\"\"\n    Main function to install all project requirements.\n    \"\"\"\n    _purge_pip_cache(do_log_func, run_cmd_func)\n    _remove_pip_selfcheck(do_log_func)\n    _upgrade_pip(do_log_func, run_cmd_func)\n    _install_dev_requirements(do_log_func, run_cmd_func)\n    _install_from_aws_common(do_log_func, run_cmd_func)\n    _install_requirements_recursively(do_log_func, run_cmd_func)",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_install_reqs",
        "documentation": {}
    },
    {
        "label": "do_reset_venv",
        "kind": 2,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_reset_venv",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_reset_venv",
        "peekOfCode": "def do_reset_venv(do_log_func, run_cmd_func):\n    \"\"\"\n    Recreate the Python virtual environment.\n    \"\"\"\n    do_log_func(f\"*** Deleting all content under {PYTHON_VENV_DIR}...\")\n    shutil.rmtree(PYTHON_VENV_DIR, ignore_errors=True)\n    do_log_func(\"*** Recreating Python virtual environment...\")\n    run_cmd_func([\"python3.11\", \"-m\", \"venv\", PYTHON_VENV_DIR])\n    activate_script = os.path.join(PYTHON_VENV_DIR, \"bin\", \"activate\")\n    # warn the user to activate the virtual environment",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_reset_venv",
        "documentation": {}
    },
    {
        "label": "PYTHON_VENV_DIR",
        "kind": 5,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_reset_venv",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_reset_venv",
        "peekOfCode": "PYTHON_VENV_DIR = \"venv\"\ndef do_reset_venv(do_log_func, run_cmd_func):\n    \"\"\"\n    Recreate the Python virtual environment.\n    \"\"\"\n    do_log_func(f\"*** Deleting all content under {PYTHON_VENV_DIR}...\")\n    shutil.rmtree(PYTHON_VENV_DIR, ignore_errors=True)\n    do_log_func(\"*** Recreating Python virtual environment...\")\n    run_cmd_func([\"python3.11\", \"-m\", \"venv\", PYTHON_VENV_DIR])\n    activate_script = os.path.join(PYTHON_VENV_DIR, \"bin\", \"activate\")",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_reset_venv",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup",
        "peekOfCode": "def main():\n    \"\"\"\n    Main function to parse command-line arguments and call the appropriate function.\n    \"\"\"\n    # Get the current script directory\n    current_dir = os.path.dirname(os.path.abspath(__file__))\n    # Construct path to sibling directory\n    common_project_dir = os.path.join(current_dir, \"..\", \"aws-common\")\n    # check if script directory exists\n    if not os.path.exists(common_project_dir):",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "peekOfCode": "def main():\n    \"\"\"\n    Main function to parse command-line arguments and call the appropriate function.\n    \"\"\"\n    error_msg_args = (\n        \"Usage: app_setup.py --<setup_venv|install_requirements|deploy|run_tests>\"\n    )\n    if len(sys.argv) != 4:\n        _do_log(error_msg_args)\n        sys.exit(1)",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_VENV_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_VENV_OPTIONS = {\n    \"--setup_venv\",\n    \"--setup\",\n    \"--reset_venv\",\n    \"setup_venv\",\n    \"setup\",\n    \"reset_venv\",\n}\nMENU_INSTALL_OPTIONS = {\n    \"--install_requirements\",",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_INSTALL_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_INSTALL_OPTIONS = {\n    \"--install_requirements\",\n    \"--install\",\n    \"--install_reqs\",\n    \"install_requirements\",\n    \"install\",\n    \"install_reqs\",\n}\nMENU_DEPLOY_OPTIONS = {\n    \"--deploy\",",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_DEPLOY_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_DEPLOY_OPTIONS = {\n    \"--deploy\",\n    \"--deploy_stack\",\n    \"--deploy_cdk\",\n    \"--deploy_app\",\n    \"deploy\",\n    \"deploy_stack\",\n    \"deploy_cdk\",\n    \"deploy_app\",\n}",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_FAST_DEPLOY_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_FAST_DEPLOY_OPTIONS = {\"fast_deploy\", \"--fast_deploy\"}\nMENU_HELP_OPTIONS = {\"--help\", \"-h\", \"help\"}\nMENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_HELP_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_HELP_OPTIONS = {\"--help\", \"-h\", \"help\"}\nMENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_TEST_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)\n# getting the project root directory",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)\n# getting the project root directory\ncurrent_dir = os.path.dirname(os.path.abspath(__file__))",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "current_dir",
        "kind": 5,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "peekOfCode": "current_dir = os.path.dirname(os.path.abspath(__file__))\nroot_dir = os.path.join(current_dir, \"..\")\n# finding the common directory\ncommon_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "root_dir",
        "kind": 5,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "peekOfCode": "root_dir = os.path.join(current_dir, \"..\")\n# finding the common directory\ncommon_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "common_dir",
        "kind": 5,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "peekOfCode": "common_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "utils_script_path",
        "kind": 5,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "peekOfCode": "utils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, line_len_limit: int = 150):\n    \"\"\"",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "spec",
        "kind": 5,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "peekOfCode": "spec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, line_len_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, line_len_limit=line_len_limit)\ndef _run_command(command, cwd=None, shell=False):",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "_UTILS_MODULE",
        "kind": 5,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "peekOfCode": "_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, line_len_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, line_len_limit=line_len_limit)\ndef _run_command(command, cwd=None, shell=False):\n    \"\"\"",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "sys.modules[\"app_utils_module\"]",
        "kind": 5,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "peekOfCode": "sys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, line_len_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, line_len_limit=line_len_limit)\ndef _run_command(command, cwd=None, shell=False):\n    \"\"\"\n    Wrapper function to call the run_command function from the app_utils module.",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "do_run_tests",
        "kind": 2,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_test",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_test",
        "peekOfCode": "def do_run_tests(do_log_func, run_cmd_func) -> bool:\n    \"\"\"\n    Run all the tests for the project.\n    \"\"\"\n    do_log_func(\"*** Running all tests for the project...\")\n    # python -m pytest tests/unit/\n    run_cmd_func([\"python\", \"-m\", \"pytest\", \"tests/unit/\"])\n    do_log_func(\"*** All tests passed.\")\n    # While we don't implement this behavior, we'll return True\n    return True",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.packages.app_scripts.app_test",
        "documentation": {}
    },
    {
        "label": "AppRole",
        "kind": 6,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.app_role_bo",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.app_role_bo",
        "peekOfCode": "class AppRole:\n    \"\"\"\n    Represents an AppRole entity.\n    \"\"\"\n    def __init__(self, app_id: str, role_source: str) -> None:\n        \"\"\"\n        Initializes an instance of the AppRole class.\n        :param app_id: Identifier for the application.\n        :param role_source: Source of the role definition.\n        \"\"\"",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.app_role_bo",
        "documentation": {}
    },
    {
        "label": "AppRoleBO",
        "kind": 6,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.app_role_bo",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.app_role_bo",
        "peekOfCode": "class AppRoleBO(DynamoDBBase):\n    \"\"\"\n    Business object for managing AppRole entities.\n    \"\"\"\n    def get_role_content(self, app_id: str) -> str:\n        \"\"\"\n        Retrieves the role content for the specified application.\n        :param app_id: Identifier for the application.\n        :return: Content of the role source as a string, or None if not found.\n        \"\"\"",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.app_role_bo",
        "documentation": {}
    },
    {
        "label": "ContextRetriever",
        "kind": 6,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.context_retriever",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.context_retriever",
        "peekOfCode": "class ContextRetriever(BaseLambdaHandler):\n    \"\"\"\n    A Lambda handler for retrieving context based on the provided app_id.\n    This class processes incoming events, validates inputs, retrieves app role content\n    from the database, and publishes the results to a custom event bus.\n    \"\"\"\n    def _handle(self) -> dict:\n        \"\"\"\n        Handle the incoming request, retrieve the app role, and publish the response.\n        :return: A dictionary containing the app role and the original payload.",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.context_retriever",
        "documentation": {}
    },
    {
        "label": "handler",
        "kind": 2,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.context_retriever",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.context_retriever",
        "peekOfCode": "def handler(event, context):\n    \"\"\"\n    Lambda entry point for handling context retrieval requests.\n    :param event: The event data passed to the Lambda function.\n    :param context: The runtime information for the Lambda function.\n    :return: The result from processing the event.\n    \"\"\"\n    _handler = ContextRetriever()\n    # Implicitly invokes __call__(), which:\n    #   - Executes _do_the_job(), which:",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.context_retriever",
        "documentation": {}
    },
    {
        "label": "UserLongTermMemory",
        "kind": 6,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.long_memory_bo",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.long_memory_bo",
        "peekOfCode": "class UserLongTermMemory:\n    \"\"\"\n    Represents an UserLongTermMemory entity.\n    \"\"\"\n    def __init__(self, user_id: str, memory: str) -> None:\n        \"\"\"\n        Initializes an instance of the UserLongTermMemory class.\n        :param user_id: Identifier for the user.\n        :param memory: the user memory register.\n        \"\"\"",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.long_memory_bo",
        "documentation": {}
    },
    {
        "label": "UserLongTermMemoryBO",
        "kind": 6,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.long_memory_bo",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.long_memory_bo",
        "peekOfCode": "class UserLongTermMemoryBO(DynamoDBBase):\n    \"\"\"\n    Business object for managing UserLongTermMemory entities.\n    \"\"\"\n    @lru_cache\n    def get_last_memory(self, user_id: str) -> UserLongTermMemory:\n        \"\"\"\n        Retrieves the role content for the specified application.\n        :param user_id: Identifier for the application.\n        :return: Memory as a UserLongTermMemory object, or None if not found.",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.long_memory_bo",
        "documentation": {}
    },
    {
        "label": "LongMemoryUpdater",
        "kind": 6,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.long_memory_updater",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.long_memory_updater",
        "peekOfCode": "class LongMemoryUpdater(BaseLambdaHandler):\n    \"\"\"\n    A Lambda handler for updating the long-term memory of a user\n    based on the interaction between a user and a chatbot.\n    \"\"\"\n    def __gen_prompt_input_msg(\n        self, current_summary: str, user_message: str, chatbot_response: str\n    ) -> str:\n        \"\"\"\n        Generate a prompt for the AI model based on the current summary,",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.long_memory_updater",
        "documentation": {}
    },
    {
        "label": "handler",
        "kind": 2,
        "importPath": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.long_memory_updater",
        "description": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.long_memory_updater",
        "peekOfCode": "def handler(event, context):\n    \"\"\"\n    Lambda entry point for handling context retrieval requests.\n    :param event: The event data passed to the Lambda function.\n    :param context: The runtime information for the Lambda function.\n    :return: The result from processing the event.\n    \"\"\"\n    _handler = LongMemoryUpdater()\n    # Invokes the BaseLambdaHandler logic chain\n    return _handler(event, context)",
        "detail": "cdk.out.asset.4afc66336debb1581a77f5b924784fdf4ff842595ed4d1d1e2981dd5a83483a5.long_memory_updater",
        "documentation": {}
    },
    {
        "label": "GrantPublishToCustomEventBusAspect",
        "kind": 6,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_common_stack",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_common_stack",
        "peekOfCode": "class GrantPublishToCustomEventBusAspect:\n    \"\"\"\n    Aspect that automatically grants permissions for all Lambda functions\n    in the stack to publish to a specific EventBridge event bus.\n    \"\"\"\n    def __init__(self, custom_event_bus_name: str) -> None:\n        self.custom_event_bus_name = custom_event_bus_name\n    def visit(self, node: IConstruct) -> None:\n        \"\"\"\n        Visit each node in the construct tree and attach",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_common_stack",
        "documentation": {}
    },
    {
        "label": "AppCommonStack",
        "kind": 6,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_common_stack",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_common_stack",
        "peekOfCode": "class AppCommonStack(Stack):\n    \"\"\"\n    A common stack that ensures all Lambda functions in the stack automatically\n    have permission to publish to the ErrorHandlingTopic.\n    \"\"\"\n    def __init__(self, scope: Construct, construct_id: str, **kwargs) -> None:\n        super().__init__(scope, construct_id, **kwargs)\n        if self._get_custom_event_bus_name():\n            Aspects.of(self).add(\n                GrantPublishToCustomEventBusAspect(self._get_custom_event_bus_name())",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_common_stack",
        "documentation": {}
    },
    {
        "label": "is_valid_email",
        "kind": 2,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_config",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_config",
        "peekOfCode": "def is_valid_email(email: str) -> bool:\n    \"\"\"Check if the provided email is valid using a regex pattern.\"\"\"\n    email_regex = r\"(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)\"\n    return re.match(email_regex, email) is not None\ntry:\n    email_recipients_parameter = os.environ[\"AppDefaultEmailRecipients\"]\n    if (\n        email_recipients_parameter.strip()\n    ):  # Check if the string is non-empty after stripping spaces\n        AppDefaultEmailRecipients = [",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_config",
        "documentation": {}
    },
    {
        "label": "DecimalEncoder",
        "kind": 6,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "peekOfCode": "class DecimalEncoder(json.JSONEncoder):\n    \"\"\"\n    Utility class to encode `decimal.Decimal` objects as strings.\n    \"\"\"\n    def default(self, o):\n        if isinstance(o, decimal.Decimal):\n            return str(o)\n        return super().default(o)\ndef get_first_non_none(*args, **kwargs):\n    \"\"\"",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "get_first_non_none",
        "kind": 2,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "peekOfCode": "def get_first_non_none(*args, **kwargs):\n    \"\"\"\n    Returns the first argument that is not None, in case such an argument\n    exists.\n    \"\"\"\n    return next(\n        (arg for arg in list(args) + list(kwargs.values()) if arg is not None), None\n    )\ndef get_first_element(lst: list):\n    \"\"\"",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "get_first_element",
        "kind": 2,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "peekOfCode": "def get_first_element(lst: list):\n    \"\"\"\n    Returns the first element of a list, in case such an element exists.\n    \"\"\"\n    if not isinstance(lst, list):\n        raise TypeError(f\"Expected list, got {type(lst).__name__}\")\n    return lst[0] if lst else None\ndef str_is_none_or_empty(s) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is `None` or evaluates to an",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "str_is_none_or_empty",
        "kind": 2,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "peekOfCode": "def str_is_none_or_empty(s) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is `None` or evaluates to an\n    empty string, or `False` otherwise.\n    \"\"\"\n    if s is None:\n        return True\n    if isinstance(s, str):\n        return s.strip() == \"\"\n    if str(s).strip() == \"\":",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "is_numeric",
        "kind": 2,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "peekOfCode": "def is_numeric(x) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is numeric. An argument is\n    considered numeric if it is either an `int`, a `float`, or a string\n    representing a number.\n    \"\"\"\n    if x is None:\n        return False\n    try:\n        float(x)",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "json_dumps",
        "kind": 2,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "peekOfCode": "def json_dumps(data, indent=4, cls=DecimalEncoder) -> str:\n    \"\"\"\n    Utility method to serialize data to JSON, including Decimal values.\n    \"\"\"\n    return json.dumps(data, indent=indent, cls=cls)\ndef _do_log(\n    obj,\n    title=None,\n    line_len_limit: int = 100,\n    line_break_chars: str = \" \",",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "http_request",
        "kind": 2,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "peekOfCode": "def http_request(\n    method, url, headers=None, json_data=None, params=None, timeout=30, **kwargs\n):\n    \"\"\"\n    Make an HTTP request using urllib3.\n    :param method: HTTP method (e.g., \"GET\", \"POST\").\n    :param url: URL to make the request to.\n    :param headers: Dictionary of headers to include in the request.\n    :param json_data: JSON payload for the request body.\n        If provided, Content-Type will be set to application/json.",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "run_command",
        "kind": 2,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "peekOfCode": "def run_command(command, cwd=None, shell=False):\n    \"\"\"\n    Run a shell command in the specified directory.\n    :param command: The command to run.\n    :param cwd: The directory to run the command in.\n    :param shell: Whether to use a shell to run the command.\n    \"\"\"\n    # TODO: #17 Fix it getting the correct path from the user's Windows environment\n    # Replace 'python3.11' with the current Python executable\n    if isinstance(command, list):",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "BaseLambdaHandler",
        "kind": 6,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.base_lambda_handler",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.base_lambda_handler",
        "peekOfCode": "class BaseLambdaHandler(ABC):\n    \"\"\"\n    BaseLambdaHandler is a class that can be used as a base for Lambda\n    handlers. It provides a few useful features such as exception handling and\n    execution hooks. At the very least, subclasses must override the\n    ``handle()`` method in order to service lambda function invocations.\n    This class relies on some core attributes:\n    - ``context``: this is the ``context`` parameter received from AWS when a\n        lambda function is invoked, and has to do AWS infrastructure;\n    - ``event``: this is the ``event`` parameter received from AWS when a",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.base_lambda_handler",
        "documentation": {}
    },
    {
        "label": "DynamoDBBase",
        "kind": 6,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.dynamodb_utils",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.dynamodb_utils",
        "peekOfCode": "class DynamoDBBase:\n    \"\"\"Handles common operations for DynamoDB tables.\"\"\"\n    def __init__(self, table_name):\n        self._table = dynamodb.Table(table_name)\n    def __convert_to_decimal(self, item):\n        \"\"\"\n        Convert all float values in the given dictionary or list to Decimals\n        compatible with DynamoDB.\n        DynamoDB requires numerical values to be expressed as Decimals instead\n        of floats, as it does not support the float data type directly. This",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "dynamodb",
        "kind": 5,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.dynamodb_utils",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.dynamodb_utils",
        "peekOfCode": "dynamodb = boto3.resource(\"dynamodb\")\nclass DynamoDBBase:\n    \"\"\"Handles common operations for DynamoDB tables.\"\"\"\n    def __init__(self, table_name):\n        self._table = dynamodb.Table(table_name)\n    def __convert_to_decimal(self, item):\n        \"\"\"\n        Convert all float values in the given dictionary or list to Decimals\n        compatible with DynamoDB.\n        DynamoDB requires numerical values to be expressed as Decimals instead",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "do_deploy",
        "kind": 2,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_deploy",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_deploy",
        "peekOfCode": "def do_deploy(do_log_func, run_cmd_func):\n    \"\"\"\n    Deploy the application.\n    \"\"\"\n    do_log_func(\"deploying...\")\n    # ensure the CDK is installed and deploy the stack\n    run_cmd_func(\"npm install -g aws-cdk\", shell=True)\n    run_cmd_func(\"cdk bootstrap\", shell=True)\n    run_cmd_func(\"cdk deploy --require-approval never\", shell=True)\n    do_log_func(\"deployed!\")",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_deploy",
        "documentation": {}
    },
    {
        "label": "do_install_req",
        "kind": 2,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_install_reqs",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_install_reqs",
        "peekOfCode": "def do_install_req(do_log_func, run_cmd_func):\n    \"\"\"\n    Main function to install all project requirements.\n    \"\"\"\n    _purge_pip_cache(do_log_func, run_cmd_func)\n    _remove_pip_selfcheck(do_log_func)\n    _upgrade_pip(do_log_func, run_cmd_func)\n    _install_dev_requirements(do_log_func, run_cmd_func)\n    _install_from_aws_common(do_log_func, run_cmd_func)\n    _install_requirements_recursively(do_log_func, run_cmd_func)",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_install_reqs",
        "documentation": {}
    },
    {
        "label": "do_reset_venv",
        "kind": 2,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_reset_venv",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_reset_venv",
        "peekOfCode": "def do_reset_venv(do_log_func, run_cmd_func):\n    \"\"\"\n    Recreate the Python virtual environment.\n    \"\"\"\n    do_log_func(f\"*** Deleting all content under {PYTHON_VENV_DIR}...\")\n    shutil.rmtree(PYTHON_VENV_DIR, ignore_errors=True)\n    do_log_func(\"*** Recreating Python virtual environment...\")\n    run_cmd_func([\"python3.11\", \"-m\", \"venv\", PYTHON_VENV_DIR])\n    activate_script = os.path.join(PYTHON_VENV_DIR, \"bin\", \"activate\")\n    # warn the user to activate the virtual environment",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_reset_venv",
        "documentation": {}
    },
    {
        "label": "PYTHON_VENV_DIR",
        "kind": 5,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_reset_venv",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_reset_venv",
        "peekOfCode": "PYTHON_VENV_DIR = \"venv\"\ndef do_reset_venv(do_log_func, run_cmd_func):\n    \"\"\"\n    Recreate the Python virtual environment.\n    \"\"\"\n    do_log_func(f\"*** Deleting all content under {PYTHON_VENV_DIR}...\")\n    shutil.rmtree(PYTHON_VENV_DIR, ignore_errors=True)\n    do_log_func(\"*** Recreating Python virtual environment...\")\n    run_cmd_func([\"python3.11\", \"-m\", \"venv\", PYTHON_VENV_DIR])\n    activate_script = os.path.join(PYTHON_VENV_DIR, \"bin\", \"activate\")",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_reset_venv",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup",
        "peekOfCode": "def main():\n    \"\"\"\n    Main function to parse command-line arguments and call the appropriate function.\n    \"\"\"\n    # Get the current script directory\n    current_dir = os.path.dirname(os.path.abspath(__file__))\n    # Construct path to sibling directory\n    common_project_dir = os.path.join(current_dir, \"..\", \"aws-common\")\n    # check if script directory exists\n    if not os.path.exists(common_project_dir):",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "peekOfCode": "def main():\n    \"\"\"\n    Main function to parse command-line arguments and call the appropriate function.\n    \"\"\"\n    error_msg_args = (\n        \"Usage: app_setup.py --<setup_venv|install_requirements|deploy|run_tests>\"\n    )\n    if len(sys.argv) != 4:\n        _do_log(error_msg_args)\n        sys.exit(1)",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_VENV_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_VENV_OPTIONS = {\n    \"--setup_venv\",\n    \"--setup\",\n    \"--reset_venv\",\n    \"setup_venv\",\n    \"setup\",\n    \"reset_venv\",\n}\nMENU_INSTALL_OPTIONS = {\n    \"--install_requirements\",",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_INSTALL_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_INSTALL_OPTIONS = {\n    \"--install_requirements\",\n    \"--install\",\n    \"--install_reqs\",\n    \"install_requirements\",\n    \"install\",\n    \"install_reqs\",\n}\nMENU_DEPLOY_OPTIONS = {\n    \"--deploy\",",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_DEPLOY_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_DEPLOY_OPTIONS = {\n    \"--deploy\",\n    \"--deploy_stack\",\n    \"--deploy_cdk\",\n    \"--deploy_app\",\n    \"deploy\",\n    \"deploy_stack\",\n    \"deploy_cdk\",\n    \"deploy_app\",\n}",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_FAST_DEPLOY_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_FAST_DEPLOY_OPTIONS = {\"fast_deploy\", \"--fast_deploy\"}\nMENU_HELP_OPTIONS = {\"--help\", \"-h\", \"help\"}\nMENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_HELP_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_HELP_OPTIONS = {\"--help\", \"-h\", \"help\"}\nMENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_TEST_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)\n# getting the project root directory",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)\n# getting the project root directory\ncurrent_dir = os.path.dirname(os.path.abspath(__file__))",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "current_dir",
        "kind": 5,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "peekOfCode": "current_dir = os.path.dirname(os.path.abspath(__file__))\nroot_dir = os.path.join(current_dir, \"..\")\n# finding the common directory\ncommon_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "root_dir",
        "kind": 5,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "peekOfCode": "root_dir = os.path.join(current_dir, \"..\")\n# finding the common directory\ncommon_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "common_dir",
        "kind": 5,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "peekOfCode": "common_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "utils_script_path",
        "kind": 5,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "peekOfCode": "utils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, line_len_limit: int = 150):\n    \"\"\"",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "spec",
        "kind": 5,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "peekOfCode": "spec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, line_len_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, line_len_limit=line_len_limit)\ndef _run_command(command, cwd=None, shell=False):",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "_UTILS_MODULE",
        "kind": 5,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "peekOfCode": "_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, line_len_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, line_len_limit=line_len_limit)\ndef _run_command(command, cwd=None, shell=False):\n    \"\"\"",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "sys.modules[\"app_utils_module\"]",
        "kind": 5,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "peekOfCode": "sys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, line_len_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, line_len_limit=line_len_limit)\ndef _run_command(command, cwd=None, shell=False):\n    \"\"\"\n    Wrapper function to call the run_command function from the app_utils module.",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "do_run_tests",
        "kind": 2,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_test",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_test",
        "peekOfCode": "def do_run_tests(do_log_func, run_cmd_func) -> bool:\n    \"\"\"\n    Run all the tests for the project.\n    \"\"\"\n    do_log_func(\"*** Running all tests for the project...\")\n    # python -m pytest tests/unit/\n    run_cmd_func([\"python\", \"-m\", \"pytest\", \"tests/unit/\"])\n    do_log_func(\"*** All tests passed.\")\n    # While we don't implement this behavior, we'll return True\n    return True",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.packages.app_scripts.app_test",
        "documentation": {}
    },
    {
        "label": "AppRole",
        "kind": 6,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.app_role_bo",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.app_role_bo",
        "peekOfCode": "class AppRole:\n    \"\"\"\n    Represents an AppRole entity.\n    \"\"\"\n    def __init__(self, app_id: str, role_source: str) -> None:\n        \"\"\"\n        Initializes an instance of the AppRole class.\n        :param app_id: Identifier for the application.\n        :param role_source: Source of the role definition.\n        \"\"\"",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.app_role_bo",
        "documentation": {}
    },
    {
        "label": "AppRoleBO",
        "kind": 6,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.app_role_bo",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.app_role_bo",
        "peekOfCode": "class AppRoleBO(DynamoDBBase):\n    \"\"\"\n    Business object for managing AppRole entities.\n    \"\"\"\n    def get_role_content(self, app_id: str) -> str:\n        \"\"\"\n        Retrieves the role content for the specified application.\n        :param app_id: Identifier for the application.\n        :return: Content of the role source as a string, or None if not found.\n        \"\"\"",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.app_role_bo",
        "documentation": {}
    },
    {
        "label": "ContextRetriever",
        "kind": 6,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.context_retriever",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.context_retriever",
        "peekOfCode": "class ContextRetriever(BaseLambdaHandler):\n    \"\"\"\n    A Lambda handler for retrieving context based on the provided app_id.\n    This class processes incoming events, validates inputs, retrieves app role content\n    from the database, and publishes the results to a custom event bus.\n    \"\"\"\n    def _handle(self) -> dict:\n        \"\"\"\n        Handle the incoming request, retrieve the app role, and publish the response.\n        :return: A dictionary containing the app role and the original payload.",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.context_retriever",
        "documentation": {}
    },
    {
        "label": "handler",
        "kind": 2,
        "importPath": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.context_retriever",
        "description": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.context_retriever",
        "peekOfCode": "def handler(event, context):\n    \"\"\"\n    Lambda entry point for handling context retrieval requests.\n    :param event: The event data passed to the Lambda function.\n    :param context: The runtime information for the Lambda function.\n    :return: The result from processing the event.\n    \"\"\"\n    _handler = ContextRetriever()\n    # Implicitly invokes __call__(), which:\n    #   - Executes _do_the_job(), which:",
        "detail": "cdk.out.asset.58f7d042fa0365c7eb42c292a1ccf7ab5b59f12405e5ed12d65e6872c6638349.context_retriever",
        "documentation": {}
    },
    {
        "label": "GrantPublishToCustomEventBusAspect",
        "kind": 6,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_common_stack",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_common_stack",
        "peekOfCode": "class GrantPublishToCustomEventBusAspect:\n    \"\"\"\n    Aspect that automatically grants permissions for all Lambda functions\n    in the stack to publish to a specific EventBridge event bus.\n    \"\"\"\n    def __init__(self, custom_event_bus_name: str) -> None:\n        self.custom_event_bus_name = custom_event_bus_name\n    def visit(self, node: IConstruct) -> None:\n        \"\"\"\n        Visit each node in the construct tree and attach",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_common_stack",
        "documentation": {}
    },
    {
        "label": "AppCommonStack",
        "kind": 6,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_common_stack",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_common_stack",
        "peekOfCode": "class AppCommonStack(Stack):\n    \"\"\"\n    A common stack that ensures all Lambda functions in the stack automatically\n    have permission to publish to the ErrorHandlingTopic.\n    \"\"\"\n    def __init__(self, scope: Construct, construct_id: str, **kwargs) -> None:\n        super().__init__(scope, construct_id, **kwargs)\n        if self._get_custom_event_bus_name():\n            Aspects.of(self).add(\n                GrantPublishToCustomEventBusAspect(self._get_custom_event_bus_name())",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_common_stack",
        "documentation": {}
    },
    {
        "label": "is_valid_email",
        "kind": 2,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_config",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_config",
        "peekOfCode": "def is_valid_email(email: str) -> bool:\n    \"\"\"Check if the provided email is valid using a regex pattern.\"\"\"\n    email_regex = r\"(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)\"\n    return re.match(email_regex, email) is not None\ntry:\n    email_recipients_parameter = os.environ[\"AppDefaultEmailRecipients\"]\n    if (\n        email_recipients_parameter.strip()\n    ):  # Check if the string is non-empty after stripping spaces\n        AppDefaultEmailRecipients = [",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_config",
        "documentation": {}
    },
    {
        "label": "DecimalEncoder",
        "kind": 6,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_utils",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_utils",
        "peekOfCode": "class DecimalEncoder(json.JSONEncoder):\n    \"\"\"\n    Utility class to encode `decimal.Decimal` objects as strings.\n    \"\"\"\n    def default(self, o):\n        if isinstance(o, decimal.Decimal):\n            return str(o)\n        return super().default(o)\ndef get_first_non_none(*args, **kwargs):\n    \"\"\"",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "get_first_non_none",
        "kind": 2,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_utils",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_utils",
        "peekOfCode": "def get_first_non_none(*args, **kwargs):\n    \"\"\"\n    Returns the first argument that is not None, in case such an argument\n    exists.\n    \"\"\"\n    return next(\n        (arg for arg in list(args) + list(kwargs.values()) if arg is not None), None\n    )\ndef get_first_element(lst: list):\n    \"\"\"",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "get_first_element",
        "kind": 2,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_utils",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_utils",
        "peekOfCode": "def get_first_element(lst: list):\n    \"\"\"\n    Returns the first element of a list, in case such an element exists.\n    \"\"\"\n    if not isinstance(lst, list):\n        raise TypeError(f\"Expected list, got {type(lst).__name__}\")\n    return lst[0] if lst else None\ndef str_is_none_or_empty(s) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is `None` or evaluates to an",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "str_is_none_or_empty",
        "kind": 2,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_utils",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_utils",
        "peekOfCode": "def str_is_none_or_empty(s) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is `None` or evaluates to an\n    empty string, or `False` otherwise.\n    \"\"\"\n    if s is None:\n        return True\n    if isinstance(s, str):\n        return s.strip() == \"\"\n    if str(s).strip() == \"\":",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "is_numeric",
        "kind": 2,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_utils",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_utils",
        "peekOfCode": "def is_numeric(x) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is numeric. An argument is\n    considered numeric if it is either an `int`, a `float`, or a string\n    representing a number.\n    \"\"\"\n    if x is None:\n        return False\n    try:\n        float(x)",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "http_request",
        "kind": 2,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_utils",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_utils",
        "peekOfCode": "def http_request(\n    method, url, headers=None, json_data=None, params=None, timeout=30, **kwargs\n):\n    \"\"\"\n    Make an HTTP request using urllib3.\n    :param method: HTTP method (e.g., \"GET\", \"POST\").\n    :param url: URL to make the request to.\n    :param headers: Dictionary of headers to include in the request.\n    :param json_data: JSON payload for the request body.\n        If provided, Content-Type will be set to application/json.",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "run_command",
        "kind": 2,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_utils",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_utils",
        "peekOfCode": "def run_command(command, cwd=None, shell=False):\n    \"\"\"\n    Run a shell command in the specified directory.\n    :param command: The command to run.\n    :param cwd: The directory to run the command in.\n    :param shell: Whether to use a shell to run the command.\n    \"\"\"\n    # TODO: #17 Fix it getting the correct path from the user's Windows environment\n    # Replace 'python3.11' with the current Python executable\n    if isinstance(command, list):",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "BaseLambdaHandler",
        "kind": 6,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.base_lambda_handler",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.base_lambda_handler",
        "peekOfCode": "class BaseLambdaHandler(ABC):\n    \"\"\"\n    BaseLambdaHandler is a class that can be used as a base for Lambda\n    handlers. It provides a few useful features such as exception handling and\n    execution hooks. At the very least, subclasses must override the\n    ``handle()`` method in order to service lambda function invocations.\n    This class relies on some core attributes:\n    - ``context``: this is the ``context`` parameter received from AWS when a\n        lambda function is invoked, and has to do AWS infrastructure;\n    - ``event``: this is the ``event`` parameter received from AWS when a",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.base_lambda_handler",
        "documentation": {}
    },
    {
        "label": "DynamoDBBase",
        "kind": 6,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.dynamodb_utils",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.dynamodb_utils",
        "peekOfCode": "class DynamoDBBase:\n    \"\"\"Handles common operations for DynamoDB tables.\"\"\"\n    def __init__(self, table_name):\n        self._table = dynamodb.Table(table_name)\n    def __convert_to_decimal(self, item):\n        \"\"\"\n        Convert all float values in the given dictionary or list to Decimals\n        compatible with DynamoDB.\n        DynamoDB requires numerical values to be expressed as Decimals instead\n        of floats, as it does not support the float data type directly. This",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "dynamodb",
        "kind": 5,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.dynamodb_utils",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.dynamodb_utils",
        "peekOfCode": "dynamodb = boto3.resource(\"dynamodb\")\nclass DynamoDBBase:\n    \"\"\"Handles common operations for DynamoDB tables.\"\"\"\n    def __init__(self, table_name):\n        self._table = dynamodb.Table(table_name)\n    def __convert_to_decimal(self, item):\n        \"\"\"\n        Convert all float values in the given dictionary or list to Decimals\n        compatible with DynamoDB.\n        DynamoDB requires numerical values to be expressed as Decimals instead",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "do_deploy",
        "kind": 2,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_deploy",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_deploy",
        "peekOfCode": "def do_deploy(do_log_func, run_cmd_func):\n    \"\"\"\n    Deploy the application.\n    \"\"\"\n    do_log_func(\"deploying...\")\n    # ensure the CDK is installed and deploy the stack\n    run_cmd_func(\"npm install -g aws-cdk\", shell=True)\n    run_cmd_func(\"cdk bootstrap\", shell=True)\n    run_cmd_func(\"cdk deploy --require-approval never\", shell=True)\n    do_log_func(\"deployed!\")",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_deploy",
        "documentation": {}
    },
    {
        "label": "do_install_req",
        "kind": 2,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_install_reqs",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_install_reqs",
        "peekOfCode": "def do_install_req(do_log_func, run_cmd_func):\n    \"\"\"\n    Main function to install all project requirements.\n    \"\"\"\n    _purge_pip_cache(do_log_func, run_cmd_func)\n    _remove_pip_selfcheck(do_log_func)\n    _upgrade_pip(do_log_func, run_cmd_func)\n    _install_dev_requirements(do_log_func, run_cmd_func)\n    _install_from_aws_common(do_log_func, run_cmd_func)\n    _install_requirements_recursively(do_log_func, run_cmd_func)",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_install_reqs",
        "documentation": {}
    },
    {
        "label": "do_reset_venv",
        "kind": 2,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_reset_venv",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_reset_venv",
        "peekOfCode": "def do_reset_venv(do_log_func, run_cmd_func):\n    \"\"\"\n    Recreate the Python virtual environment.\n    \"\"\"\n    do_log_func(f\"*** Deleting all content under {PYTHON_VENV_DIR}...\")\n    shutil.rmtree(PYTHON_VENV_DIR, ignore_errors=True)\n    do_log_func(\"*** Recreating Python virtual environment...\")\n    run_cmd_func([\"python3.11\", \"-m\", \"venv\", PYTHON_VENV_DIR])\n    activate_script = os.path.join(PYTHON_VENV_DIR, \"bin\", \"activate\")\n    # warn the user to activate the virtual environment",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_reset_venv",
        "documentation": {}
    },
    {
        "label": "PYTHON_VENV_DIR",
        "kind": 5,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_reset_venv",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_reset_venv",
        "peekOfCode": "PYTHON_VENV_DIR = \"venv\"\ndef do_reset_venv(do_log_func, run_cmd_func):\n    \"\"\"\n    Recreate the Python virtual environment.\n    \"\"\"\n    do_log_func(f\"*** Deleting all content under {PYTHON_VENV_DIR}...\")\n    shutil.rmtree(PYTHON_VENV_DIR, ignore_errors=True)\n    do_log_func(\"*** Recreating Python virtual environment...\")\n    run_cmd_func([\"python3.11\", \"-m\", \"venv\", PYTHON_VENV_DIR])\n    activate_script = os.path.join(PYTHON_VENV_DIR, \"bin\", \"activate\")",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_reset_venv",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup",
        "peekOfCode": "def main():\n    \"\"\"\n    Main function to parse command-line arguments and call the appropriate function.\n    \"\"\"\n    # Get the current script directory\n    current_dir = os.path.dirname(os.path.abspath(__file__))\n    # Construct path to sibling directory\n    common_project_dir = os.path.join(current_dir, \"..\", \"aws-common\")\n    # check if script directory exists\n    if not os.path.exists(common_project_dir):",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "peekOfCode": "def main():\n    \"\"\"\n    Main function to parse command-line arguments and call the appropriate function.\n    \"\"\"\n    error_msg_args = (\n        \"Usage: app_setup.py --<setup_venv|install_requirements|deploy|run_tests>\"\n    )\n    if len(sys.argv) != 4:\n        _do_log(error_msg_args)\n        sys.exit(1)",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_VENV_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_VENV_OPTIONS = {\n    \"--setup_venv\",\n    \"--setup\",\n    \"--reset_venv\",\n    \"setup_venv\",\n    \"setup\",\n    \"reset_venv\",\n}\nMENU_INSTALL_OPTIONS = {\n    \"--install_requirements\",",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_INSTALL_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_INSTALL_OPTIONS = {\n    \"--install_requirements\",\n    \"--install\",\n    \"--install_reqs\",\n    \"install_requirements\",\n    \"install\",\n    \"install_reqs\",\n}\nMENU_DEPLOY_OPTIONS = {\n    \"--deploy\",",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_DEPLOY_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_DEPLOY_OPTIONS = {\n    \"--deploy\",\n    \"--deploy_stack\",\n    \"--deploy_cdk\",\n    \"--deploy_app\",\n    \"deploy\",\n    \"deploy_stack\",\n    \"deploy_cdk\",\n    \"deploy_app\",\n}",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_FAST_DEPLOY_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_FAST_DEPLOY_OPTIONS = {\"fast_deploy\", \"--fast_deploy\"}\nMENU_HELP_OPTIONS = {\"--help\", \"-h\", \"help\"}\nMENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_HELP_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_HELP_OPTIONS = {\"--help\", \"-h\", \"help\"}\nMENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_TEST_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)\n# getting the project root directory",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)\n# getting the project root directory\ncurrent_dir = os.path.dirname(os.path.abspath(__file__))",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "current_dir",
        "kind": 5,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "peekOfCode": "current_dir = os.path.dirname(os.path.abspath(__file__))\nroot_dir = os.path.join(current_dir, \"..\")\n# finding the common directory\ncommon_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "root_dir",
        "kind": 5,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "peekOfCode": "root_dir = os.path.join(current_dir, \"..\")\n# finding the common directory\ncommon_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "common_dir",
        "kind": 5,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "peekOfCode": "common_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "utils_script_path",
        "kind": 5,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "peekOfCode": "utils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, log_limit: int = 150):\n    \"\"\"",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "spec",
        "kind": 5,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "peekOfCode": "spec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, log_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, log_limit=log_limit)\ndef _run_command(command, cwd=None, shell=False):",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "_UTILS_MODULE",
        "kind": 5,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "peekOfCode": "_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, log_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, log_limit=log_limit)\ndef _run_command(command, cwd=None, shell=False):\n    \"\"\"",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "sys.modules[\"app_utils_module\"]",
        "kind": 5,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "peekOfCode": "sys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, log_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, log_limit=log_limit)\ndef _run_command(command, cwd=None, shell=False):\n    \"\"\"\n    Wrapper function to call the run_command function from the app_utils module.",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "do_run_tests",
        "kind": 2,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_test",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_test",
        "peekOfCode": "def do_run_tests(do_log_func, run_cmd_func) -> bool:\n    \"\"\"\n    Run all the tests for the project.\n    \"\"\"\n    do_log_func(\"*** Running all tests for the project...\")\n    # python -m pytest tests/unit/\n    run_cmd_func([\"python\", \"-m\", \"pytest\", \"tests/unit/\"])\n    do_log_func(\"*** All tests passed.\")\n    # While we don't implement this behavior, we'll return True\n    return True",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.packages.app_scripts.app_test",
        "documentation": {}
    },
    {
        "label": "AppRole",
        "kind": 6,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.app_role_bo",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.app_role_bo",
        "peekOfCode": "class AppRole:\n    \"\"\"\n    Represents an AppRole entity.\n    \"\"\"\n    def __init__(self, app_id: str, role_source: str) -> None:\n        \"\"\"\n        Initializes an instance of the AppRole class.\n        :param app_id: Identifier for the application.\n        :param role_source: Source of the role definition.\n        \"\"\"",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.app_role_bo",
        "documentation": {}
    },
    {
        "label": "AppRoleBO",
        "kind": 6,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.app_role_bo",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.app_role_bo",
        "peekOfCode": "class AppRoleBO(DynamoDBBase):\n    \"\"\"\n    Business object for managing AppRole entities.\n    \"\"\"\n    def get_role_content(self, app_id: str) -> str:\n        \"\"\"\n        Retrieves the role content for the specified application.\n        :param app_id: Identifier for the application.\n        :return: Content of the role source as a string, or None if not found.\n        \"\"\"",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.app_role_bo",
        "documentation": {}
    },
    {
        "label": "ContextRetriever",
        "kind": 6,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.context_retriever",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.context_retriever",
        "peekOfCode": "class ContextRetriever(BaseLambdaHandler):\n    \"\"\"\n    A Lambda handler for retrieving context based on the provided app_id.\n    This class processes incoming events, validates inputs, retrieves app role content\n    from the database, and publishes the results to a custom event bus.\n    \"\"\"\n    def _handle(self) -> dict:\n        \"\"\"\n        Handle the incoming request, retrieve the app role, and publish the response.\n        :return: A dictionary containing the app role and the original payload.",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.context_retriever",
        "documentation": {}
    },
    {
        "label": "handler",
        "kind": 2,
        "importPath": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.context_retriever",
        "description": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.context_retriever",
        "peekOfCode": "def handler(event, context):\n    \"\"\"\n    Lambda entry point for handling context retrieval requests.\n    :param event: The event data passed to the Lambda function.\n    :param context: The runtime information for the Lambda function.\n    :return: The result from processing the event.\n    \"\"\"\n    _handler = ContextRetriever()\n    # Implicitly invokes __call__(), which:\n    #   - Executes _do_the_job(), which:",
        "detail": "cdk.out.asset.6d56d66cf0f20e74df381a691e0204dfee7f0ff38e756ffe59252fe674e87d7e.context_retriever",
        "documentation": {}
    },
    {
        "label": "GrantPublishToCustomEventBusAspect",
        "kind": 6,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_common_stack",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_common_stack",
        "peekOfCode": "class GrantPublishToCustomEventBusAspect:\n    \"\"\"\n    Aspect that automatically grants permissions for all Lambda functions\n    in the stack to publish to a specific EventBridge event bus.\n    \"\"\"\n    def __init__(self, custom_event_bus_name: str) -> None:\n        self.custom_event_bus_name = custom_event_bus_name\n    def visit(self, node: IConstruct) -> None:\n        \"\"\"\n        Visit each node in the construct tree and attach",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_common_stack",
        "documentation": {}
    },
    {
        "label": "AppCommonStack",
        "kind": 6,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_common_stack",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_common_stack",
        "peekOfCode": "class AppCommonStack(Stack):\n    \"\"\"\n    A common stack that ensures all Lambda functions in the stack automatically\n    have permission to publish to the ErrorHandlingTopic.\n    \"\"\"\n    def __init__(self, scope: Construct, construct_id: str, **kwargs) -> None:\n        super().__init__(scope, construct_id, **kwargs)\n        if self._get_custom_event_bus_name():\n            Aspects.of(self).add(\n                GrantPublishToCustomEventBusAspect(self._get_custom_event_bus_name())",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_common_stack",
        "documentation": {}
    },
    {
        "label": "is_valid_email",
        "kind": 2,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_config",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_config",
        "peekOfCode": "def is_valid_email(email: str) -> bool:\n    \"\"\"Check if the provided email is valid using a regex pattern.\"\"\"\n    email_regex = r\"(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)\"\n    return re.match(email_regex, email) is not None\ntry:\n    email_recipients_parameter = os.environ[\"AppDefaultEmailRecipients\"]\n    if (\n        email_recipients_parameter.strip()\n    ):  # Check if the string is non-empty after stripping spaces\n        AppDefaultEmailRecipients = [",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_config",
        "documentation": {}
    },
    {
        "label": "DecimalEncoder",
        "kind": 6,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "peekOfCode": "class DecimalEncoder(json.JSONEncoder):\n    \"\"\"\n    Utility class to encode `decimal.Decimal` objects as strings.\n    \"\"\"\n    def default(self, o):\n        if isinstance(o, decimal.Decimal):\n            return str(o)\n        return super().default(o)\ndef get_first_non_none(*args, **kwargs):\n    \"\"\"",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "get_first_non_none",
        "kind": 2,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "peekOfCode": "def get_first_non_none(*args, **kwargs):\n    \"\"\"\n    Returns the first argument that is not None, in case such an argument\n    exists.\n    \"\"\"\n    return next(\n        (arg for arg in list(args) + list(kwargs.values()) if arg is not None), None\n    )\ndef get_first_element(lst: list):\n    \"\"\"",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "get_first_element",
        "kind": 2,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "peekOfCode": "def get_first_element(lst: list):\n    \"\"\"\n    Returns the first element of a list, in case such an element exists.\n    \"\"\"\n    if not isinstance(lst, list):\n        raise TypeError(f\"Expected list, got {type(lst).__name__}\")\n    return lst[0] if lst else None\ndef str_is_none_or_empty(s) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is `None` or evaluates to an",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "str_is_none_or_empty",
        "kind": 2,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "peekOfCode": "def str_is_none_or_empty(s) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is `None` or evaluates to an\n    empty string, or `False` otherwise.\n    \"\"\"\n    if s is None:\n        return True\n    if isinstance(s, str):\n        return s.strip() == \"\"\n    if str(s).strip() == \"\":",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "is_numeric",
        "kind": 2,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "peekOfCode": "def is_numeric(x) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is numeric. An argument is\n    considered numeric if it is either an `int`, a `float`, or a string\n    representing a number.\n    \"\"\"\n    if x is None:\n        return False\n    try:\n        float(x)",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "json_dumps",
        "kind": 2,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "peekOfCode": "def json_dumps(data, indent=4, cls=DecimalEncoder) -> str:\n    \"\"\"\n    Utility method to serialize data to JSON, including Decimal values.\n    \"\"\"\n    return json.dumps(data, indent=indent, cls=cls)\ndef _do_log(\n    obj,\n    title=None,\n    line_len_limit: int = 100,\n    line_break_chars: str = \" \",",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "http_request",
        "kind": 2,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "peekOfCode": "def http_request(\n    method, url, headers=None, json_data=None, params=None, timeout=30, **kwargs\n):\n    \"\"\"\n    Make an HTTP request using urllib3.\n    :param method: HTTP method (e.g., \"GET\", \"POST\").\n    :param url: URL to make the request to.\n    :param headers: Dictionary of headers to include in the request.\n    :param json_data: JSON payload for the request body.\n        If provided, Content-Type will be set to application/json.",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "run_command",
        "kind": 2,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "peekOfCode": "def run_command(command, cwd=None, shell=False):\n    \"\"\"\n    Run a shell command in the specified directory.\n    :param command: The command to run.\n    :param cwd: The directory to run the command in.\n    :param shell: Whether to use a shell to run the command.\n    \"\"\"\n    # TODO: #17 Fix it getting the correct path from the user's Windows environment\n    # Replace 'python3.11' with the current Python executable\n    if isinstance(command, list):",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "unix_epoch_now",
        "kind": 2,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "peekOfCode": "def unix_epoch_now() -> int:\n    \"\"\"\n    Utility method to return the current timestamp,\n    considering the Unix Epoch reference.\n    \"\"\"\n    return int(time.time())",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "BaseLambdaHandler",
        "kind": 6,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.base_lambda_handler",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.base_lambda_handler",
        "peekOfCode": "class BaseLambdaHandler(ABC):\n    \"\"\"\n    BaseLambdaHandler is a class that can be used as a base for Lambda\n    handlers. It provides a few useful features such as exception handling and\n    execution hooks. At the very least, subclasses must override the\n    ``handle()`` method in order to service lambda function invocations.\n    This class relies on some core attributes:\n    - ``context``: this is the ``context`` parameter received from AWS when a\n        lambda function is invoked, and has to do AWS infrastructure;\n    - ``event``: this is the ``event`` parameter received from AWS when a",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.base_lambda_handler",
        "documentation": {}
    },
    {
        "label": "DynamoDBBase",
        "kind": 6,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.dynamodb_utils",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.dynamodb_utils",
        "peekOfCode": "class DynamoDBBase:\n    \"\"\"Handles common operations for DynamoDB tables.\"\"\"\n    def __init__(self, table_name):\n        self._table_name = table_name\n        self._table = dynamodb.Table(table_name)\n    def recreate_table_resource(self):\n        \"\"\"\n        Recreates the ``Table`` resource of this instance through the global\n        ``dynamodb`` resource. This is meant to be used mainly for testing purposes,\n        e.g., after replacing the global ``dynamodb`` resource to point to a DynamoDB",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "replace_dynamodb_resource",
        "kind": 2,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.dynamodb_utils",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.dynamodb_utils",
        "peekOfCode": "def replace_dynamodb_resource(new_dynamodb_resource):\n    \"\"\"\n    Replaces the global ``dynamodb`` resource with the given resource.\n    This is meant to be used mainly for testing purposes, e.g., to use a DynamoDB\n    Local instance instead of the default one provided by the AWS environment:\n    ```\n    new_dynamodb = boto3.resource(\"dynamodb\", endpoint_url=\"http://localhost:8000\")\n    replace_dynamodb_resource(new_dynamodb)\n    ```\n    \"\"\"",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "create_table_resource",
        "kind": 2,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.dynamodb_utils",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.dynamodb_utils",
        "peekOfCode": "def create_table_resource(\n    table_name: str,\n    partition_key_name: str,\n    partition_key_attribute_type: str,\n    sort_key_name: str,\n    sort_key_attribute_type: str,\n    global_secondary_index_name: str,\n    global_secondary_index_partition_key_name: str,\n    global_secondary_index_projection_type: str = \"ALL\",\n    table_read_capacity_units: int = 1,",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "dynamodb",
        "kind": 5,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.dynamodb_utils",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.dynamodb_utils",
        "peekOfCode": "dynamodb = boto3.resource(\"dynamodb\")\ndef replace_dynamodb_resource(new_dynamodb_resource):\n    \"\"\"\n    Replaces the global ``dynamodb`` resource with the given resource.\n    This is meant to be used mainly for testing purposes, e.g., to use a DynamoDB\n    Local instance instead of the default one provided by the AWS environment:\n    ```\n    new_dynamodb = boto3.resource(\"dynamodb\", endpoint_url=\"http://localhost:8000\")\n    replace_dynamodb_resource(new_dynamodb)\n    ```",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "set_aws_environment_variables",
        "kind": 2,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.utils4tests",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.utils4tests",
        "peekOfCode": "def set_aws_environment_variables(\n    aws_access_key_id: str,\n    aws_secret_access_key: str,\n    aws_security_token: str,\n    aws_session_token: str,\n    aws_default_region: str = \"us-east-1\",\n):\n    \"\"\"\n    Sets some environment variables used by AWS.\n    \"\"\"",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.utils4tests",
        "documentation": {}
    },
    {
        "label": "set_fake_aws_environment_variables",
        "kind": 2,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.utils4tests",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.utils4tests",
        "peekOfCode": "def set_fake_aws_environment_variables(aws_default_region: str = \"us-east-1\"):\n    \"\"\"\n    Sets some environment variables used by AWS with fake values.\n    This is meant to be used mainly for testing purposes, as some resources provided\n    by the ``boto3`` library refuse to initialize when certain environment variables\n    are empty.\n    \"\"\"\n    set_aws_environment_variables(\n        \"testing\", \"testing\", \"testing\", \"testing\", aws_default_region\n    )",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_common.utils4tests",
        "documentation": {}
    },
    {
        "label": "do_deploy",
        "kind": 2,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_deploy",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_deploy",
        "peekOfCode": "def do_deploy(do_log_func, run_cmd_func):\n    \"\"\"\n    Deploy the application.\n    \"\"\"\n    do_log_func(\"deploying...\")\n    # ensure the CDK is installed and deploy the stack\n    run_cmd_func(\"npm install -g aws-cdk\", shell=True)\n    run_cmd_func(\"cdk bootstrap\", shell=True)\n    run_cmd_func(\"cdk deploy --require-approval never\", shell=True)\n    do_log_func(\"deployed!\")",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_deploy",
        "documentation": {}
    },
    {
        "label": "do_install_req",
        "kind": 2,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_install_reqs",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_install_reqs",
        "peekOfCode": "def do_install_req(do_log_func, run_cmd_func):\n    \"\"\"\n    Main function to install all project requirements.\n    \"\"\"\n    _purge_pip_cache(do_log_func, run_cmd_func)\n    _remove_pip_selfcheck(do_log_func)\n    _upgrade_pip(do_log_func, run_cmd_func)\n    _install_dev_requirements(do_log_func, run_cmd_func)\n    _install_from_aws_common(do_log_func, run_cmd_func)\n    _install_requirements_recursively(do_log_func, run_cmd_func)",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_install_reqs",
        "documentation": {}
    },
    {
        "label": "do_reset_venv",
        "kind": 2,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_reset_venv",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_reset_venv",
        "peekOfCode": "def do_reset_venv(do_log_func, run_cmd_func):\n    \"\"\"\n    Recreate the Python virtual environment.\n    \"\"\"\n    do_log_func(f\"*** Deleting all content under {PYTHON_VENV_DIR}...\")\n    shutil.rmtree(PYTHON_VENV_DIR, ignore_errors=True)\n    do_log_func(\"*** Recreating Python virtual environment...\")\n    run_cmd_func([\"python3.11\", \"-m\", \"venv\", PYTHON_VENV_DIR])\n    activate_script = os.path.join(PYTHON_VENV_DIR, \"bin\", \"activate\")\n    # warn the user to activate the virtual environment",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_reset_venv",
        "documentation": {}
    },
    {
        "label": "PYTHON_VENV_DIR",
        "kind": 5,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_reset_venv",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_reset_venv",
        "peekOfCode": "PYTHON_VENV_DIR = \"venv\"\ndef do_reset_venv(do_log_func, run_cmd_func):\n    \"\"\"\n    Recreate the Python virtual environment.\n    \"\"\"\n    do_log_func(f\"*** Deleting all content under {PYTHON_VENV_DIR}...\")\n    shutil.rmtree(PYTHON_VENV_DIR, ignore_errors=True)\n    do_log_func(\"*** Recreating Python virtual environment...\")\n    run_cmd_func([\"python3.11\", \"-m\", \"venv\", PYTHON_VENV_DIR])\n    activate_script = os.path.join(PYTHON_VENV_DIR, \"bin\", \"activate\")",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_reset_venv",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup",
        "peekOfCode": "def main():\n    \"\"\"\n    Main function to parse command-line arguments and call the appropriate function.\n    \"\"\"\n    # Get the current script directory\n    current_dir = os.path.dirname(os.path.abspath(__file__))\n    # Construct path to sibling directory\n    common_project_dir = os.path.join(current_dir, \"..\", \"aws-common\")\n    # check if script directory exists\n    if not os.path.exists(common_project_dir):",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "peekOfCode": "def main():\n    \"\"\"\n    Main function to parse command-line arguments and call the appropriate function.\n    \"\"\"\n    error_msg_args = (\n        \"Usage: app_setup.py --<setup_venv|install_requirements|deploy|run_tests>\"\n    )\n    if len(sys.argv) != 4:\n        _do_log(error_msg_args)\n        sys.exit(1)",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_VENV_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_VENV_OPTIONS = {\n    \"--setup_venv\",\n    \"--setup\",\n    \"--reset_venv\",\n    \"setup_venv\",\n    \"setup\",\n    \"reset_venv\",\n}\nMENU_INSTALL_OPTIONS = {\n    \"--install_requirements\",",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_INSTALL_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_INSTALL_OPTIONS = {\n    \"--install_requirements\",\n    \"--install\",\n    \"--install_reqs\",\n    \"install_requirements\",\n    \"install\",\n    \"install_reqs\",\n}\nMENU_DEPLOY_OPTIONS = {\n    \"--deploy\",",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_DEPLOY_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_DEPLOY_OPTIONS = {\n    \"--deploy\",\n    \"--deploy_stack\",\n    \"--deploy_cdk\",\n    \"--deploy_app\",\n    \"deploy\",\n    \"deploy_stack\",\n    \"deploy_cdk\",\n    \"deploy_app\",\n}",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_FAST_DEPLOY_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_FAST_DEPLOY_OPTIONS = {\"fast_deploy\", \"--fast_deploy\"}\nMENU_HELP_OPTIONS = {\"--help\", \"-h\", \"help\"}\nMENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_HELP_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_HELP_OPTIONS = {\"--help\", \"-h\", \"help\"}\nMENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_TEST_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)\n# getting the project root directory",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)\n# getting the project root directory\ncurrent_dir = os.path.dirname(os.path.abspath(__file__))",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "current_dir",
        "kind": 5,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "peekOfCode": "current_dir = os.path.dirname(os.path.abspath(__file__))\nroot_dir = os.path.join(current_dir, \"..\")\n# finding the common directory\ncommon_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "root_dir",
        "kind": 5,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "peekOfCode": "root_dir = os.path.join(current_dir, \"..\")\n# finding the common directory\ncommon_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "common_dir",
        "kind": 5,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "peekOfCode": "common_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "utils_script_path",
        "kind": 5,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "peekOfCode": "utils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, line_len_limit: int = 150):\n    \"\"\"",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "spec",
        "kind": 5,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "peekOfCode": "spec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, line_len_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, line_len_limit=line_len_limit)\ndef _run_command(command, cwd=None, shell=False):",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "_UTILS_MODULE",
        "kind": 5,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "peekOfCode": "_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, line_len_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, line_len_limit=line_len_limit)\ndef _run_command(command, cwd=None, shell=False):\n    \"\"\"",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "sys.modules[\"app_utils_module\"]",
        "kind": 5,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "peekOfCode": "sys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, line_len_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, line_len_limit=line_len_limit)\ndef _run_command(command, cwd=None, shell=False):\n    \"\"\"\n    Wrapper function to call the run_command function from the app_utils module.",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "do_run_tests",
        "kind": 2,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_test",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_test",
        "peekOfCode": "def do_run_tests(do_log_func, run_cmd_func) -> bool:\n    \"\"\"\n    Run all the tests for the project.\n    \"\"\"\n    do_log_func(\"*** Running all tests for the project...\")\n    # python -m pytest tests/unit/\n    run_cmd_func([\"python\", \"-m\", \"pytest\", \"tests/unit/\"])\n    do_log_func(\"*** All tests passed.\")\n    # While we don't implement this behavior, we'll return True\n    return True",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.packages.app_scripts.app_test",
        "documentation": {}
    },
    {
        "label": "AppRole",
        "kind": 6,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.app_role_bo",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.app_role_bo",
        "peekOfCode": "class AppRole:\n    \"\"\"\n    Represents an AppRole entity.\n    \"\"\"\n    def __init__(self, app_id: str, role_source: str) -> None:\n        \"\"\"\n        Initializes an instance of the AppRole class.\n        :param app_id: Identifier for the application.\n        :param role_source: Source of the role definition.\n        \"\"\"",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.app_role_bo",
        "documentation": {}
    },
    {
        "label": "AppRoleBO",
        "kind": 6,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.app_role_bo",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.app_role_bo",
        "peekOfCode": "class AppRoleBO(DynamoDBBase):\n    \"\"\"\n    Business object for managing AppRole entities.\n    \"\"\"\n    def get_role_content(self, app_id: str) -> str:\n        \"\"\"\n        Retrieves the role content for the specified application.\n        :param app_id: Identifier for the application.\n        :return: Content of the role source as a string, or None if not found.\n        \"\"\"",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.app_role_bo",
        "documentation": {}
    },
    {
        "label": "ContextRetriever",
        "kind": 6,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.context_retriever",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.context_retriever",
        "peekOfCode": "class ContextRetriever(BaseLambdaHandler):\n    \"\"\"\n    A Lambda handler for retrieving context based on the provided app_id.\n    This class processes incoming events, validates inputs, retrieves app role content\n    from the database, and publishes the results to a custom event bus.\n    \"\"\"\n    def _handle(self) -> dict:\n        \"\"\"\n        Handle the incoming request, retrieve the app role, and publish the response.\n        :return: A dictionary containing the app role and the original payload.",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.context_retriever",
        "documentation": {}
    },
    {
        "label": "handler",
        "kind": 2,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.context_retriever",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.context_retriever",
        "peekOfCode": "def handler(event, context):\n    \"\"\"\n    Lambda entry point for handling context retrieval requests.\n    :param event: The event data passed to the Lambda function.\n    :param context: The runtime information for the Lambda function.\n    :return: The result from processing the event.\n    \"\"\"\n    _handler = ContextRetriever()\n    # Implicitly invokes __call__(), which:\n    #   - Executes _do_the_job(), which:",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.context_retriever",
        "documentation": {}
    },
    {
        "label": "UserLongTermMemory",
        "kind": 6,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.long_memory_bo",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.long_memory_bo",
        "peekOfCode": "class UserLongTermMemory:\n    \"\"\"\n    Represents an UserLongTermMemory entity.\n    \"\"\"\n    def __init__(self, user_id: str, memory: str) -> None:\n        \"\"\"\n        Initializes an instance of the UserLongTermMemory class.\n        :param user_id: Identifier for the user.\n        :param memory: the user memory register.\n        \"\"\"",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.long_memory_bo",
        "documentation": {}
    },
    {
        "label": "UserLongTermMemoryBO",
        "kind": 6,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.long_memory_bo",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.long_memory_bo",
        "peekOfCode": "class UserLongTermMemoryBO(DynamoDBBase):\n    \"\"\"\n    Business object for managing UserLongTermMemory entities.\n    \"\"\"\n    @lru_cache\n    def get_last_memory(self, user_id: str) -> UserLongTermMemory:\n        \"\"\"\n        Retrieves the role content for the specified application.\n        :param user_id: Identifier for the application.\n        :return: Memory as a UserLongTermMemory object, or None if not found.",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.long_memory_bo",
        "documentation": {}
    },
    {
        "label": "LongMemoryUpdater",
        "kind": 6,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.long_memory_updater",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.long_memory_updater",
        "peekOfCode": "class LongMemoryUpdater(BaseLambdaHandler):\n    \"\"\"\n    A Lambda handler for updating the long-term memory of a user\n    based on the interaction between a user and a chatbot.\n    \"\"\"\n    def __gen_prompt_input_msg(\n        self, current_summary: str, user_message: str, chatbot_response: str\n    ) -> str:\n        \"\"\"\n        Generate a prompt for the AI model based on the current summary,",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.long_memory_updater",
        "documentation": {}
    },
    {
        "label": "handler",
        "kind": 2,
        "importPath": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.long_memory_updater",
        "description": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.long_memory_updater",
        "peekOfCode": "def handler(event, context):\n    \"\"\"\n    Lambda entry point for handling context retrieval requests.\n    :param event: The event data passed to the Lambda function.\n    :param context: The runtime information for the Lambda function.\n    :return: The result from processing the event.\n    \"\"\"\n    _handler = LongMemoryUpdater()\n    # Invokes the BaseLambdaHandler logic chain\n    return _handler(event, context)",
        "detail": "cdk.out.asset.877078f21098bbb8e1e5d55cdaee96117ea60bd6d1e35892bc5b69627af708b3.long_memory_updater",
        "documentation": {}
    },
    {
        "label": "GrantPublishToCustomEventBusAspect",
        "kind": 6,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_common_stack",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_common_stack",
        "peekOfCode": "class GrantPublishToCustomEventBusAspect:\n    \"\"\"\n    Aspect that automatically grants permissions for all Lambda functions\n    in the stack to publish to a specific EventBridge event bus.\n    \"\"\"\n    def __init__(self, custom_event_bus_name: str) -> None:\n        self.custom_event_bus_name = custom_event_bus_name\n    def visit(self, node: IConstruct) -> None:\n        \"\"\"\n        Visit each node in the construct tree and attach",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_common_stack",
        "documentation": {}
    },
    {
        "label": "AppCommonStack",
        "kind": 6,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_common_stack",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_common_stack",
        "peekOfCode": "class AppCommonStack(Stack):\n    \"\"\"\n    A common stack that ensures all Lambda functions in the stack automatically\n    have permission to publish to the ErrorHandlingTopic.\n    \"\"\"\n    def __init__(self, scope: Construct, construct_id: str, **kwargs) -> None:\n        super().__init__(scope, construct_id, **kwargs)\n        if self._get_custom_event_bus_name():\n            Aspects.of(self).add(\n                GrantPublishToCustomEventBusAspect(self._get_custom_event_bus_name())",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_common_stack",
        "documentation": {}
    },
    {
        "label": "is_valid_email",
        "kind": 2,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_config",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_config",
        "peekOfCode": "def is_valid_email(email: str) -> bool:\n    \"\"\"Check if the provided email is valid using a regex pattern.\"\"\"\n    email_regex = r\"(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)\"\n    return re.match(email_regex, email) is not None\ntry:\n    email_recipients_parameter = os.environ[\"AppDefaultEmailRecipients\"]\n    if (\n        email_recipients_parameter.strip()\n    ):  # Check if the string is non-empty after stripping spaces\n        AppDefaultEmailRecipients = [",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_config",
        "documentation": {}
    },
    {
        "label": "DecimalEncoder",
        "kind": 6,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_utils",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_utils",
        "peekOfCode": "class DecimalEncoder(json.JSONEncoder):\n    \"\"\"\n    Utility class to encode `decimal.Decimal` objects as strings.\n    \"\"\"\n    def default(self, o):\n        if isinstance(o, decimal.Decimal):\n            return str(o)\n        return super().default(o)\ndef get_first_non_none(*args, **kwargs):\n    \"\"\"",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "get_first_non_none",
        "kind": 2,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_utils",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_utils",
        "peekOfCode": "def get_first_non_none(*args, **kwargs):\n    \"\"\"\n    Returns the first argument that is not None, in case such an argument\n    exists.\n    \"\"\"\n    return next(\n        (arg for arg in list(args) + list(kwargs.values()) if arg is not None), None\n    )\ndef get_first_element(lst: list):\n    \"\"\"",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "get_first_element",
        "kind": 2,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_utils",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_utils",
        "peekOfCode": "def get_first_element(lst: list):\n    \"\"\"\n    Returns the first element of a list, in case such an element exists.\n    \"\"\"\n    if not isinstance(lst, list):\n        raise TypeError(f\"Expected list, got {type(lst).__name__}\")\n    return lst[0] if lst else None\ndef str_is_none_or_empty(s) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is `None` or evaluates to an",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "str_is_none_or_empty",
        "kind": 2,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_utils",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_utils",
        "peekOfCode": "def str_is_none_or_empty(s) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is `None` or evaluates to an\n    empty string, or `False` otherwise.\n    \"\"\"\n    if s is None:\n        return True\n    if isinstance(s, str):\n        return s.strip() == \"\"\n    if str(s).strip() == \"\":",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "is_numeric",
        "kind": 2,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_utils",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_utils",
        "peekOfCode": "def is_numeric(x) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is numeric. An argument is\n    considered numeric if it is either an `int`, a `float`, or a string\n    representing a number.\n    \"\"\"\n    if x is None:\n        return False\n    try:\n        float(x)",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "http_request",
        "kind": 2,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_utils",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_utils",
        "peekOfCode": "def http_request(\n    method, url, headers=None, json_data=None, params=None, timeout=30, **kwargs\n):\n    \"\"\"\n    Make an HTTP request using urllib3.\n    :param method: HTTP method (e.g., \"GET\", \"POST\").\n    :param url: URL to make the request to.\n    :param headers: Dictionary of headers to include in the request.\n    :param json_data: JSON payload for the request body.\n        If provided, Content-Type will be set to application/json.",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "run_command",
        "kind": 2,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_utils",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_utils",
        "peekOfCode": "def run_command(command, cwd=None, shell=False):\n    \"\"\"\n    Run a shell command in the specified directory.\n    :param command: The command to run.\n    :param cwd: The directory to run the command in.\n    :param shell: Whether to use a shell to run the command.\n    \"\"\"\n    # TODO: #17 Fix it getting the correct path from the user's Windows environment\n    # Replace 'python3.11' with the current Python executable\n    if isinstance(command, list):",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "BaseLambdaHandler",
        "kind": 6,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.base_lambda_handler",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.base_lambda_handler",
        "peekOfCode": "class BaseLambdaHandler(ABC):\n    \"\"\"\n    BaseLambdaHandler is a class that can be used as a base for Lambda\n    handlers. It provides a few useful features such as exception handling and\n    execution hooks. At the very least, subclasses must override the\n    ``handle()`` method in order to service lambda function invocations.\n    This class relies on some core attributes:\n    - ``context``: this is the ``context`` parameter received from AWS when a\n        lambda function is invoked, and has to do AWS infrastructure;\n    - ``event``: this is the ``event`` parameter received from AWS when a",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.base_lambda_handler",
        "documentation": {}
    },
    {
        "label": "DynamoDBBase",
        "kind": 6,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.dynamodb_utils",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.dynamodb_utils",
        "peekOfCode": "class DynamoDBBase:\n    \"\"\"Handles common operations for DynamoDB tables.\"\"\"\n    def __init__(self, table_name):\n        self._table = dynamodb.Table(table_name)\n    def __convert_to_decimal(self, item):\n        \"\"\"\n        Convert all float values in the given dictionary or list to Decimals\n        compatible with DynamoDB.\n        DynamoDB requires numerical values to be expressed as Decimals instead\n        of floats, as it does not support the float data type directly. This",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "dynamodb",
        "kind": 5,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.dynamodb_utils",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.dynamodb_utils",
        "peekOfCode": "dynamodb = boto3.resource(\"dynamodb\")\nclass DynamoDBBase:\n    \"\"\"Handles common operations for DynamoDB tables.\"\"\"\n    def __init__(self, table_name):\n        self._table = dynamodb.Table(table_name)\n    def __convert_to_decimal(self, item):\n        \"\"\"\n        Convert all float values in the given dictionary or list to Decimals\n        compatible with DynamoDB.\n        DynamoDB requires numerical values to be expressed as Decimals instead",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "do_deploy",
        "kind": 2,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_deploy",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_deploy",
        "peekOfCode": "def do_deploy(do_log_func, run_cmd_func):\n    \"\"\"\n    Deploy the application.\n    \"\"\"\n    do_log_func(\"deploying...\")\n    # ensure the CDK is installed and deploy the stack\n    run_cmd_func(\"npm install -g aws-cdk\", shell=True)\n    run_cmd_func(\"cdk bootstrap\", shell=True)\n    run_cmd_func(\"cdk deploy --require-approval never\", shell=True)\n    do_log_func(\"deployed!\")",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_deploy",
        "documentation": {}
    },
    {
        "label": "do_install_req",
        "kind": 2,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_install_reqs",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_install_reqs",
        "peekOfCode": "def do_install_req(do_log_func, run_cmd_func):\n    \"\"\"\n    Main function to install all project requirements.\n    \"\"\"\n    _purge_pip_cache(do_log_func, run_cmd_func)\n    _remove_pip_selfcheck(do_log_func)\n    _upgrade_pip(do_log_func, run_cmd_func)\n    _install_dev_requirements(do_log_func, run_cmd_func)\n    _install_from_aws_common(do_log_func, run_cmd_func)\n    _install_requirements_recursively(do_log_func, run_cmd_func)",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_install_reqs",
        "documentation": {}
    },
    {
        "label": "do_reset_venv",
        "kind": 2,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_reset_venv",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_reset_venv",
        "peekOfCode": "def do_reset_venv(do_log_func, run_cmd_func):\n    \"\"\"\n    Recreate the Python virtual environment.\n    \"\"\"\n    do_log_func(f\"*** Deleting all content under {PYTHON_VENV_DIR}...\")\n    shutil.rmtree(PYTHON_VENV_DIR, ignore_errors=True)\n    do_log_func(\"*** Recreating Python virtual environment...\")\n    run_cmd_func([\"python3.11\", \"-m\", \"venv\", PYTHON_VENV_DIR])\n    activate_script = os.path.join(PYTHON_VENV_DIR, \"bin\", \"activate\")\n    # warn the user to activate the virtual environment",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_reset_venv",
        "documentation": {}
    },
    {
        "label": "PYTHON_VENV_DIR",
        "kind": 5,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_reset_venv",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_reset_venv",
        "peekOfCode": "PYTHON_VENV_DIR = \"venv\"\ndef do_reset_venv(do_log_func, run_cmd_func):\n    \"\"\"\n    Recreate the Python virtual environment.\n    \"\"\"\n    do_log_func(f\"*** Deleting all content under {PYTHON_VENV_DIR}...\")\n    shutil.rmtree(PYTHON_VENV_DIR, ignore_errors=True)\n    do_log_func(\"*** Recreating Python virtual environment...\")\n    run_cmd_func([\"python3.11\", \"-m\", \"venv\", PYTHON_VENV_DIR])\n    activate_script = os.path.join(PYTHON_VENV_DIR, \"bin\", \"activate\")",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_reset_venv",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup",
        "peekOfCode": "def main():\n    \"\"\"\n    Main function to parse command-line arguments and call the appropriate function.\n    \"\"\"\n    # Get the current script directory\n    current_dir = os.path.dirname(os.path.abspath(__file__))\n    # Construct path to sibling directory\n    common_project_dir = os.path.join(current_dir, \"..\", \"aws-common\")\n    # check if script directory exists\n    if not os.path.exists(common_project_dir):",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "peekOfCode": "def main():\n    \"\"\"\n    Main function to parse command-line arguments and call the appropriate function.\n    \"\"\"\n    error_msg_args = (\n        \"Usage: app_setup.py --<setup_venv|install_requirements|deploy|run_tests>\"\n    )\n    if len(sys.argv) != 4:\n        _do_log(error_msg_args)\n        sys.exit(1)",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_VENV_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_VENV_OPTIONS = {\n    \"--setup_venv\",\n    \"--setup\",\n    \"--reset_venv\",\n    \"setup_venv\",\n    \"setup\",\n    \"reset_venv\",\n}\nMENU_INSTALL_OPTIONS = {\n    \"--install_requirements\",",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_INSTALL_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_INSTALL_OPTIONS = {\n    \"--install_requirements\",\n    \"--install\",\n    \"--install_reqs\",\n    \"install_requirements\",\n    \"install\",\n    \"install_reqs\",\n}\nMENU_DEPLOY_OPTIONS = {\n    \"--deploy\",",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_DEPLOY_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_DEPLOY_OPTIONS = {\n    \"--deploy\",\n    \"--deploy_stack\",\n    \"--deploy_cdk\",\n    \"--deploy_app\",\n    \"deploy\",\n    \"deploy_stack\",\n    \"deploy_cdk\",\n    \"deploy_app\",\n}",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_FAST_DEPLOY_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_FAST_DEPLOY_OPTIONS = {\"fast_deploy\", \"--fast_deploy\"}\nMENU_HELP_OPTIONS = {\"--help\", \"-h\", \"help\"}\nMENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_HELP_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_HELP_OPTIONS = {\"--help\", \"-h\", \"help\"}\nMENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_TEST_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)\n# getting the project root directory",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_OPTIONS",
        "kind": 5,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)\n# getting the project root directory\ncurrent_dir = os.path.dirname(os.path.abspath(__file__))",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "current_dir",
        "kind": 5,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "peekOfCode": "current_dir = os.path.dirname(os.path.abspath(__file__))\nroot_dir = os.path.join(current_dir, \"..\")\n# finding the common directory\ncommon_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "root_dir",
        "kind": 5,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "peekOfCode": "root_dir = os.path.join(current_dir, \"..\")\n# finding the common directory\ncommon_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "common_dir",
        "kind": 5,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "peekOfCode": "common_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "utils_script_path",
        "kind": 5,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "peekOfCode": "utils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, log_limit: int = 150):\n    \"\"\"",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "spec",
        "kind": 5,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "peekOfCode": "spec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, log_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, log_limit=log_limit)\ndef _run_command(command, cwd=None, shell=False):",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "_UTILS_MODULE",
        "kind": 5,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "peekOfCode": "_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, log_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, log_limit=log_limit)\ndef _run_command(command, cwd=None, shell=False):\n    \"\"\"",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "sys.modules[\"app_utils_module\"]",
        "kind": 5,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "peekOfCode": "sys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, log_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, log_limit=log_limit)\ndef _run_command(command, cwd=None, shell=False):\n    \"\"\"\n    Wrapper function to call the run_command function from the app_utils module.",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "do_run_tests",
        "kind": 2,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_test",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_test",
        "peekOfCode": "def do_run_tests(do_log_func, run_cmd_func) -> bool:\n    \"\"\"\n    Run all the tests for the project.\n    \"\"\"\n    do_log_func(\"*** Running all tests for the project...\")\n    # python -m pytest tests/unit/\n    run_cmd_func([\"python\", \"-m\", \"pytest\", \"tests/unit/\"])\n    do_log_func(\"*** All tests passed.\")\n    # While we don't implement this behavior, we'll return True\n    return True",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.packages.app_scripts.app_test",
        "documentation": {}
    },
    {
        "label": "AppRole",
        "kind": 6,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.app_role_bo",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.app_role_bo",
        "peekOfCode": "class AppRole:\n    \"\"\"\n    Represents a AppRole entity.\n    \"\"\"\n    def __init__(\n        self,\n        app_id: str,\n        role_source: str,\n    ) -> None:\n        self.app_id = app_id",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.app_role_bo",
        "documentation": {}
    },
    {
        "label": "AppRoleBO",
        "kind": 6,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.app_role_bo",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.app_role_bo",
        "peekOfCode": "class AppRoleBO(DynamoDBBase):\n    \"\"\"Business object for the AppRole entity.\"\"\"\n    def get_role_content(self, app_id: str) -> str:\n        \"\"\"\n        Retrieves the role content for the specified application.\n        \"\"\"\n        role_source = self.get_role_source(app_id)\n        if not role_source:\n            return None\n        role_content = self._load_url_content_as_text(role_source)",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.app_role_bo",
        "documentation": {}
    },
    {
        "label": "ContextRetriever",
        "kind": 6,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.context_retriever",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.context_retriever",
        "peekOfCode": "class ContextRetriever(BaseLambdaHandler):\n    \"\"\"\n    This class is responsible for\n    \"\"\"\n    def _handle(self) -> dict:\n        \"\"\" \"\"\"\n        app_id = self.body.get(\"app_id\", None)\n        if not app_id:\n            raise ValueError(\"app_id is required\")\n        # else: app_id is present",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.context_retriever",
        "documentation": {}
    },
    {
        "label": "handler",
        "kind": 2,
        "importPath": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.context_retriever",
        "description": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.context_retriever",
        "peekOfCode": "def handler(event, context):\n    \"\"\"\n    Lambda function to \n    \"\"\"\n    _handler = ContextRetriever()\n    # Implicitly invokes __call__() ...\n    #   ... which invokes _do_the_job() ...\n    #     ... which invokes before_handle(), handle() and after_handle()\n    return _handler(event, context)",
        "detail": "cdk.out.asset.9c9f94f345abf74f00c4a85db90103a071c2db2e0a8e487ba68785268e61c46d.context_retriever",
        "documentation": {}
    },
    {
        "label": "AppRole",
        "kind": 6,
        "importPath": "cdk.out.asset.aaec891539c394b8934a982f9e40148825e96e76844f15291c4a62208317be6b.app_role_bo",
        "description": "cdk.out.asset.aaec891539c394b8934a982f9e40148825e96e76844f15291c4a62208317be6b.app_role_bo",
        "peekOfCode": "class AppRole:\n    \"\"\"\n    Represents a AppRole entity.\n    \"\"\"\n    def __init__(\n        self,\n        app_id: str,\n        role_source: str,\n    ) -> None:\n        self.app_id = app_id",
        "detail": "cdk.out.asset.aaec891539c394b8934a982f9e40148825e96e76844f15291c4a62208317be6b.app_role_bo",
        "documentation": {}
    },
    {
        "label": "AppRoleBO",
        "kind": 6,
        "importPath": "cdk.out.asset.aaec891539c394b8934a982f9e40148825e96e76844f15291c4a62208317be6b.app_role_bo",
        "description": "cdk.out.asset.aaec891539c394b8934a982f9e40148825e96e76844f15291c4a62208317be6b.app_role_bo",
        "peekOfCode": "class AppRoleBO(DynamoDBBase):\n    \"\"\"Business object for the AppRole entity.\"\"\"\n    def get_role_content(self, app_id: str) -> str:\n        \"\"\"\n        Retrieves the role content for the specified application.\n        \"\"\"\n        role_source = self.get_role_source(app_id)\n        if not role_source:\n            return None\n        role_content = self._load_url_content_as_text(role_source)",
        "detail": "cdk.out.asset.aaec891539c394b8934a982f9e40148825e96e76844f15291c4a62208317be6b.app_role_bo",
        "documentation": {}
    },
    {
        "label": "AppRoleRetriever",
        "kind": 6,
        "importPath": "cdk.out.asset.aaec891539c394b8934a982f9e40148825e96e76844f15291c4a62208317be6b.app_role_retriever",
        "description": "cdk.out.asset.aaec891539c394b8934a982f9e40148825e96e76844f15291c4a62208317be6b.app_role_retriever",
        "peekOfCode": "class AppRoleRetriever(BaseLambdaHandler):\n    \"\"\"\n    This class is responsible for\n    \"\"\"\n    def _handle(self) -> dict:\n        \"\"\" \"\"\"\n        app_id = self.body.get(\"app_id\", None)\n        if not app_id:\n            raise ValueError(\"app_id is required\")\n        # else: app_id is present",
        "detail": "cdk.out.asset.aaec891539c394b8934a982f9e40148825e96e76844f15291c4a62208317be6b.app_role_retriever",
        "documentation": {}
    },
    {
        "label": "handler",
        "kind": 2,
        "importPath": "cdk.out.asset.aaec891539c394b8934a982f9e40148825e96e76844f15291c4a62208317be6b.app_role_retriever",
        "description": "cdk.out.asset.aaec891539c394b8934a982f9e40148825e96e76844f15291c4a62208317be6b.app_role_retriever",
        "peekOfCode": "def handler(event, context):\n    \"\"\"\n    Lambda function to route messages from the multi-channel SQS queue to the appropriate handler.\n    \"\"\"\n    _handler = AppRoleRetriever()\n    # Implicitly invokes __call__() ...\n    #   ... which invokes _do_the_job() ...\n    #     ... which invokes before_handle(), handle() and after_handle()\n    return _handler(event, context)",
        "detail": "cdk.out.asset.aaec891539c394b8934a982f9e40148825e96e76844f15291c4a62208317be6b.app_role_retriever",
        "documentation": {}
    },
    {
        "label": "AppRole",
        "kind": 6,
        "importPath": "cdk.out.asset.b5f43f7514ba3560146fb617e8f676a9750f71c658d190319982968a57b4790a.app_role_bo",
        "description": "cdk.out.asset.b5f43f7514ba3560146fb617e8f676a9750f71c658d190319982968a57b4790a.app_role_bo",
        "peekOfCode": "class AppRole:\n    \"\"\"\n    Represents a AppRole entity.\n    \"\"\"\n    def __init__(\n        self,\n        app_id: str,\n        role_source: str,\n    ) -> None:\n        self.app_id = app_id",
        "detail": "cdk.out.asset.b5f43f7514ba3560146fb617e8f676a9750f71c658d190319982968a57b4790a.app_role_bo",
        "documentation": {}
    },
    {
        "label": "AppRoleBO",
        "kind": 6,
        "importPath": "cdk.out.asset.b5f43f7514ba3560146fb617e8f676a9750f71c658d190319982968a57b4790a.app_role_bo",
        "description": "cdk.out.asset.b5f43f7514ba3560146fb617e8f676a9750f71c658d190319982968a57b4790a.app_role_bo",
        "peekOfCode": "class AppRoleBO(DynamoDBBase):\n    \"\"\"Business object for the AppRole entity.\"\"\"\n    def get_role_content(self, app_id: str) -> str:\n        \"\"\"\n        Retrieves the role content for the specified application.\n        \"\"\"\n        role_source = self.get_role_source(app_id)\n        if not role_source:\n            return None\n        role_content = self._load_url_content_as_text(role_source)",
        "detail": "cdk.out.asset.b5f43f7514ba3560146fb617e8f676a9750f71c658d190319982968a57b4790a.app_role_bo",
        "documentation": {}
    },
    {
        "label": "ContextRetriever",
        "kind": 6,
        "importPath": "cdk.out.asset.b5f43f7514ba3560146fb617e8f676a9750f71c658d190319982968a57b4790a.context_retriever",
        "description": "cdk.out.asset.b5f43f7514ba3560146fb617e8f676a9750f71c658d190319982968a57b4790a.context_retriever",
        "peekOfCode": "class ContextRetriever(BaseLambdaHandler):\n    \"\"\"\n    This class is responsible for\n    \"\"\"\n    def _handle(self) -> dict:\n        \"\"\" \"\"\"\n        app_id = self.body.get(\"app_id\", None)\n        if not app_id:\n            raise ValueError(\"app_id is required\")\n        # else: app_id is present",
        "detail": "cdk.out.asset.b5f43f7514ba3560146fb617e8f676a9750f71c658d190319982968a57b4790a.context_retriever",
        "documentation": {}
    },
    {
        "label": "handler",
        "kind": 2,
        "importPath": "cdk.out.asset.b5f43f7514ba3560146fb617e8f676a9750f71c658d190319982968a57b4790a.context_retriever",
        "description": "cdk.out.asset.b5f43f7514ba3560146fb617e8f676a9750f71c658d190319982968a57b4790a.context_retriever",
        "peekOfCode": "def handler(event, context):\n    \"\"\"\n    Lambda function to \n    \"\"\"\n    _handler = ContextRetriever()\n    # Implicitly invokes __call__() ...\n    #   ... which invokes _do_the_job() ...\n    #     ... which invokes before_handle(), handle() and after_handle()\n    return _handler(event, context)",
        "detail": "cdk.out.asset.b5f43f7514ba3560146fb617e8f676a9750f71c658d190319982968a57b4790a.context_retriever",
        "documentation": {}
    },
    {
        "label": "KnowledgeManagerStack",
        "kind": 6,
        "importPath": "knowledge_manager.knowledge_manager_stack",
        "description": "knowledge_manager.knowledge_manager_stack",
        "peekOfCode": "class KnowledgeManagerStack(AppCommonStack):\n    \"\"\"\n    A stack to manage knowledge-based resources, such as DynamoDB tables, SNS topics,\n    and their associated Lambda functions.\n    \"\"\"\n    def __init__(self, scope: Construct, construct_id: str, **kwargs) -> None:\n        \"\"\"\n        Initialize the KnowledgeManagerStack.\n        :param scope: The scope in which this construct is defined.\n        :param construct_id: The ID of this construct.",
        "detail": "knowledge_manager.knowledge_manager_stack",
        "documentation": {}
    },
    {
        "label": "GrantPublishToCustomEventBusAspect",
        "kind": 6,
        "importPath": "lambdas.packages.app_common.app_common_stack",
        "description": "lambdas.packages.app_common.app_common_stack",
        "peekOfCode": "class GrantPublishToCustomEventBusAspect:\n    \"\"\"\n    Aspect that automatically grants permissions for all Lambda functions\n    in the stack to publish to a specific EventBridge event bus.\n    \"\"\"\n    def __init__(self, custom_event_bus_name: str) -> None:\n        self.custom_event_bus_name = custom_event_bus_name\n    def visit(self, node: IConstruct) -> None:\n        \"\"\"\n        Visit each node in the construct tree and attach",
        "detail": "lambdas.packages.app_common.app_common_stack",
        "documentation": {}
    },
    {
        "label": "AppCommonStack",
        "kind": 6,
        "importPath": "lambdas.packages.app_common.app_common_stack",
        "description": "lambdas.packages.app_common.app_common_stack",
        "peekOfCode": "class AppCommonStack(Stack):\n    \"\"\"\n    A common stack that ensures all Lambda functions in the stack automatically\n    have permission to publish to the ErrorHandlingTopic.\n    \"\"\"\n    def __init__(self, scope: Construct, construct_id: str, **kwargs) -> None:\n        super().__init__(scope, construct_id, **kwargs)\n        if self._get_custom_event_bus_name():\n            Aspects.of(self).add(\n                GrantPublishToCustomEventBusAspect(self._get_custom_event_bus_name())",
        "detail": "lambdas.packages.app_common.app_common_stack",
        "documentation": {}
    },
    {
        "label": "is_valid_email",
        "kind": 2,
        "importPath": "lambdas.packages.app_common.app_config",
        "description": "lambdas.packages.app_common.app_config",
        "peekOfCode": "def is_valid_email(email: str) -> bool:\n    \"\"\"Check if the provided email is valid using a regex pattern.\"\"\"\n    email_regex = r\"(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)\"\n    return re.match(email_regex, email) is not None\ntry:\n    email_recipients_parameter = os.environ[\"AppDefaultEmailRecipients\"]\n    if (\n        email_recipients_parameter.strip()\n    ):  # Check if the string is non-empty after stripping spaces\n        AppDefaultEmailRecipients = [",
        "detail": "lambdas.packages.app_common.app_config",
        "documentation": {}
    },
    {
        "label": "DecimalEncoder",
        "kind": 6,
        "importPath": "lambdas.packages.app_common.app_utils",
        "description": "lambdas.packages.app_common.app_utils",
        "peekOfCode": "class DecimalEncoder(json.JSONEncoder):\n    \"\"\"\n    Utility class to encode `decimal.Decimal` objects as strings.\n    \"\"\"\n    def default(self, o):\n        if isinstance(o, decimal.Decimal):\n            return str(o)\n        return super().default(o)\ndef get_first_non_none(*args, **kwargs):\n    \"\"\"",
        "detail": "lambdas.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "get_first_non_none",
        "kind": 2,
        "importPath": "lambdas.packages.app_common.app_utils",
        "description": "lambdas.packages.app_common.app_utils",
        "peekOfCode": "def get_first_non_none(*args, **kwargs):\n    \"\"\"\n    Returns the first argument that is not None, in case such an argument\n    exists.\n    \"\"\"\n    return next(\n        (arg for arg in list(args) + list(kwargs.values()) if arg is not None), None\n    )\ndef get_first_element(lst: list):\n    \"\"\"",
        "detail": "lambdas.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "get_first_element",
        "kind": 2,
        "importPath": "lambdas.packages.app_common.app_utils",
        "description": "lambdas.packages.app_common.app_utils",
        "peekOfCode": "def get_first_element(lst: list):\n    \"\"\"\n    Returns the first element of a list, in case such an element exists.\n    \"\"\"\n    if not isinstance(lst, list):\n        raise TypeError(f\"Expected list, got {type(lst).__name__}\")\n    return lst[0] if lst else None\ndef str_is_none_or_empty(s) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is `None` or evaluates to an",
        "detail": "lambdas.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "str_is_none_or_empty",
        "kind": 2,
        "importPath": "lambdas.packages.app_common.app_utils",
        "description": "lambdas.packages.app_common.app_utils",
        "peekOfCode": "def str_is_none_or_empty(s) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is `None` or evaluates to an\n    empty string, or `False` otherwise.\n    \"\"\"\n    if s is None:\n        return True\n    if isinstance(s, str):\n        return s.strip() == \"\"\n    if str(s).strip() == \"\":",
        "detail": "lambdas.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "is_numeric",
        "kind": 2,
        "importPath": "lambdas.packages.app_common.app_utils",
        "description": "lambdas.packages.app_common.app_utils",
        "peekOfCode": "def is_numeric(x) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is numeric. An argument is\n    considered numeric if it is either an `int`, a `float`, or a string\n    representing a number.\n    \"\"\"\n    if x is None:\n        return False\n    try:\n        float(x)",
        "detail": "lambdas.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "json_dumps",
        "kind": 2,
        "importPath": "lambdas.packages.app_common.app_utils",
        "description": "lambdas.packages.app_common.app_utils",
        "peekOfCode": "def json_dumps(data, indent=4, cls=DecimalEncoder) -> str:\n    \"\"\"\n    Utility method to serialize data to JSON, including Decimal values.\n    \"\"\"\n    return json.dumps(data, indent=indent, cls=cls)\ndef _do_log(\n    obj,\n    title=None,\n    line_len_limit: int = 100,\n    line_break_chars: str = \" \",",
        "detail": "lambdas.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "http_request",
        "kind": 2,
        "importPath": "lambdas.packages.app_common.app_utils",
        "description": "lambdas.packages.app_common.app_utils",
        "peekOfCode": "def http_request(\n    method, url, headers=None, json_data=None, params=None, timeout=30, **kwargs\n):\n    \"\"\"\n    Make an HTTP request using urllib3.\n    :param method: HTTP method (e.g., \"GET\", \"POST\").\n    :param url: URL to make the request to.\n    :param headers: Dictionary of headers to include in the request.\n    :param json_data: JSON payload for the request body.\n        If provided, Content-Type will be set to application/json.",
        "detail": "lambdas.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "run_command",
        "kind": 2,
        "importPath": "lambdas.packages.app_common.app_utils",
        "description": "lambdas.packages.app_common.app_utils",
        "peekOfCode": "def run_command(command, cwd=None, shell=False):\n    \"\"\"\n    Run a shell command in the specified directory.\n    :param command: The command to run.\n    :param cwd: The directory to run the command in.\n    :param shell: Whether to use a shell to run the command.\n    \"\"\"\n    # TODO: #17 Fix it getting the correct path from the user's Windows environment\n    # Replace 'python3.11' with the current Python executable\n    if isinstance(command, list):",
        "detail": "lambdas.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "unix_epoch_now",
        "kind": 2,
        "importPath": "lambdas.packages.app_common.app_utils",
        "description": "lambdas.packages.app_common.app_utils",
        "peekOfCode": "def unix_epoch_now() -> int:\n    \"\"\"\n    Utility method to return the current timestamp,\n    considering the Unix Epoch reference.\n    \"\"\"\n    return int(time.time())",
        "detail": "lambdas.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "BaseLambdaHandler",
        "kind": 6,
        "importPath": "lambdas.packages.app_common.base_lambda_handler",
        "description": "lambdas.packages.app_common.base_lambda_handler",
        "peekOfCode": "class BaseLambdaHandler(ABC):\n    \"\"\"\n    BaseLambdaHandler is a class that can be used as a base for Lambda\n    handlers. It provides a few useful features such as exception handling and\n    execution hooks. At the very least, subclasses must override the\n    ``handle()`` method in order to service lambda function invocations.\n    This class relies on some core attributes:\n    - ``context``: this is the ``context`` parameter received from AWS when a\n        lambda function is invoked, and has to do AWS infrastructure;\n    - ``event``: this is the ``event`` parameter received from AWS when a",
        "detail": "lambdas.packages.app_common.base_lambda_handler",
        "documentation": {}
    },
    {
        "label": "DynamoDBBase",
        "kind": 6,
        "importPath": "lambdas.packages.app_common.dynamodb_utils",
        "description": "lambdas.packages.app_common.dynamodb_utils",
        "peekOfCode": "class DynamoDBBase:\n    \"\"\"Handles common operations for DynamoDB tables.\"\"\"\n    def __init__(self, table_name):\n        self._table_name = table_name\n        self._table = dynamodb.Table(table_name)\n    def recreate_table_resource(self):\n        \"\"\"\n        Recreates the ``Table`` resource of this instance through the global\n        ``dynamodb`` resource. This is meant to be used mainly for testing purposes,\n        e.g., after replacing the global ``dynamodb`` resource to point to a DynamoDB",
        "detail": "lambdas.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "replace_dynamodb_resource",
        "kind": 2,
        "importPath": "lambdas.packages.app_common.dynamodb_utils",
        "description": "lambdas.packages.app_common.dynamodb_utils",
        "peekOfCode": "def replace_dynamodb_resource(new_dynamodb_resource):\n    \"\"\"\n    Replaces the global ``dynamodb`` resource with the given resource.\n    This is meant to be used mainly for testing purposes, e.g., to use a DynamoDB\n    Local instance instead of the default one provided by the AWS environment:\n    ```\n    new_dynamodb = boto3.resource(\"dynamodb\", endpoint_url=\"http://localhost:8000\")\n    replace_dynamodb_resource(new_dynamodb)\n    ```\n    \"\"\"",
        "detail": "lambdas.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "create_table_resource",
        "kind": 2,
        "importPath": "lambdas.packages.app_common.dynamodb_utils",
        "description": "lambdas.packages.app_common.dynamodb_utils",
        "peekOfCode": "def create_table_resource(\n    table_name: str,\n    partition_key_name: str,\n    partition_key_attribute_type: str,\n    sort_key_name: str,\n    sort_key_attribute_type: str,\n    global_secondary_index_name: str,\n    global_secondary_index_partition_key_name: str,\n    global_secondary_index_projection_type: str = \"ALL\",\n    table_read_capacity_units: int = 1,",
        "detail": "lambdas.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "dynamodb",
        "kind": 5,
        "importPath": "lambdas.packages.app_common.dynamodb_utils",
        "description": "lambdas.packages.app_common.dynamodb_utils",
        "peekOfCode": "dynamodb = boto3.resource(\"dynamodb\")\ndef replace_dynamodb_resource(new_dynamodb_resource):\n    \"\"\"\n    Replaces the global ``dynamodb`` resource with the given resource.\n    This is meant to be used mainly for testing purposes, e.g., to use a DynamoDB\n    Local instance instead of the default one provided by the AWS environment:\n    ```\n    new_dynamodb = boto3.resource(\"dynamodb\", endpoint_url=\"http://localhost:8000\")\n    replace_dynamodb_resource(new_dynamodb)\n    ```",
        "detail": "lambdas.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "set_aws_environment_variables",
        "kind": 2,
        "importPath": "lambdas.packages.app_common.utils4tests",
        "description": "lambdas.packages.app_common.utils4tests",
        "peekOfCode": "def set_aws_environment_variables(\n    aws_access_key_id: str,\n    aws_secret_access_key: str,\n    aws_security_token: str,\n    aws_session_token: str,\n    aws_default_region: str = \"us-east-1\",\n):\n    \"\"\"\n    Sets some environment variables used by AWS.\n    \"\"\"",
        "detail": "lambdas.packages.app_common.utils4tests",
        "documentation": {}
    },
    {
        "label": "set_fake_aws_environment_variables",
        "kind": 2,
        "importPath": "lambdas.packages.app_common.utils4tests",
        "description": "lambdas.packages.app_common.utils4tests",
        "peekOfCode": "def set_fake_aws_environment_variables(aws_default_region: str = \"us-east-1\"):\n    \"\"\"\n    Sets some environment variables used by AWS with fake values.\n    This is meant to be used mainly for testing purposes, as some resources provided\n    by the ``boto3`` library refuse to initialize when certain environment variables\n    are empty.\n    \"\"\"\n    set_aws_environment_variables(\n        \"testing\", \"testing\", \"testing\", \"testing\", aws_default_region\n    )",
        "detail": "lambdas.packages.app_common.utils4tests",
        "documentation": {}
    },
    {
        "label": "do_deploy",
        "kind": 2,
        "importPath": "lambdas.packages.app_scripts.app_deploy",
        "description": "lambdas.packages.app_scripts.app_deploy",
        "peekOfCode": "def do_deploy(do_log_func, run_cmd_func):\n    \"\"\"\n    Deploy the application.\n    \"\"\"\n    do_log_func(\"deploying...\")\n    # ensure the CDK is installed and deploy the stack\n    run_cmd_func(\"npm install -g aws-cdk\", shell=True)\n    run_cmd_func(\"cdk bootstrap\", shell=True)\n    run_cmd_func(\"cdk deploy --require-approval never\", shell=True)\n    do_log_func(\"deployed!\")",
        "detail": "lambdas.packages.app_scripts.app_deploy",
        "documentation": {}
    },
    {
        "label": "do_install_req",
        "kind": 2,
        "importPath": "lambdas.packages.app_scripts.app_install_reqs",
        "description": "lambdas.packages.app_scripts.app_install_reqs",
        "peekOfCode": "def do_install_req(do_log_func, run_cmd_func):\n    \"\"\"\n    Main function to install all project requirements.\n    \"\"\"\n    _purge_pip_cache(do_log_func, run_cmd_func)\n    _remove_pip_selfcheck(do_log_func)\n    _upgrade_pip(do_log_func, run_cmd_func)\n    _install_dev_requirements(do_log_func, run_cmd_func)\n    _install_from_aws_common(do_log_func, run_cmd_func)\n    _install_requirements_recursively(do_log_func, run_cmd_func)",
        "detail": "lambdas.packages.app_scripts.app_install_reqs",
        "documentation": {}
    },
    {
        "label": "do_reset_venv",
        "kind": 2,
        "importPath": "lambdas.packages.app_scripts.app_reset_venv",
        "description": "lambdas.packages.app_scripts.app_reset_venv",
        "peekOfCode": "def do_reset_venv(do_log_func, run_cmd_func):\n    \"\"\"\n    Recreate the Python virtual environment.\n    \"\"\"\n    do_log_func(f\"*** Deleting all content under {PYTHON_VENV_DIR}...\")\n    shutil.rmtree(PYTHON_VENV_DIR, ignore_errors=True)\n    do_log_func(\"*** Recreating Python virtual environment...\")\n    run_cmd_func([\"python3.11\", \"-m\", \"venv\", PYTHON_VENV_DIR])\n    activate_script = os.path.join(PYTHON_VENV_DIR, \"bin\", \"activate\")\n    # warn the user to activate the virtual environment",
        "detail": "lambdas.packages.app_scripts.app_reset_venv",
        "documentation": {}
    },
    {
        "label": "PYTHON_VENV_DIR",
        "kind": 5,
        "importPath": "lambdas.packages.app_scripts.app_reset_venv",
        "description": "lambdas.packages.app_scripts.app_reset_venv",
        "peekOfCode": "PYTHON_VENV_DIR = \"venv\"\ndef do_reset_venv(do_log_func, run_cmd_func):\n    \"\"\"\n    Recreate the Python virtual environment.\n    \"\"\"\n    do_log_func(f\"*** Deleting all content under {PYTHON_VENV_DIR}...\")\n    shutil.rmtree(PYTHON_VENV_DIR, ignore_errors=True)\n    do_log_func(\"*** Recreating Python virtual environment...\")\n    run_cmd_func([\"python3.11\", \"-m\", \"venv\", PYTHON_VENV_DIR])\n    activate_script = os.path.join(PYTHON_VENV_DIR, \"bin\", \"activate\")",
        "detail": "lambdas.packages.app_scripts.app_reset_venv",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "lambdas.packages.app_scripts.app_setup",
        "description": "lambdas.packages.app_scripts.app_setup",
        "peekOfCode": "def main():\n    \"\"\"\n    Main function to parse command-line arguments and call the appropriate function.\n    \"\"\"\n    # Get the current script directory\n    current_dir = os.path.dirname(os.path.abspath(__file__))\n    # Construct path to sibling directory\n    common_project_dir = os.path.join(current_dir, \"..\", \"aws-common\")\n    # check if script directory exists\n    if not os.path.exists(common_project_dir):",
        "detail": "lambdas.packages.app_scripts.app_setup",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "lambdas.packages.app_scripts.app_setup_execution",
        "description": "lambdas.packages.app_scripts.app_setup_execution",
        "peekOfCode": "def main():\n    \"\"\"\n    Main function to parse command-line arguments and call the appropriate function.\n    \"\"\"\n    error_msg_args = (\n        \"Usage: app_setup.py --<setup_venv|install_requirements|deploy|run_tests>\"\n    )\n    if len(sys.argv) != 4:\n        _do_log(error_msg_args)\n        sys.exit(1)",
        "detail": "lambdas.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_VENV_OPTIONS",
        "kind": 5,
        "importPath": "lambdas.packages.app_scripts.app_setup_execution",
        "description": "lambdas.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_VENV_OPTIONS = {\n    \"--setup_venv\",\n    \"--setup\",\n    \"--reset_venv\",\n    \"setup_venv\",\n    \"setup\",\n    \"reset_venv\",\n}\nMENU_INSTALL_OPTIONS = {\n    \"--install_requirements\",",
        "detail": "lambdas.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_INSTALL_OPTIONS",
        "kind": 5,
        "importPath": "lambdas.packages.app_scripts.app_setup_execution",
        "description": "lambdas.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_INSTALL_OPTIONS = {\n    \"--install_requirements\",\n    \"--install\",\n    \"--install_reqs\",\n    \"install_requirements\",\n    \"install\",\n    \"install_reqs\",\n}\nMENU_DEPLOY_OPTIONS = {\n    \"--deploy\",",
        "detail": "lambdas.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_DEPLOY_OPTIONS",
        "kind": 5,
        "importPath": "lambdas.packages.app_scripts.app_setup_execution",
        "description": "lambdas.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_DEPLOY_OPTIONS = {\n    \"--deploy\",\n    \"--deploy_stack\",\n    \"--deploy_cdk\",\n    \"--deploy_app\",\n    \"deploy\",\n    \"deploy_stack\",\n    \"deploy_cdk\",\n    \"deploy_app\",\n}",
        "detail": "lambdas.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_FAST_DEPLOY_OPTIONS",
        "kind": 5,
        "importPath": "lambdas.packages.app_scripts.app_setup_execution",
        "description": "lambdas.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_FAST_DEPLOY_OPTIONS = {\"fast_deploy\", \"--fast_deploy\"}\nMENU_HELP_OPTIONS = {\"--help\", \"-h\", \"help\"}\nMENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS",
        "detail": "lambdas.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_HELP_OPTIONS",
        "kind": 5,
        "importPath": "lambdas.packages.app_scripts.app_setup_execution",
        "description": "lambdas.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_HELP_OPTIONS = {\"--help\", \"-h\", \"help\"}\nMENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)",
        "detail": "lambdas.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_TEST_OPTIONS",
        "kind": 5,
        "importPath": "lambdas.packages.app_scripts.app_setup_execution",
        "description": "lambdas.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)\n# getting the project root directory",
        "detail": "lambdas.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_OPTIONS",
        "kind": 5,
        "importPath": "lambdas.packages.app_scripts.app_setup_execution",
        "description": "lambdas.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)\n# getting the project root directory\ncurrent_dir = os.path.dirname(os.path.abspath(__file__))",
        "detail": "lambdas.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "current_dir",
        "kind": 5,
        "importPath": "lambdas.packages.app_scripts.app_setup_execution",
        "description": "lambdas.packages.app_scripts.app_setup_execution",
        "peekOfCode": "current_dir = os.path.dirname(os.path.abspath(__file__))\nroot_dir = os.path.join(current_dir, \"..\")\n# finding the common directory\ncommon_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)",
        "detail": "lambdas.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "root_dir",
        "kind": 5,
        "importPath": "lambdas.packages.app_scripts.app_setup_execution",
        "description": "lambdas.packages.app_scripts.app_setup_execution",
        "peekOfCode": "root_dir = os.path.join(current_dir, \"..\")\n# finding the common directory\ncommon_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)",
        "detail": "lambdas.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "common_dir",
        "kind": 5,
        "importPath": "lambdas.packages.app_scripts.app_setup_execution",
        "description": "lambdas.packages.app_scripts.app_setup_execution",
        "peekOfCode": "common_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)",
        "detail": "lambdas.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "utils_script_path",
        "kind": 5,
        "importPath": "lambdas.packages.app_scripts.app_setup_execution",
        "description": "lambdas.packages.app_scripts.app_setup_execution",
        "peekOfCode": "utils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, line_len_limit: int = 150):\n    \"\"\"",
        "detail": "lambdas.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "spec",
        "kind": 5,
        "importPath": "lambdas.packages.app_scripts.app_setup_execution",
        "description": "lambdas.packages.app_scripts.app_setup_execution",
        "peekOfCode": "spec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, line_len_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, line_len_limit=line_len_limit)\ndef _run_command(command, cwd=None, shell=False):",
        "detail": "lambdas.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "_UTILS_MODULE",
        "kind": 5,
        "importPath": "lambdas.packages.app_scripts.app_setup_execution",
        "description": "lambdas.packages.app_scripts.app_setup_execution",
        "peekOfCode": "_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, line_len_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, line_len_limit=line_len_limit)\ndef _run_command(command, cwd=None, shell=False):\n    \"\"\"",
        "detail": "lambdas.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "sys.modules[\"app_utils_module\"]",
        "kind": 5,
        "importPath": "lambdas.packages.app_scripts.app_setup_execution",
        "description": "lambdas.packages.app_scripts.app_setup_execution",
        "peekOfCode": "sys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, line_len_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, line_len_limit=line_len_limit)\ndef _run_command(command, cwd=None, shell=False):\n    \"\"\"\n    Wrapper function to call the run_command function from the app_utils module.",
        "detail": "lambdas.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "do_run_tests",
        "kind": 2,
        "importPath": "lambdas.packages.app_scripts.app_test",
        "description": "lambdas.packages.app_scripts.app_test",
        "peekOfCode": "def do_run_tests(do_log_func, run_cmd_func) -> bool:\n    \"\"\"\n    Run all the tests for the project.\n    \"\"\"\n    do_log_func(\"*** Running all tests for the project...\")\n    # python -m pytest tests/unit/\n    run_cmd_func([\"python\", \"-m\", \"pytest\", \"tests/unit/\"])\n    do_log_func(\"*** All tests passed.\")\n    # While we don't implement this behavior, we'll return True\n    return True",
        "detail": "lambdas.packages.app_scripts.app_test",
        "documentation": {}
    },
    {
        "label": "AppRole",
        "kind": 6,
        "importPath": "lambdas.app_role_bo",
        "description": "lambdas.app_role_bo",
        "peekOfCode": "class AppRole:\n    \"\"\"\n    Represents an AppRole entity.\n    \"\"\"\n    def __init__(self, app_id: str, role_source: str) -> None:\n        \"\"\"\n        Initializes an instance of the AppRole class.\n        :param app_id: Identifier for the application.\n        :param role_source: Source of the role definition.\n        \"\"\"",
        "detail": "lambdas.app_role_bo",
        "documentation": {}
    },
    {
        "label": "AppRoleBO",
        "kind": 6,
        "importPath": "lambdas.app_role_bo",
        "description": "lambdas.app_role_bo",
        "peekOfCode": "class AppRoleBO(DynamoDBBase):\n    \"\"\"\n    Business object for managing AppRole entities.\n    \"\"\"\n    def get_role_content(self, app_id: str) -> str:\n        \"\"\"\n        Retrieves the role content for the specified application.\n        :param app_id: Identifier for the application.\n        :return: Content of the role source as a string, or None if not found.\n        \"\"\"",
        "detail": "lambdas.app_role_bo",
        "documentation": {}
    },
    {
        "label": "ContextRetriever",
        "kind": 6,
        "importPath": "lambdas.context_retriever",
        "description": "lambdas.context_retriever",
        "peekOfCode": "class ContextRetriever(BaseLambdaHandler):\n    \"\"\"\n    A Lambda handler for retrieving context based on the provided app_id.\n    This class processes incoming events, validates inputs, retrieves app role content\n    from the database, and publishes the results to a custom event bus.\n    \"\"\"\n    def _handle(self) -> dict:\n        \"\"\"\n        Handle the incoming request, retrieve the app role, and publish the response.\n        :return: A dictionary containing the app role and the original payload.",
        "detail": "lambdas.context_retriever",
        "documentation": {}
    },
    {
        "label": "handler",
        "kind": 2,
        "importPath": "lambdas.context_retriever",
        "description": "lambdas.context_retriever",
        "peekOfCode": "def handler(event, context):\n    \"\"\"\n    Lambda entry point for handling context retrieval requests.\n    :param event: The event data passed to the Lambda function.\n    :param context: The runtime information for the Lambda function.\n    :return: The result from processing the event.\n    \"\"\"\n    _handler = ContextRetriever()\n    # Implicitly invokes __call__(), which:\n    #   - Executes _do_the_job(), which:",
        "detail": "lambdas.context_retriever",
        "documentation": {}
    },
    {
        "label": "UserLongTermMemory",
        "kind": 6,
        "importPath": "lambdas.long_memory_bo",
        "description": "lambdas.long_memory_bo",
        "peekOfCode": "class UserLongTermMemory:\n    \"\"\"\n    Represents an UserLongTermMemory entity.\n    \"\"\"\n    def __init__(self, user_id: str, memory: str) -> None:\n        \"\"\"\n        Initializes an instance of the UserLongTermMemory class.\n        :param user_id: Identifier for the user.\n        :param memory: the user memory register.\n        \"\"\"",
        "detail": "lambdas.long_memory_bo",
        "documentation": {}
    },
    {
        "label": "UserLongTermMemoryBO",
        "kind": 6,
        "importPath": "lambdas.long_memory_bo",
        "description": "lambdas.long_memory_bo",
        "peekOfCode": "class UserLongTermMemoryBO(DynamoDBBase):\n    \"\"\"\n    Business object for managing UserLongTermMemory entities.\n    \"\"\"\n    @lru_cache\n    def get_last_memory(self, user_id: str) -> UserLongTermMemory:\n        \"\"\"\n        Retrieves the role content for the specified application.\n        :param user_id: Identifier for the application.\n        :return: Memory as a UserLongTermMemory object, or None if not found.",
        "detail": "lambdas.long_memory_bo",
        "documentation": {}
    },
    {
        "label": "LongMemoryUpdater",
        "kind": 6,
        "importPath": "lambdas.long_memory_updater",
        "description": "lambdas.long_memory_updater",
        "peekOfCode": "class LongMemoryUpdater(BaseLambdaHandler):\n    \"\"\"\n    A Lambda handler for updating the long-term memory of a user\n    based on the interaction between a user and a chatbot.\n    \"\"\"\n    def __gen_prompt_input_msg(\n        self, current_summary: str, user_message: str, chatbot_response: str\n    ) -> str:\n        \"\"\"\n        Generate a prompt for the AI model based on the current summary,",
        "detail": "lambdas.long_memory_updater",
        "documentation": {}
    },
    {
        "label": "handler",
        "kind": 2,
        "importPath": "lambdas.long_memory_updater",
        "description": "lambdas.long_memory_updater",
        "peekOfCode": "def handler(event, context):\n    \"\"\"\n    Lambda entry point for handling context retrieval requests.\n    :param event: The event data passed to the Lambda function.\n    :param context: The runtime information for the Lambda function.\n    :return: The result from processing the event.\n    \"\"\"\n    _handler = LongMemoryUpdater()\n    # Invokes the BaseLambdaHandler logic chain\n    return _handler(event, context)",
        "detail": "lambdas.long_memory_updater",
        "documentation": {}
    },
    {
        "label": "GrantPublishToCustomEventBusAspect",
        "kind": 6,
        "importPath": "tests.unit.packages.app_common.app_common_stack",
        "description": "tests.unit.packages.app_common.app_common_stack",
        "peekOfCode": "class GrantPublishToCustomEventBusAspect:\n    \"\"\"\n    Aspect that automatically grants permissions for all Lambda functions\n    in the stack to publish to a specific EventBridge event bus.\n    \"\"\"\n    def __init__(self, custom_event_bus_name: str) -> None:\n        self.custom_event_bus_name = custom_event_bus_name\n    def visit(self, node: IConstruct) -> None:\n        \"\"\"\n        Visit each node in the construct tree and attach",
        "detail": "tests.unit.packages.app_common.app_common_stack",
        "documentation": {}
    },
    {
        "label": "AppCommonStack",
        "kind": 6,
        "importPath": "tests.unit.packages.app_common.app_common_stack",
        "description": "tests.unit.packages.app_common.app_common_stack",
        "peekOfCode": "class AppCommonStack(Stack):\n    \"\"\"\n    A common stack that ensures all Lambda functions in the stack automatically\n    have permission to publish to the ErrorHandlingTopic.\n    \"\"\"\n    def __init__(self, scope: Construct, construct_id: str, **kwargs) -> None:\n        super().__init__(scope, construct_id, **kwargs)\n        if self._get_custom_event_bus_name():\n            Aspects.of(self).add(\n                GrantPublishToCustomEventBusAspect(self._get_custom_event_bus_name())",
        "detail": "tests.unit.packages.app_common.app_common_stack",
        "documentation": {}
    },
    {
        "label": "is_valid_email",
        "kind": 2,
        "importPath": "tests.unit.packages.app_common.app_config",
        "description": "tests.unit.packages.app_common.app_config",
        "peekOfCode": "def is_valid_email(email: str) -> bool:\n    \"\"\"Check if the provided email is valid using a regex pattern.\"\"\"\n    email_regex = r\"(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)\"\n    return re.match(email_regex, email) is not None\ntry:\n    email_recipients_parameter = os.environ[\"AppDefaultEmailRecipients\"]\n    if (\n        email_recipients_parameter.strip()\n    ):  # Check if the string is non-empty after stripping spaces\n        AppDefaultEmailRecipients = [",
        "detail": "tests.unit.packages.app_common.app_config",
        "documentation": {}
    },
    {
        "label": "DecimalEncoder",
        "kind": 6,
        "importPath": "tests.unit.packages.app_common.app_utils",
        "description": "tests.unit.packages.app_common.app_utils",
        "peekOfCode": "class DecimalEncoder(json.JSONEncoder):\n    \"\"\"\n    Utility class to encode `decimal.Decimal` objects as strings.\n    \"\"\"\n    def default(self, o):\n        if isinstance(o, decimal.Decimal):\n            return str(o)\n        return super().default(o)\ndef get_first_non_none(*args, **kwargs):\n    \"\"\"",
        "detail": "tests.unit.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "get_first_non_none",
        "kind": 2,
        "importPath": "tests.unit.packages.app_common.app_utils",
        "description": "tests.unit.packages.app_common.app_utils",
        "peekOfCode": "def get_first_non_none(*args, **kwargs):\n    \"\"\"\n    Returns the first argument that is not None, in case such an argument\n    exists.\n    \"\"\"\n    return next(\n        (arg for arg in list(args) + list(kwargs.values()) if arg is not None), None\n    )\ndef get_first_element(lst: list):\n    \"\"\"",
        "detail": "tests.unit.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "get_first_element",
        "kind": 2,
        "importPath": "tests.unit.packages.app_common.app_utils",
        "description": "tests.unit.packages.app_common.app_utils",
        "peekOfCode": "def get_first_element(lst: list):\n    \"\"\"\n    Returns the first element of a list, in case such an element exists.\n    \"\"\"\n    if not isinstance(lst, list):\n        raise TypeError(f\"Expected list, got {type(lst).__name__}\")\n    return lst[0] if lst else None\ndef str_is_none_or_empty(s) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is `None` or evaluates to an",
        "detail": "tests.unit.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "str_is_none_or_empty",
        "kind": 2,
        "importPath": "tests.unit.packages.app_common.app_utils",
        "description": "tests.unit.packages.app_common.app_utils",
        "peekOfCode": "def str_is_none_or_empty(s) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is `None` or evaluates to an\n    empty string, or `False` otherwise.\n    \"\"\"\n    if s is None:\n        return True\n    if isinstance(s, str):\n        return s.strip() == \"\"\n    if str(s).strip() == \"\":",
        "detail": "tests.unit.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "is_numeric",
        "kind": 2,
        "importPath": "tests.unit.packages.app_common.app_utils",
        "description": "tests.unit.packages.app_common.app_utils",
        "peekOfCode": "def is_numeric(x) -> bool:\n    \"\"\"\n    Returns `True` in case the input argument is numeric. An argument is\n    considered numeric if it is either an `int`, a `float`, or a string\n    representing a number.\n    \"\"\"\n    if x is None:\n        return False\n    try:\n        float(x)",
        "detail": "tests.unit.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "json_dumps",
        "kind": 2,
        "importPath": "tests.unit.packages.app_common.app_utils",
        "description": "tests.unit.packages.app_common.app_utils",
        "peekOfCode": "def json_dumps(data, indent=4, cls=DecimalEncoder) -> str:\n    \"\"\"\n    Utility method to serialize data to JSON, including Decimal values.\n    \"\"\"\n    return json.dumps(data, indent=indent, cls=cls)\ndef _do_log(\n    obj,\n    title=None,\n    line_len_limit: int = 100,\n    line_break_chars: str = \" \",",
        "detail": "tests.unit.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "http_request",
        "kind": 2,
        "importPath": "tests.unit.packages.app_common.app_utils",
        "description": "tests.unit.packages.app_common.app_utils",
        "peekOfCode": "def http_request(\n    method, url, headers=None, json_data=None, params=None, timeout=30, **kwargs\n):\n    \"\"\"\n    Make an HTTP request using urllib3.\n    :param method: HTTP method (e.g., \"GET\", \"POST\").\n    :param url: URL to make the request to.\n    :param headers: Dictionary of headers to include in the request.\n    :param json_data: JSON payload for the request body.\n        If provided, Content-Type will be set to application/json.",
        "detail": "tests.unit.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "run_command",
        "kind": 2,
        "importPath": "tests.unit.packages.app_common.app_utils",
        "description": "tests.unit.packages.app_common.app_utils",
        "peekOfCode": "def run_command(command, cwd=None, shell=False):\n    \"\"\"\n    Run a shell command in the specified directory.\n    :param command: The command to run.\n    :param cwd: The directory to run the command in.\n    :param shell: Whether to use a shell to run the command.\n    \"\"\"\n    # TODO: #17 Fix it getting the correct path from the user's Windows environment\n    # Replace 'python3.11' with the current Python executable\n    if isinstance(command, list):",
        "detail": "tests.unit.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "unix_epoch_now",
        "kind": 2,
        "importPath": "tests.unit.packages.app_common.app_utils",
        "description": "tests.unit.packages.app_common.app_utils",
        "peekOfCode": "def unix_epoch_now() -> int:\n    \"\"\"\n    Utility method to return the current timestamp,\n    considering the Unix Epoch reference.\n    \"\"\"\n    return int(time.time())",
        "detail": "tests.unit.packages.app_common.app_utils",
        "documentation": {}
    },
    {
        "label": "BaseLambdaHandler",
        "kind": 6,
        "importPath": "tests.unit.packages.app_common.base_lambda_handler",
        "description": "tests.unit.packages.app_common.base_lambda_handler",
        "peekOfCode": "class BaseLambdaHandler(ABC):\n    \"\"\"\n    BaseLambdaHandler is a class that can be used as a base for Lambda\n    handlers. It provides a few useful features such as exception handling and\n    execution hooks. At the very least, subclasses must override the\n    ``handle()`` method in order to service lambda function invocations.\n    This class relies on some core attributes:\n    - ``context``: this is the ``context`` parameter received from AWS when a\n        lambda function is invoked, and has to do AWS infrastructure;\n    - ``event``: this is the ``event`` parameter received from AWS when a",
        "detail": "tests.unit.packages.app_common.base_lambda_handler",
        "documentation": {}
    },
    {
        "label": "DynamoDBBase",
        "kind": 6,
        "importPath": "tests.unit.packages.app_common.dynamodb_utils",
        "description": "tests.unit.packages.app_common.dynamodb_utils",
        "peekOfCode": "class DynamoDBBase:\n    \"\"\"Handles common operations for DynamoDB tables.\"\"\"\n    def __init__(self, table_name):\n        self._table_name = table_name\n        self._table = dynamodb.Table(table_name)\n    def recreate_table_resource(self):\n        \"\"\"\n        Recreates the ``Table`` resource of this instance through the global\n        ``dynamodb`` resource. This is meant to be used mainly for testing purposes,\n        e.g., after replacing the global ``dynamodb`` resource to point to a DynamoDB",
        "detail": "tests.unit.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "replace_dynamodb_resource",
        "kind": 2,
        "importPath": "tests.unit.packages.app_common.dynamodb_utils",
        "description": "tests.unit.packages.app_common.dynamodb_utils",
        "peekOfCode": "def replace_dynamodb_resource(new_dynamodb_resource):\n    \"\"\"\n    Replaces the global ``dynamodb`` resource with the given resource.\n    This is meant to be used mainly for testing purposes, e.g., to use a DynamoDB\n    Local instance instead of the default one provided by the AWS environment:\n    ```\n    new_dynamodb = boto3.resource(\"dynamodb\", endpoint_url=\"http://localhost:8000\")\n    replace_dynamodb_resource(new_dynamodb)\n    ```\n    \"\"\"",
        "detail": "tests.unit.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "create_table_resource",
        "kind": 2,
        "importPath": "tests.unit.packages.app_common.dynamodb_utils",
        "description": "tests.unit.packages.app_common.dynamodb_utils",
        "peekOfCode": "def create_table_resource(\n    table_name: str,\n    partition_key_name: str,\n    partition_key_attribute_type: str,\n    sort_key_name: str,\n    sort_key_attribute_type: str,\n    global_secondary_index_name: str,\n    global_secondary_index_partition_key_name: str,\n    global_secondary_index_projection_type: str = \"ALL\",\n    table_read_capacity_units: int = 1,",
        "detail": "tests.unit.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "dynamodb",
        "kind": 5,
        "importPath": "tests.unit.packages.app_common.dynamodb_utils",
        "description": "tests.unit.packages.app_common.dynamodb_utils",
        "peekOfCode": "dynamodb = boto3.resource(\"dynamodb\")\ndef replace_dynamodb_resource(new_dynamodb_resource):\n    \"\"\"\n    Replaces the global ``dynamodb`` resource with the given resource.\n    This is meant to be used mainly for testing purposes, e.g., to use a DynamoDB\n    Local instance instead of the default one provided by the AWS environment:\n    ```\n    new_dynamodb = boto3.resource(\"dynamodb\", endpoint_url=\"http://localhost:8000\")\n    replace_dynamodb_resource(new_dynamodb)\n    ```",
        "detail": "tests.unit.packages.app_common.dynamodb_utils",
        "documentation": {}
    },
    {
        "label": "set_aws_environment_variables",
        "kind": 2,
        "importPath": "tests.unit.packages.app_common.utils4tests",
        "description": "tests.unit.packages.app_common.utils4tests",
        "peekOfCode": "def set_aws_environment_variables(\n    aws_access_key_id: str,\n    aws_secret_access_key: str,\n    aws_security_token: str,\n    aws_session_token: str,\n    aws_default_region: str = \"us-east-1\",\n):\n    \"\"\"\n    Sets some environment variables used by AWS.\n    \"\"\"",
        "detail": "tests.unit.packages.app_common.utils4tests",
        "documentation": {}
    },
    {
        "label": "set_fake_aws_environment_variables",
        "kind": 2,
        "importPath": "tests.unit.packages.app_common.utils4tests",
        "description": "tests.unit.packages.app_common.utils4tests",
        "peekOfCode": "def set_fake_aws_environment_variables(aws_default_region: str = \"us-east-1\"):\n    \"\"\"\n    Sets some environment variables used by AWS with fake values.\n    This is meant to be used mainly for testing purposes, as some resources provided\n    by the ``boto3`` library refuse to initialize when certain environment variables\n    are empty.\n    \"\"\"\n    set_aws_environment_variables(\n        \"testing\", \"testing\", \"testing\", \"testing\", aws_default_region\n    )",
        "detail": "tests.unit.packages.app_common.utils4tests",
        "documentation": {}
    },
    {
        "label": "do_deploy",
        "kind": 2,
        "importPath": "tests.unit.packages.app_scripts.app_deploy",
        "description": "tests.unit.packages.app_scripts.app_deploy",
        "peekOfCode": "def do_deploy(do_log_func, run_cmd_func):\n    \"\"\"\n    Deploy the application.\n    \"\"\"\n    do_log_func(\"deploying...\")\n    # ensure the CDK is installed and deploy the stack\n    run_cmd_func(\"npm install -g aws-cdk\", shell=True)\n    run_cmd_func(\"cdk bootstrap\", shell=True)\n    run_cmd_func(\"cdk deploy --require-approval never\", shell=True)\n    do_log_func(\"deployed!\")",
        "detail": "tests.unit.packages.app_scripts.app_deploy",
        "documentation": {}
    },
    {
        "label": "do_install_req",
        "kind": 2,
        "importPath": "tests.unit.packages.app_scripts.app_install_reqs",
        "description": "tests.unit.packages.app_scripts.app_install_reqs",
        "peekOfCode": "def do_install_req(do_log_func, run_cmd_func):\n    \"\"\"\n    Main function to install all project requirements.\n    \"\"\"\n    _purge_pip_cache(do_log_func, run_cmd_func)\n    _remove_pip_selfcheck(do_log_func)\n    _upgrade_pip(do_log_func, run_cmd_func)\n    _install_dev_requirements(do_log_func, run_cmd_func)\n    _install_from_aws_common(do_log_func, run_cmd_func)\n    _install_requirements_recursively(do_log_func, run_cmd_func)",
        "detail": "tests.unit.packages.app_scripts.app_install_reqs",
        "documentation": {}
    },
    {
        "label": "do_reset_venv",
        "kind": 2,
        "importPath": "tests.unit.packages.app_scripts.app_reset_venv",
        "description": "tests.unit.packages.app_scripts.app_reset_venv",
        "peekOfCode": "def do_reset_venv(do_log_func, run_cmd_func):\n    \"\"\"\n    Recreate the Python virtual environment.\n    \"\"\"\n    do_log_func(f\"*** Deleting all content under {PYTHON_VENV_DIR}...\")\n    shutil.rmtree(PYTHON_VENV_DIR, ignore_errors=True)\n    do_log_func(\"*** Recreating Python virtual environment...\")\n    run_cmd_func([\"python3.11\", \"-m\", \"venv\", PYTHON_VENV_DIR])\n    activate_script = os.path.join(PYTHON_VENV_DIR, \"bin\", \"activate\")\n    # warn the user to activate the virtual environment",
        "detail": "tests.unit.packages.app_scripts.app_reset_venv",
        "documentation": {}
    },
    {
        "label": "PYTHON_VENV_DIR",
        "kind": 5,
        "importPath": "tests.unit.packages.app_scripts.app_reset_venv",
        "description": "tests.unit.packages.app_scripts.app_reset_venv",
        "peekOfCode": "PYTHON_VENV_DIR = \"venv\"\ndef do_reset_venv(do_log_func, run_cmd_func):\n    \"\"\"\n    Recreate the Python virtual environment.\n    \"\"\"\n    do_log_func(f\"*** Deleting all content under {PYTHON_VENV_DIR}...\")\n    shutil.rmtree(PYTHON_VENV_DIR, ignore_errors=True)\n    do_log_func(\"*** Recreating Python virtual environment...\")\n    run_cmd_func([\"python3.11\", \"-m\", \"venv\", PYTHON_VENV_DIR])\n    activate_script = os.path.join(PYTHON_VENV_DIR, \"bin\", \"activate\")",
        "detail": "tests.unit.packages.app_scripts.app_reset_venv",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "tests.unit.packages.app_scripts.app_setup",
        "description": "tests.unit.packages.app_scripts.app_setup",
        "peekOfCode": "def main():\n    \"\"\"\n    Main function to parse command-line arguments and call the appropriate function.\n    \"\"\"\n    # Get the current script directory\n    current_dir = os.path.dirname(os.path.abspath(__file__))\n    # Construct path to sibling directory\n    common_project_dir = os.path.join(current_dir, \"..\", \"aws-common\")\n    # check if script directory exists\n    if not os.path.exists(common_project_dir):",
        "detail": "tests.unit.packages.app_scripts.app_setup",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "tests.unit.packages.app_scripts.app_setup_execution",
        "description": "tests.unit.packages.app_scripts.app_setup_execution",
        "peekOfCode": "def main():\n    \"\"\"\n    Main function to parse command-line arguments and call the appropriate function.\n    \"\"\"\n    error_msg_args = (\n        \"Usage: app_setup.py --<setup_venv|install_requirements|deploy|run_tests>\"\n    )\n    if len(sys.argv) != 4:\n        _do_log(error_msg_args)\n        sys.exit(1)",
        "detail": "tests.unit.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_VENV_OPTIONS",
        "kind": 5,
        "importPath": "tests.unit.packages.app_scripts.app_setup_execution",
        "description": "tests.unit.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_VENV_OPTIONS = {\n    \"--setup_venv\",\n    \"--setup\",\n    \"--reset_venv\",\n    \"setup_venv\",\n    \"setup\",\n    \"reset_venv\",\n}\nMENU_INSTALL_OPTIONS = {\n    \"--install_requirements\",",
        "detail": "tests.unit.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_INSTALL_OPTIONS",
        "kind": 5,
        "importPath": "tests.unit.packages.app_scripts.app_setup_execution",
        "description": "tests.unit.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_INSTALL_OPTIONS = {\n    \"--install_requirements\",\n    \"--install\",\n    \"--install_reqs\",\n    \"install_requirements\",\n    \"install\",\n    \"install_reqs\",\n}\nMENU_DEPLOY_OPTIONS = {\n    \"--deploy\",",
        "detail": "tests.unit.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_DEPLOY_OPTIONS",
        "kind": 5,
        "importPath": "tests.unit.packages.app_scripts.app_setup_execution",
        "description": "tests.unit.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_DEPLOY_OPTIONS = {\n    \"--deploy\",\n    \"--deploy_stack\",\n    \"--deploy_cdk\",\n    \"--deploy_app\",\n    \"deploy\",\n    \"deploy_stack\",\n    \"deploy_cdk\",\n    \"deploy_app\",\n}",
        "detail": "tests.unit.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_FAST_DEPLOY_OPTIONS",
        "kind": 5,
        "importPath": "tests.unit.packages.app_scripts.app_setup_execution",
        "description": "tests.unit.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_FAST_DEPLOY_OPTIONS = {\"fast_deploy\", \"--fast_deploy\"}\nMENU_HELP_OPTIONS = {\"--help\", \"-h\", \"help\"}\nMENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS",
        "detail": "tests.unit.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_HELP_OPTIONS",
        "kind": 5,
        "importPath": "tests.unit.packages.app_scripts.app_setup_execution",
        "description": "tests.unit.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_HELP_OPTIONS = {\"--help\", \"-h\", \"help\"}\nMENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)",
        "detail": "tests.unit.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_TEST_OPTIONS",
        "kind": 5,
        "importPath": "tests.unit.packages.app_scripts.app_setup_execution",
        "description": "tests.unit.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_TEST_OPTIONS = {\"run_tests\", \"--run_tests\", \"test\", \"--test\", \"tests\", \"--tests\"}\nMENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)\n# getting the project root directory",
        "detail": "tests.unit.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "MENU_OPTIONS",
        "kind": 5,
        "importPath": "tests.unit.packages.app_scripts.app_setup_execution",
        "description": "tests.unit.packages.app_scripts.app_setup_execution",
        "peekOfCode": "MENU_OPTIONS = (\n    MENU_VENV_OPTIONS\n    | MENU_INSTALL_OPTIONS\n    | MENU_DEPLOY_OPTIONS\n    | MENU_FAST_DEPLOY_OPTIONS\n    | MENU_HELP_OPTIONS\n    | MENU_TEST_OPTIONS\n)\n# getting the project root directory\ncurrent_dir = os.path.dirname(os.path.abspath(__file__))",
        "detail": "tests.unit.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "current_dir",
        "kind": 5,
        "importPath": "tests.unit.packages.app_scripts.app_setup_execution",
        "description": "tests.unit.packages.app_scripts.app_setup_execution",
        "peekOfCode": "current_dir = os.path.dirname(os.path.abspath(__file__))\nroot_dir = os.path.join(current_dir, \"..\")\n# finding the common directory\ncommon_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)",
        "detail": "tests.unit.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "root_dir",
        "kind": 5,
        "importPath": "tests.unit.packages.app_scripts.app_setup_execution",
        "description": "tests.unit.packages.app_scripts.app_setup_execution",
        "peekOfCode": "root_dir = os.path.join(current_dir, \"..\")\n# finding the common directory\ncommon_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)",
        "detail": "tests.unit.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "common_dir",
        "kind": 5,
        "importPath": "tests.unit.packages.app_scripts.app_setup_execution",
        "description": "tests.unit.packages.app_scripts.app_setup_execution",
        "peekOfCode": "common_dir = os.path.join(root_dir, \"app_common\")\n# Construct the path to the utils module\nutils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)",
        "detail": "tests.unit.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "utils_script_path",
        "kind": 5,
        "importPath": "tests.unit.packages.app_scripts.app_setup_execution",
        "description": "tests.unit.packages.app_scripts.app_setup_execution",
        "peekOfCode": "utils_script_path = os.path.join(common_dir, \"app_utils.py\")\n# Load the module dynamically\n# It is necessary to add the module to the sys.modules dictionary\n# to avoid ModuleNotFoundError when importing it from the caller script.\nspec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, line_len_limit: int = 150):\n    \"\"\"",
        "detail": "tests.unit.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "spec",
        "kind": 5,
        "importPath": "tests.unit.packages.app_scripts.app_setup_execution",
        "description": "tests.unit.packages.app_scripts.app_setup_execution",
        "peekOfCode": "spec = importlib.util.spec_from_file_location(\"app_utils_module\", utils_script_path)\n_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, line_len_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, line_len_limit=line_len_limit)\ndef _run_command(command, cwd=None, shell=False):",
        "detail": "tests.unit.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "_UTILS_MODULE",
        "kind": 5,
        "importPath": "tests.unit.packages.app_scripts.app_setup_execution",
        "description": "tests.unit.packages.app_scripts.app_setup_execution",
        "peekOfCode": "_UTILS_MODULE = importlib.util.module_from_spec(spec)\nsys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, line_len_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, line_len_limit=line_len_limit)\ndef _run_command(command, cwd=None, shell=False):\n    \"\"\"",
        "detail": "tests.unit.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "sys.modules[\"app_utils_module\"]",
        "kind": 5,
        "importPath": "tests.unit.packages.app_scripts.app_setup_execution",
        "description": "tests.unit.packages.app_scripts.app_setup_execution",
        "peekOfCode": "sys.modules[\"app_utils_module\"] = _UTILS_MODULE\nspec.loader.exec_module(_UTILS_MODULE)\ndef _do_log(obj, title=None, line_len_limit: int = 150):\n    \"\"\"\n    Wrapper function to call the do_log function from the app_utils module.\n    \"\"\"\n    _UTILS_MODULE._do_log(obj, title=title, line_len_limit=line_len_limit)\ndef _run_command(command, cwd=None, shell=False):\n    \"\"\"\n    Wrapper function to call the run_command function from the app_utils module.",
        "detail": "tests.unit.packages.app_scripts.app_setup_execution",
        "documentation": {}
    },
    {
        "label": "do_run_tests",
        "kind": 2,
        "importPath": "tests.unit.packages.app_scripts.app_test",
        "description": "tests.unit.packages.app_scripts.app_test",
        "peekOfCode": "def do_run_tests(do_log_func, run_cmd_func) -> bool:\n    \"\"\"\n    Run all the tests for the project.\n    \"\"\"\n    do_log_func(\"*** Running all tests for the project...\")\n    # python -m pytest tests/unit/\n    run_cmd_func([\"python\", \"-m\", \"pytest\", \"tests/unit/\"])\n    do_log_func(\"*** All tests passed.\")\n    # While we don't implement this behavior, we'll return True\n    return True",
        "detail": "tests.unit.packages.app_scripts.app_test",
        "documentation": {}
    },
    {
        "label": "test_sqs_queue_created",
        "kind": 2,
        "importPath": "tests.unit.test_knowledge_manager_stack",
        "description": "tests.unit.test_knowledge_manager_stack",
        "peekOfCode": "def test_sqs_queue_created():\n    app = core.App()\n    stack = KnowledgeManagerStack(app, \"knowledge-manager\")\n    template = assertions.Template.from_stack(stack)\n#     template.has_resource_properties(\"AWS::SQS::Queue\", {\n#         \"VisibilityTimeout\": 300\n#     })",
        "detail": "tests.unit.test_knowledge_manager_stack",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "venv.bin.jp",
        "description": "venv.bin.jp",
        "peekOfCode": "def main():\n    parser = argparse.ArgumentParser()\n    parser.add_argument('expression')\n    parser.add_argument('-f', '--filename',\n                        help=('The filename containing the input data.  '\n                              'If a filename is not given then data is '\n                              'read from stdin.'))\n    parser.add_argument('--ast', action='store_true',\n                        help=('Pretty print the AST, do not search the data.'))\n    args = parser.parse_args()",
        "detail": "venv.bin.jp",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app = cdk.App()\nKnowledgeManagerStack(app, \"KnowledgeManagerStack\",\n    # If you don't specify 'env', this stack will be environment-agnostic.\n    # Account/Region-dependent features and context lookups will not work,\n    # but a single synthesized template can be deployed anywhere.\n    # Uncomment the next line to specialize this stack for the AWS Account\n    # and Region that are implied by the current CLI configuration.\n    #env=cdk.Environment(account=os.getenv('CDK_DEFAULT_ACCOUNT'), region=os.getenv('CDK_DEFAULT_REGION')),\n    # Uncomment the next line if you know exactly what Account and Region you\n    # want to deploy the stack to. */",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "app_setup",
        "description": "app_setup",
        "peekOfCode": "def main():\n    \"\"\"\n    Main function to parse command-line arguments and call the appropriate function.\n    \"\"\"\n    # Get the current script directory\n    current_dir = os.path.dirname(os.path.abspath(__file__))\n    # Construct path to sibling directory\n    common_project_dir = os.path.join(current_dir, \"..\", \"aws-common\")\n    # check if script directory exists\n    if not os.path.exists(common_project_dir):",
        "detail": "app_setup",
        "documentation": {}
    }
]